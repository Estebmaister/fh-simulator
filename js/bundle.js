(()=>{var e={620:(e,t,o)=>{const{logger:r}=o(170);e.exports={browserProcess:(e,t,o,n)=>{let a="en";const s=window.location.pathname.split("/");s.length>0&&s.forEach((e=>{"es"==e&&(a="es")})),o.lang=a;const l=(e=>{if(""==e)return{};let t={};for(let o=0;o<e.length;++o){const r=e[o].split("=",2);1==r.length?t[r[0]]="":t[r[0]]=decodeURIComponent(r[1].replace(/\+/g," "))}return t})(window.location.search.substr(1).split("&"));l!=={}&&((e,t,o,n,a)=>{const s={},l=o.filter((t=>t.Formula in e));for(const t in e)if(1===l.filter((e=>e.Formula==t)).length&&""!==e[t]){const o=parseFloat(e[t]);o>0&&o<=100?s[t]=o/100:r.error(`fuel fraction invalid (${o}) for ${t}`)}else if(""!==e[t]){let o;switch(t){default:break;case"t_amb":o=parseFloat(e[t]),o>-n.tempToK&&o<100&&(n.tAmb=o+n.tempToK);break;case"humidity":o=parseFloat(e[t]),o>=0&&o<=100&&(n.humidity=o);break;case"p_atm":o=parseFloat(e[t]),o>.001&&o<1e3&&(n.pAtm=1e3*o);break;case"air_excess":o=parseFloat(e[t]),o>=0&&o<=300&&(n.airExcess=.01*o);break;case"o2_excess":o=parseFloat(e[t]),o>=0&&o<=30&&(n.o2Excess=.01*o);break;case"unit_system":r.debug(t,e[t]),null!=e[t]&&(n.unitSystem=e[t])}}Object.keys(s).length})(l,0,t,o),((e,t,o)=>{r.info(JSON.stringify(e,null,2)),r.debug(JSON.stringify(t,null,2));let n="";n="es"==o?`\nDatos de entrada (en caso de no haber sido introducidos, tomará el predeterminado)\n\n  Sistema de unidades:   ${e.debug_data.unitSystem}\n  Presión atmosférica:   ${e.debug_data.atmPressure}\n  Temperatura ambiente:  ${e.debug_data.ambTemperature}\n  Humedad:               ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:       ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:       ${e.debug_data["dryAirO2_%"]} %\n\n  Presión de aire seco:     ${e.debug_data.dryAirPressure}\n  Presión de vapor de agua: ${e.debug_data.waterPressure}\n  Presión parcial de H2O:   ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Presión parcial de N2:    ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Presión parcial de O2:    ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Contenido húmedo (w):     ${e.debug_data.moisture}-AireSeco\n\nMoles de gases de combustión total y porcentajes por cada mol de combustible\n\n  Flujo total: ${e.flows.total_flow}\n  Flujo seco:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Porcentajes en base húmeda\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Exceso de aire usado: ${e.flows["air_excess_%"]} %\n  Moles O2 requeridos/mol de combustible (teórico): ${e.flows.O2_mol_req_theor}\n\n  Relación A/C molar húmeda:  ${e.flows.AC}\n  Relación A/C másica húmeda: ${e.flows.AC_mass}\n  Relación A/C molar (aire seco, teórica):    ${e.flows.AC_theor_dryAir}\n  Relación A/C másica (aire húmedo, teórica): ${e.flows.AC_mass_theor_moistAir}\n\n  Peso molecular del combustible: ${e.flows.fuel_MW}\n  Cp(t_entrada) del combustible:  ${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Peso molecular de los gases de combustión: ${e.flows.flue_MW}\n  Cp(t_amb) de los gases de combustión: ${e.flows.flue_Cp_Tamb}\n`:`\nInput Data \n  (in case of no input, default values will be taken)\n\n  Unit System:          ${e.debug_data.unitSystem}\n  Atmospheric Pressure: ${e.debug_data.atmPressure}\n  Ambient Temperature:  ${e.debug_data.ambTemperature}\n  Humidity:             ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:      ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:      ${e.debug_data["dryAirO2_%"]} %\n\n  Dry Air Pressure:     ${e.debug_data.dryAirPressure}\n  Water Vapor Pressure: ${e.debug_data.waterPressure}\n  Partial Pressure H2O: ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Partial Pressure N2 : ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Partial Pressure O2 : ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Moisture content (w): ${e.debug_data.moisture}-dryAir\n\nTotal flue gas moles and percentage (per fuel mol)\n\n  Flow total: ${e.flows.total_flow}\n  Dry total:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Moist basis percentage\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Air excess used : ${e.flows["air_excess_%"]} %\n  Moles O2 required/fuel-mol (theoretical): ${e.flows.O2_mol_req_theor}\n\n  A/C molar moist relation:   ${e.flows.AC}\n  A/C mass moist relation:    ${e.flows.AC_mass}\n  A/C molar relation (dry air, theoretical):   ${e.flows.AC_theor_dryAir}\n  A/C mass relation (moist air, theoretical):  ${e.flows.AC_mass_theor_moistAir}\n\n  Fuel mol weight:    ${e.flows.fuel_MW}\n  Fuel Cp(t_fuel_in):\t${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Flue gas mol weight: ${e.flows.flue_MW}\n  Flue gas Cp(t_amb):  ${e.flows.flue_Cp_Tamb}\n`,document.getElementById("loader-wrapper").remove(),document.getElementById("output-data").textContent=n})(n(e,o),l,a)}}},392:(e,t,o)=>{const{newtonRaphson:r,options:n,logger:a,round:s,roundDict:l,initSystem:i}=o(170),u=o(684),c={O2:.2095,N2:.7905,H2O:0},m=(e,t={})=>{const o=Object.values(e).reduce(((e,t)=>e+t)),r=Math.abs(1-o)<=3e-12;return r||(t.err+=`[fuel fraction not equal to 1, total: ${o}. fuels: ${Object.keys(e)}],`),r},_=(e,t)=>{normalFuel={...e},total=Object.values(normalFuel).reduce(((e,t)=>e+t));for(const e in normalFuel)normalFuel[e]=normalFuel[e]/total;return n.verbose&&a.debug(`Normalizing ${t}, total: ${total}`),normalFuel},d=({c0:e,c1:t,c2:o,c3:r,MW:l,Substance:i},u)=>c=>(c<250&&a.warn(`temp [${s(c)}] ${i} bellow range for Cp0 formula`),c>1200&&n.verbose&&a.warn(`temp [${s(c)}] ${i} above range for Cp0 formula`),"-"===e?(a.warn(`wrong use of Cp0, called for compound ${i}, no data found`),0):u?l*(e+t*(.001*c)+o*(.001*c)**2+r*(.001*c)**3):e+t*(.001*c)+o*(.001*c)**2+r*(.001*c)**3),O=(e,t)=>{if(0===e.length)return e=>0;let o=JSON.parse(JSON.stringify(e));m(e)||(o=_(o,"Cp_multicomp"));const r=u.filter((e=>e.Formula in o)),n=[];let a=0;for(const e in o)n[a]=n=>o[e]*d(r.filter((t=>t.Formula==e))[0],t)(n),a++;return n.reduce(((e,t)=>o=>e(o)+t(o)),(e=>0))},f=e=>{if(0===e.length)return e=>0;let t=JSON.parse(JSON.stringify(e));m(e)||(t=_(t,"MW_multicomp"));const o=u.filter((e=>e.Formula in t));let r=0;for(const e in t)r+=o.filter((t=>t.Formula==e))[0].MW*t[e];return r},p=(e,t)=>{const o=e-n.tempToK;return 610.78*Math.exp(o/(o+238.3)*17.2694)*t*.01},C=(e,t)=>{const o=p(e,t);return u[31].MW*o/(f(c)*(n.pAtm-o))},h=(e,t)=>"-"===e.Cp0?"-"===e.h0?(n.verbose&&a.warn(`wrong use of deltaH func, called for compound ${e.Substance} without data`),void 0===t?()=>0:0):void 0===t?()=>e.h0:e.h0:void 0===t?t=>e.h0+e.MW*d(e)((n.tempAmbRef+t)/2)*(t-n.tempAmbRef):e.h0+e.MW*d(e)((n.tempAmbRef+t)/2)*(t-n.tempAmbRef),b=(e,t,o,r)=>{const a=h(u[6]),s=h(u[34]),l=h(u[2]);let i=h(u[31]);return!0===r&&(i=h(u[32])),void 0===o&&(o=n.tAmb),void 0===t?t=>e.CO2*a(t)+e.SO2*s(t)+e.H2O*i(t)-h(e)(o)-e.O2*l(o):e.CO2*a(t)+e.SO2*s(t)+e.H2O*i(t)-h(e)(o)-e.O2*l(o)};e.exports={combSection:(e,t,o)=>{const d=i(o.unitSystem),g={err:"",atmPressure:d.pressure(o.p_atm),ambTemperature:d.tempC(o.t_amb),"humidity_%":s(o.humidity),"dryAirN2_%":s(79.05),"dryAirO2_%":s(20.95),moisture:d.moist(C(o.t_amb,o.humidity)),unitSystem:d.system[o.lang]},N=u.filter(((e,o,r)=>e.Formula in t)),S={...t};m(t,g)||(S=_(t,"combSection"));const $={O2:0,N2:0,H2O:0,CO2:0,SO2:0},w={...c};((e,t,o={})=>{const r=Math.abs(t.length-Object.keys(e).length);0===r||(a.error(`[some fuels aren't in the database, #badFuels: ${r}],`),o.err+=`[some fuels aren't in the database, #badFuels: ${r}],`)})(S,N,g);for(const e of N)for(const t in $)if("N2"!=t)$[t]+=e[t]*S[e.Formula];else{if("N2"==e.Formula||'"N2a'==e.Formula){$[t]+=S[e.Formula];continue}$[t]+=e.O2*S[e.Formula]*3.7732696897374702}e-1e-6<0&&(e=0),o.humidity-1e-6<0&&(o.humidity=0);let y=$.O2,F=y*(1+e);if($.O2<=0||$.N2<0)a.error(`airExcess set to 0, O2 in fuel is greater than or equal to needed. Products O2:${$.O2}, N2:${$.N2}`),F=0,y=0,$.N2=S.N2,$.O2=-$.O2;else{const e=p(o.t_amb,o.humidity),t=o.p_atm-e;w.N2=.7905*t/o.p_atm,w.O2=.2095*t/o.p_atm,w.H2O=e/o.p_atm,g.dryAirPressure=d.pressure(t),g.waterPressure=d.pressure(e),g["H2OPressure_%"]=s(100*w.H2O),g["N2Pressure_%"]=s(100*w.N2),g["O2Pressure_%"]=s(100*w.O2),$.O2=F-$.O2,$.N2+=$.O2*(w.N2/w.O2),$.H2O+=$.N2*(e/(w.N2*o.p_atm))}o.NCV=-((e,t,o,r)=>{let n=0;for(const a in e){if(a in t)continue;const s=o.filter((e=>e.Formula==a))[0];n+=e[a]*b(s)(r)}return n})(S,$,N,o.t_amb),o.adFlame=r(((e,t,o,r)=>{const a=u.filter((t=>t.Formula in e)),s=h(u.filter((e=>"O2"==e.Formula))[0]),l=h(u.filter((e=>"N2"==e.Formula))[0]),i=h(u.filter((e=>"CO2"==e.Formula))[0]),c=h(u.filter((e=>"H2O"==e.Formula))[0]),m=h(u.filter((e=>"SO2"==e.Formula))[0]);void 0===o&&(o=n.tAmb),void 0===r&&(r=0);const _=[];let d=0;for(const t in e)_[d]=e[t]*h(a.filter((e=>e.Formula==t))[0])(o),d++;return e=>(e=>t.CO2*i(e)+t.SO2*m(e)+t.H2O*c(e)+t.O2*s(e)+t.N2*l(e)-t.N2*l(o)-r*s(o))(e)-_.reduce(((e,t)=>e+t))})(S,$,o.t_amb,F),1700,o.NROptions,"fuel_adFlame"),a.info(`Adiabatic flame temp: [${s(o.adFlame)} K] ${d.tempC(o.adFlame)}`);let H=0,v=0;for(const e in $)H+=$[e],"H2O"!==e&&(v+=$[e]);const M={total_flow:s(H),dry_total_flow:s(v),"N2_%":s(100*$.N2/H),"H2O_%":s(100*$.H2O/H),"CO2_%":s(100*$.CO2/H),"O2_%":s(100*$.O2/H),O2_mol_req_theor:s(y),O2_mass_req_theor:d.mass(y*u[2].MW),"air_excess_%":s(100*o.airExcess),AC:s(F/w.O2),AC_theor_dryAir:s(y/.2095),AC_mass:s(F/w.O2*f(w)/f(S)),AC_mass_theor_moistAir:s(y/w.O2*f(w)/f(S)),fuel_MW:d["mass/mol"](f(S)),fuel_Cp:d.cp(O(S,!0)(o.t_fuel)),flue_MW:d["mass/mol"](f($)),flue_Cp_Tamb:d.cp(O($,!0)(o.t_amb)),NCV:d["energy/mol"](o.NCV)};return o.m_fuel_seed=120,o.m_flue_ratio=M.total_flow,o.m_air_ratio=M.AC,o.Cp_flue=O($,!1),o.Cp_air=O(w,!1),o.Cp_fuel=O(S,!1),l($),l(M),l(g),""==g.err&&delete g.err,{flows:M,products:$,debug_data:g}}}},113:(e,t,o)=>{const{newtonRaphson:r,logger:n,unitConv:a}=o(170),{options:s,initSystem:l}=o(170),i=l(s.unitSystem),u=(e,t,o)=>{let a=0,s=0,l=t||o.t_out,u=e||o.m_fuel;null==o&&(o={});const c=o.t_air,m=o.t_fuel,_=o.t_amb,d=o.N_rad||42,O=o.N_shld||16,f=o.L_rad||20.024,p=o.Do_rad||.219,C=o.Di_rad||.219,h=o.CtoC||.394,b=(o.Width_rad,o.Length_rad,o.Tall_rad,o.kw_tube),g=o.h_conv||30.66,N=Math.PI||3.14159,S=d*h*f,$=O*h*f,w=2.041e-7,y=d*N*p*f,F=o.efficiency||.8,H=o.duty_conv_dist||.3,v=o.m_fluid||225700,M=o.NCV,A=o.Cp_fuel(.5*(m+_)),x=o.Cp_air(.5*(c+_)),I=(e,t)=>o.Cp_fluid(.5*(e+t)),W=(e,t=_)=>o.Cp_flue(.5*(e+t));let k=0;const D=(e,t=s,o=k)=>o/y*(p/C)*(0+1/2992+C*Math.log(p/C)/(2*b))+((e,t=s)=>.5*(t+e))(e,t),R=(e,t=c,r=_)=>((e=u)=>o.m_air_ratio*e)(e)*x*(t-r),P=e=>e*M,T=(e,t=m,o=_)=>e*A*(t-o),E=(e,t=c,o=m,r=_)=>P(e)+R(e,t,r)+T(e,o,r),B=(e=u)=>.015*P(e),J=(e,t=l,o=s)=>w*(.904*S)*.629*(e**4-D(t,o)**4),K=(e,t=l,o=s)=>g*y*(e-D(t,o)),U=(e,t=l,o=s)=>w*(1*$)*.629*(e**4-D(t,o)**4),Q=(e,t=u,r=_)=>((e=u)=>o.m_flue_ratio*e)(t)*W(e,r)*(e-r),j=(e,t=l,o=u,r=s,n=_)=>((e,t=l,o=s)=>J(e,t,o)+K(e,t,o))(e,t,r)+U(e,t,r)+B(o)+Q(e,o,n);let L=0,q=0;if(void 0!==t){q=v*I(o.t_in_conv,l)*(l-o.t_in_conv),k=q*(1-H),s=o.t_in_conv+q*H/(v*I(o.t_in_conv,l)),L=r((e=>v*I(s,l)*(l-s)-(J(e)+K(e))),1e3,o.NROptions,"rad_Tg_Tout"),0!=L&&(a=L);const e=e=>j(a,l,e)-E(e),t=v*I(o.t_in_conv,l)*(l-o.t_in_conv)/(M*F);u=r(e,t,o.NROptions,"rad_mFuel"),0!=u&&(o.m_fuel=u),n.info(`vars with t_out given: {\n    T_(inRad) from Duty estimation: ${i.tempC(s)}\n    T_(out) from Duty estimation: ${i.tempC(l)}\n    T_(w) from Duty estimation: ${i.tempC(D(l))}\n    M_(seed): ${i["mass/mol"](t)}\n  }`)}else if(void 0!==e){q=P(e)*F,s=o.t_in_conv+q*H/(v*I(o.t_in_conv)),t=o.t_in_conv+q/(v*I(s)),n.info(`t_in_rad, seed: ${s} vs problem: ${o.t_in_rad}`),L=r((e=>j(e,t,u)-E(u)),1e3,o.NROptions,"rad_Tg_mFuel"),0!=L&&(a=L),l=r((e=>v*I(s,t)*(e-s)-(J(a)+K(a))),t,o.NROptions,"rad_Tout"),0!=l&&(o.t_out=l),n.info(`t_out, seed: ${t} vs calc: ${l}`);const i=v*I(s,l)*(l-o.t_in_conv),c=o.t_in_conv+i*H/(v*I(s,l));n.info(`t_in_rad, seed: ${s} vs calc: ${c}`)}else o.err+="-wrong call for rad section, no seed for mass fuel or out temp.";n.debug(`vars to check: {\n    kw_tube:  ${i.thermal(b)}\n    kw_fluid:  ${i.thermal(o.kw_fluid(200))}\n    h_conv:   ${i.convect(g)}\n    duty:     ${i.heat_flow(q)}\n    duty_rad: ${i.heat_flow(k)}\n    At_rad:   ${i.area(y)}\n    duty_flux:${i.heat_flux(k/y)}\n    Do/Di:    ${p/C}\n    factor_hi:${0+1/2992+C*Math.log(p/C)/(2*b)}\n  }`),o.t_out=l,o.t_in_rad=s,o.t_g=a;const V={m_fuel:u,Tw:D(l),t_out:l,t_in_rad:s,t_g:a,Q_in:E(u),Q_rls:P(u),Q_air:R(u),Q_fuel:T(u),Q_out:j(a,l,u),Q_losses:B(u),Q_rad:J(a,l),Q_conv:K(a),Q_shld:U(a),Q_flue:Q(a),Q_fluid:((e=l,t=s)=>v*I(e,t)*(e-t))(),Cp_fluid:i.cp(I(s,l)),Cp_fuel:A,Cp_air:x,Cp_flue:W(a)};return n.info("debug",JSON.stringify(V,null,2)),V};e.exports={radSection:e=>{let t={};return void 0!==e.t_out?t=u(void 0,e.t_out,e):void 0!==e.m_fuel?t=u(e.m_fuel,void 0,e):e.err+="-wrong call for rad section, no seed for mass fuel or out temp.",t}}},361:(e,t,o)=>{const{newtonRaphson:r,options:n,log:a}=o(170);e.exports={shieldSection:e=>{let t=e.t_in_rad,o=e.t_in_sh,s=e.Tg,l=0;const i=e.m_fuel,u=e.m_fluid,c=e.Cp_fluid,m=e.h_conv_rad||30.66,_=e.shld_tubes_rad||8,d=e.tube_l_rad||20.024,O=3.14159*_*(e.do_rad||.219)*d,f=(e,o=s)=>m*O*(e-((e,o=t)=>100+.5*(e+o))(e,o)),p=(t,o=s)=>((t=i)=>e.m_flue_ratio*t)()*((t,o=s)=>e.Cp_flue(.5*(o+t)))(t,o)*(t-o);a("Q_conv_sh: "+f(500)+", Q_flue_sh: "+p(500)),flame=r(((e,t=s)=>p(e,t)-f(e,t)),s,n,"shield_Tg"),0!=flame&&(l=flame),e.Tg_sh=l,flame_t_in=r(((e,o=l,r=s)=>((e,o=t)=>u*c*(o-e))(e)-f(o,r)),t,n,"shield_t_in"),0!=flame_t_in&&(o=flame_t_in),e.t_in_sh=o}}},170:e=>{const t=function(...arguments){if(0!==arguments.length)switch(arguments[0]){case"warn":for(var e=1;e<arguments.length;e++)console.log(`{"WARN": "${arguments[e]}"}`);break;case"info":for(e=1;e<arguments.length;e++)console.log(`{"INFO": "${arguments[e]}"}`);break;case"error":for(e=1;e<arguments.length;e++)console.error(`{"ERROR": "${arguments[e]}"}`);break;case"debug":for(e=1;e<arguments.length;e++)console.debug(`{"DEBUG": ${arguments[e]}}`);break;default:for(e=0;e<arguments.length;e++)console.log(`{"DEFAULT": "${arguments[e]}"}`)}},o=(...arguments)=>{let e="";for(var t=1;t<arguments.length;t++)e+=arguments[t];console.log(`{'${arguments[0]}': '${e}'}`)},r={info:(...arguments)=>o("INFO",arguments),warn:(...arguments)=>o("WARN",arguments),error:(...arguments)=>o("ERROR",arguments),debug:(...arguments)=>o("DEBUG",arguments),default:(...arguments)=>o("DEFAULT",arguments)},n=273.15,a=298.15,s={RtoK:e=>e*(5/9),KtoR:e=>1.8*e,CtoK:e=>e+n,CtoF:e=>1.8*e+32,FtoC:e=>5/9*(e-32),FtoK:e=>5/9*(e-32)+n,kgtolb:e=>2.20462*e,lbtokg:e=>e/2.20462,kJtoBTU:e=>e/1.05506,BTUtokJ:e=>1.05506*e,fttom:e=>e/3.28084,mtoft:e=>3.28084*e,intom:e=>e/39.3701,mtoin:e=>39.3701*e,CpENtoCpSI:e=>1.05506*e/(5/9)*2.20462,kwENtokwSI:e=>1.05506*e/(5/9)*3.28084,BtuHtoW:e=>e/3.4121416331},l=(()=>{const e={verbose:!0,tAmb:a,humidity:0,o2Excess:0,airExcess:0,pAtm:101325,unitSystem:"SI",lang:"en",NROptions:{tolerance:1e-4,epsilon:3e-8,maxIterations:20,h:1e-4,verbose:!0},tempToK:n,tempAmbRef:a};return"undefined"==typeof process||(e.verbose="true"==process.argv[2],e.unitSystem=process.argv[3],e.tAmb=n+parseFloat(process.argv[4])||a,e.humidity=parseFloat(process.argv[5])||0,e.o2Excess=.01*parseFloat(process.argv[6])||0,e.airExcess=.01*parseFloat(process.argv[7])||0,e.pAtm=parseFloat(process.argv[8])||101325,e.NROptions.verbose="true"==process.argv[2]),e})(),i=e=>(Math.round(1e3*e)/1e3).toFixed(3);l.verbose&&t("debug",JSON.stringify(l,null,2));const u={"energy/mol":e=>i(s.kJtoBTU(e))+" Btu/mol","mass/mol":e=>i(2.2046244202*e)+" lb/lb-mol",heat_flow:e=>i(1e-6*s.kJtoBTU(e))+" MMBtu/h",heat_flux:e=>i(s.kJtoBTU(e)/s.mtoft(1)**2)+" Btu/h-ft2",fouling_factor:e=>i(10.763910417*e*1.8/.94781712)+" h-ft2-°F/Btu","energy/mass":e=>i(s.kJtoBTU(e)/s.kgtolb(1))+" Btu/lb","energy/vol":e=>i(s.kJtoBTU(e)/s.mtoft(1)**3)+" Btu/ft3",area:e=>i(10.763910417*e)+" ft2",length:e=>i(s.mtoft(e))+" ft",temp:e=>i(s.KtoR(e))+" °R",tempC:e=>i(s.CtoF(e-n))+" °F",pressure:e=>i(.0001450377*e)+" psi",mass:e=>i(.0022046244202*e)+" lb",mass_flow:e=>i(s.kgtolb(e))+" lb/h",vol_flow:e=>i(s.mtoft(e)**3)+" f3/h",cp:e=>i(.238845896627*e)+" Btu/lb-mol °F",power:e=>i(3.4121416331*e)+" Btu/h",moist:e=>i(1e3*e)+"x10^(-3) lb-H2O/lb",thermal:e=>i(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1))+" BTU/h-ft-F",convect:e=>i(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1)**2)+" BTU/h-ft2-F",system:{en:"English",es:"Inglés"}},c={"energy/mol":e=>i(1*e)+" kJ/mol","mass/mol":e=>i(1*e)+" kg/kmol",heat_flow:e=>i(1e-6*e)+" MW/h",heat_flux:e=>i(1*e)+" W/m2",fouling_factor:e=>i(1*e)+" m2-K/W","energy/mass":e=>i(1*e)+" kJ/kg","energy/vol":e=>i(1*e)+" kJ/m3",area:e=>i(1*e)+" m2",length:e=>i(1*e)+" m",tempC:e=>i(1*e-n)+" °C",temp:e=>i(1*e)+" K",pressure:e=>i(.001*e)+" kPa",mass:e=>i(.001*e)+" kg",mass_flow:e=>i(1*e)+" kg/h",vol_flow:e=>i(1*e)+" m3/h",cp:e=>i(1*e)+" kJ/kmol K",power:e=>i(1*e)+" W",moist:e=>i(1e3*e)+" g-H2O/kg",thermal:e=>i(1*e)+" kJ/h-m-C",convect:e=>i(1*e)+" kJ/h-m2-C",system:{en:"SI",es:"SI"}};e.exports={newtonRaphson:function(e,o,r,n,a){let s,l,i,u,c,m,_,d,O,f,p,C,h,b;for("function"!=typeof o&&(a=n,n=r,r=o,o=null),u=void 0===(n=n||{}).tolerance?1e-7:n.tolerance,b=void 0===n.epsilon?222e-17:n.epsilon,c=void 0===n.maxIterations?20:n.maxIterations,p=void 0===n.h?1e-4:n.h,h=void 0!==n.verbose&&n.verbose,C=1/p,m=0;m++<c;){if(l=e(r),o?i=o(r):(_=e(r+p),d=e(r-p),O=e(r+2*p),f=e(r-2*p),i=(f-O+8*(_-d))*C/12),Math.abs(i)<=b*Math.abs(l))return h&&t("info",`Newton-Raphson (${a}): failed to converged due to nearly zero first derivative`),!1;if(s=r-l/i,Math.abs(s-r)<=u*Math.abs(s))return h&&t("info",`Newton-Raphson (${a}): converged to x = ${s} after ${m} iterations`),s;r=s}return h&&t("info",`Newton-Raphson (${a}): Maximum iterations reached (${c})`),!1},options:l,log:t,logger:r,unitConv:s,round:i,roundDict:(e={})=>{for(const[t,o]of Object.entries(e))isNaN(o)||""===o||(e[t]=i(o))},linearApprox:({x1:e,x2:t,y1:o,y2:n})=>{if("number"!=typeof o)return r.error(`call for linearApprox with bad value: ${o}`),()=>0;if(e==t||null==t||null==n)return()=>o;const a=(n-o)/(t-e);return t=>a*(t-e)+o},initSystem:e=>{if("string"!=typeof e)return l.verbose&&t("warn",`invalid type (${e}) for unit system, using default SI`),c;switch(e.toLowerCase()){case"si":return c;case"english":return u;default:return t("warn",e.toLowerCase()+" - invalid unit system, using default SI"),c}}}},684:e=>{"use strict";e.exports=JSON.parse('[{"ID":0,"Substance":"Carbon","Formula":"C","MW":12.011,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":1,"N2":3.77326968974,"SO2":0,"CO2":1,"H2O":0},{"ID":1,"Substance":"Hydrogen","Formula":"H2","MW":2.0159,"h0":0,"Cp0":14.209,"c0":13.46,"c1":4.6,"c2":-6.85,"c3":3.79,"O2":0.5,"N2":1.88663484487,"SO2":0,"CO2":0,"H2O":1},{"ID":2,"Substance":"Oxygen","Formula":"O2","MW":31.9988,"h0":0,"Cp0":0.922,"c0":0.88,"c1":-0.0001,"c2":0.54,"c3":-0.33,"O2":-1,"N2":0,"SO2":0,"CO2":0,"H2O":0},{"ID":3,"Substance":"Nitrogen","Formula":"N2","MW":28.0134,"h0":0,"Cp0":1.042,"c0":1.11,"c1":-0.48,"c2":0.96,"c3":-0.42,"O2":0,"N2":1,"SO2":0,"CO2":0,"H2O":0},{"ID":4,"Substance":"Nitrogen (atm)","Formula":"N2a","MW":28.158,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":0,"N2":1,"SO2":0,"CO2":0,"H2O":0},{"ID":5,"Substance":"Carbon Monoxide","Formula":"CO","MW":28.0104,"h0":-110527,"Cp0":1.041,"c0":1.1,"c1":-0.46,"c2":1,"c3":-0.454,"O2":0.5,"N2":1.88663484487,"SO2":0,"CO2":1,"H2O":0},{"ID":6,"Substance":"Carbon Dioxide","Formula":"CO2","MW":44.0098,"h0":-393522,"Cp0":0.842,"c0":0.45,"c1":1.67,"c2":-1.27,"c3":0.39,"O2":0,"N2":0,"SO2":0,"CO2":1,"H2O":0},{"ID":7,"Substance":"Methane","Formula":"CH4","MW":16.0428,"h0":-74873,"Cp0":2.254,"c0":1.2,"c1":3.25,"c2":0.75,"c3":-0.71,"O2":2,"N2":7.54653937948,"SO2":0,"CO2":1,"H2O":2},{"ID":8,"Substance":"Ethane","Formula":"C2H6","MW":30.0697,"h0":-84740,"Cp0":1.766,"c0":0.18,"c1":5.92,"c2":-2.31,"c3":0.29,"O2":3.5,"N2":13.2064439141,"SO2":0,"CO2":2,"H2O":3},{"ID":9,"Substance":"Propane","Formula":"C3H8","MW":44.0966,"h0":-103900,"Cp0":1.679,"c0":-0.096,"c1":6.95,"c2":-3.6,"c3":0.73,"O2":5,"N2":18.8663484487,"SO2":0,"CO2":3,"H2O":4},{"ID":10,"Substance":"n-Butane","Formula":"C4H10","MW":58.1235,"h0":-126200,"Cp0":1.716,"c0":0.163,"c1":5.7,"c2":-1.906,"c3":-0.049,"O2":6.5,"N2":24.5262529833,"SO2":0,"CO2":4,"H2O":5},{"ID":11,"Substance":"Isobutane","Formula":"iC4H10","MW":58.1235,"h0":-135000,"Cp0":1.547,"c0":0.206,"c1":5.67,"c2":-2.12,"c3":0.183,"O2":6.5,"N2":24.5262529833,"SO2":0,"CO2":4,"H2O":5},{"ID":12,"Substance":"n-Pentane","Formula":"C5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":8,"N2":30.1861575179,"SO2":0,"CO2":5,"H2O":6},{"ID":13,"Substance":"Isopentane","Formula":"iC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":8,"N2":30.1861575179,"SO2":0,"CO2":5,"H2O":6},{"ID":14,"Substance":"Neopentane","Formula":"nC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":8,"N2":30.1861575179,"SO2":0,"CO2":5,"H2O":6},{"ID":15,"Substance":"n-Hexane","Formula":"C6H14","MW":86.1773,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":9.5,"N2":35.8460620525,"SO2":0,"CO2":6,"H2O":7},{"ID":16,"Substance":"Ethylene","Formula":"C2H4","MW":28.0538,"h0":52467,"Cp0":1.548,"c0":0.136,"c1":5.58,"c2":-3,"c3":0.63,"O2":3,"N2":11.3198090692,"SO2":0,"CO2":2,"H2O":2},{"ID":17,"Substance":"Propylene","Formula":"C3H6","MW":42.0807,"h0":20410,"Cp0":1.437,"c0":0.454,"c1":4.06,"c2":-0.934,"c3":-0.133,"O2":4.5,"N2":16.9797136038,"SO2":0,"CO2":3,"H2O":3},{"ID":18,"Substance":"n-Butene (Butylene)","Formula":"C4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":6,"N2":22.6396181384,"SO2":0,"CO2":4,"H2O":4},{"ID":19,"Substance":"Isobutene","Formula":"iC4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":6,"N2":22.6396181384,"SO2":0,"CO2":4,"H2O":4},{"ID":20,"Substance":"n-Pentene","Formula":"C5H10","MW":70.1345,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":7.5,"N2":28.299522673,"SO2":0,"CO2":5,"H2O":5},{"ID":21,"Substance":"Benzene","Formula":"C6H6","MW":78.1137,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":7.5,"N2":28.299522673,"SO2":0,"CO2":6,"H2O":3},{"ID":22,"Substance":"Toluene","Formula":"C7H8","MW":92.1406,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":9,"N2":33.9594272076,"SO2":0,"CO2":7,"H2O":4},{"ID":23,"Substance":"Xylene","Formula":"C8H10","MW":106.1675,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":10.5,"N2":39.619331742,"SO2":0,"CO2":8,"H2O":5},{"ID":24,"Substance":"Acetylene","Formula":"C2H2","MW":26.0379,"h0":226731,"Cp0":1.699,"c0":1.03,"c1":2.91,"c2":-1.92,"c3":0.54,"O2":2.5,"N2":9.43317422434,"SO2":0,"CO2":2,"H2O":1},{"ID":25,"Substance":"Naphthalene","Formula":"C10H8","MW":128.1736,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":12,"N2":45.279236277,"SO2":0,"CO2":10,"H2O":4},{"ID":26,"Substance":"Methyl alcohol (Methanol)","Formula":"CH3OH","MW":32.0422,"h0":-201300,"Cp0":1.405,"c0":0.66,"c1":2.21,"c2":0.81,"c3":-0.89,"O2":1.5,"N2":5.65990453461,"SO2":0,"CO2":1,"H2O":2},{"ID":27,"Substance":"Ethyl alcohol (Ethanol)","Formula":"C2H5OH","MW":46.0691,"h0":-235000,"Cp0":1.427,"c0":0.2,"c1":-4.65,"c2":-1.82,"c3":0.03,"O2":3,"N2":11.3198090692,"SO2":0,"CO2":2,"H2O":3},{"ID":28,"Substance":"Ammonia","Formula":"NH3","MW":17.0306,"h0":-45720,"Cp0":2.13,"c0":1.6,"c1":1.4,"c2":1,"c3":-0.7,"O2":0.75,"N2":2.82995227,"SO2":0,"CO2":0,"H2O":1.5},{"ID":29,"Substance":"Sulfur","Formula":"S","MW":32.066,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":1,"N2":3.77326968974,"SO2":1,"CO2":0,"H2O":0},{"ID":30,"Substance":"Hydrogen sulfide","Formula":"H2S","MW":34.0819,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":1.5,"N2":5.65990453461,"SO2":1,"CO2":0,"H2O":1},{"ID":31,"Substance":"Steam (Water vapor)","Formula":"H2O","MW":18.0153,"h0":-241826,"Cp0":1.872,"c0":1.79,"c1":0.107,"c2":0.586,"c3":-0.2,"O2":0,"N2":0,"SO2":0,"CO2":0,"H2O":1},{"ID":32,"Substance":"Water (liquid)","Formula":"H2Ol","MW":18.0153,"h0":-285830,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","O2":0,"N2":0,"SO2":0,"CO2":0,"H2O":1},{"ID":33,"Substance":"Dry Air","Formula":"N2+O2","MW":28.8483,"h0":0,"Cp0":1.004,"c0":1.05,"c1":-0.365,"c2":0.85,"c3":-0.39,"O2":0.2095,"N2":0.7905,"SO2":0,"CO2":0,"H2O":0},{"ID":34,"Substance":"Sulfur dioxide","Formula":"SO2","MW":62.059,"h0":-296842,"Cp0":0.624,"c0":0.37,"c1":1.05,"c2":-0.77,"c3":0.21,"O2":0,"N2":0,"SO2":1,"CO2":0,"H2O":0}]')}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,o),a.exports}(()=>{const{newtonRaphson:e,options:t,logger:r,linearApprox:n,unitConv:a}=o(170),{combSection:s}=o(392),{radSection:l}=o(113),{shieldSection:i}=o(361),{browserProcess:u}=o(620),c=o(684),m=(t,o)=>{const i=(e=>({p_atm:e.pAtm,t_air:e.tAmb,t_fuel:e.tAmb,t_amb:e.tAmb,humidity:e.humidity,airExcess:e.airExcess,o2Excess:e.o2Excess,duty_conv_dist:.3,efficiency:.8,max_duty:a.BTUtokJ(71527.6),m_fluid:500590,miu:n({x1:a.FtoK(678),y1:1.45,x2:a.FtoK(772),y2:.96}),Cp_fluid:n({x1:a.FtoK(678),y1:a.CpENtoCpSI(.676),x2:a.FtoK(772),y2:a.CpENtoCpSI(.703)}),kw_fluid:n({x1:a.FtoK(678),y1:a.kwENtokwSI(.038),x2:a.FtoK(772),y2:a.kwENtokwSI(.035)}),t_in_conv:a.FtoK(678),t_out:a.FtoK(772),h_conv:a.BTUtokJ(1.5)/a.RtoK(1)/a.fttom(1)**2,CtoC:a.intom(2),kw_tube:a.BTUtokJ(11.508)/a.RtoK(1)/a.fttom(1),N_rad:42,L_rad:a.fttom(60),Do_rad:a.intom(8.625),Di_rad:a.intom(8),Width_rad:17.5,Length_rad:27,Tall_rad:64.55,N_cnv:40,L_cnv:a.fttom(60),Do_cnv:a.intom(6.625),N_shld:16,L_shld:a.fttom(60),Do_shld:a.intom(6.625),unitSystem:e.unitSystem,lang:e.lang,NROptions:e.NROptions}))(o);if(0!=i.o2Excess){const o=e=>{const o=s(e,t,i);return r.info("O2%: "+o.flows["O2_%"]+" vs O2excess: "+100*i.o2Excess),o.flows["O2_%"]/100-i.o2Excess},n=e(o,.5,i.NROptions,"o2_excess_to_air");0!=n&&(i.airExcess=n)}else i.airExcess=o.airExcess;s(i.airExcess,t,i);const u=l(i);r.info("Radiant section (K) Tg: "+u.t_g),r.info("Fuel mass (kg/h) "+u.m_fuel)};let _={H2:.1142,N2:.0068,CO:.0066,CO2:.0254,CH4:.5647,C2H6:.1515,C3H8:.0622,C4H10:.0176,iC4H10:.0075,C2H4:.0158,C3H6:.0277};if("undefined"!=typeof window)u(_,c,t,m);else{const e=m(_,t);r.debug(JSON.stringify(e,null,2))}})()})();