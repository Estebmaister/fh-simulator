(()=>{var e={620:(e,t,n)=>{const{optionsModifier:o}=n(691),{graphicData:a}=n(624),{logger:r}=n(170),{stringRadResult:s,stringShldResult:u,stringConvResult:l,stringCombResult:i}=n(30);e.exports={browserProcess:(e,t,n,_)=>{let c="en";const d=window.location.pathname.split("/");d.length>0&&d.forEach((e=>{"es"!=e&&"es_graph"!=e||(c="es")})),n.lang=c;const f=(e=>{if(""==e)return{};let t={};for(const n of e){const e=n.split("=",2);1==e.length?t[e[0]]="":t[e[0]]=decodeURIComponent(e[1].replace(/\+/g," "))}return t})(window.location.search.substring(1).split("&"));f!=={}&&(e=((e,t,n,a)=>{const s={},u=n.filter((t=>t.Formula in e));for(const t in e)if(1===u.filter((e=>e.Formula==t)).length&&""!==e[t]){const n=parseFloat(e[t]);n>0&&n<=100?s[t]=n/100:r.error(`fuel fraction invalid (${n}) for ${t}`)}else""!==e[t]&&void 0!==e[t]&&o(t,e,a);return 0!==Object.keys(s).length&&(t=s),t})(f,e,t,n)),d[1].includes("_graph")||d[2].includes("_graph")?a(_,e,n):((e,t,n,o)=>{r.debug(JSON.stringify(t,null,2));const a=document.getElementById("loader-wrapper");a&&a.remove();const _=document.getElementById("output-combustion");_&&(_.textContent=i(n,e,o));const c=document.getElementById("output-radiant");c&&(c.textContent=s(n,e.rad_result,o));const d=document.getElementById("output-shield");d&&(d.textContent=u(n,e.shld_result,o));const f=document.getElementById("output-convective");f&&(f.textContent=l(n,e.conv_result,o))})(_(e,n),f,c,n.unitSystem)}}},624:(e,t,n)=>{const{logger:o,unitConv:a}=n(170);e.exports={graphicData:(e,t,n)=>{const r={...o};o.error=()=>0,o.default=()=>0,o.info=()=>0,o.debug=()=>0,n.unitSystem="english";const s=[];let u,l,i=JSON.parse(localStorage.getItem(`${n.title}`));if(i&&(u=i[`${window.location.search}`],Object.keys(i).length>5&&localStorage.clear()),u)return void draw(u,n);switch(n.graphVar){case"humidity":l="humidity";break;case"air_excess":l="airExcess",n.graphRange=.01*n.graphRange;break;case"o2_excess":l="o2Excess",n.graphRange=.01*n.graphRange;break;case"m_fluid":l="mFluid",n.graphRange=1e3*n.graphRange;break;default:l="tOut"}const _=n.graphPoints,c=n.graphRange;let d=n[l]-c/2;d<0&&(d=0),r.info(`Var: ${l}, centerValue: ${n[l]}, range: ${c}, points: ${_}`);for(let o=0;o<_;o++){n[l]=d+o*c/_;const r=e(t,n);s[o]={m_fluid:.001*a.lb_htoBPD(a.kgtolb(r.rad_result.m_fluid)),duty_total:r.rad_result.duty_total,t_out:a.KtoF(r.rad_result.t_out),o2_excess:r.flows["O2_%"],air_excess:r.flows["air_excess_%"]>0?r.flows["air_excess_%"]:0,humidity:r.debug_data["humidity_%"],cnv_tg_out:a.KtoF(r.conv_result.tg_out),m_fuel:r.rad_result.m_fuel?a.kgtolb(r.rad_result.m_fuel):0,efficiency:r.rad_result.eff_total?r.rad_result.eff_total:0,rad_dist:r.rad_result["%"]<1?Math.round(1e5*r.rad_result["%"])/1e3:0}}i||(i={}),i[`${window.location.search}`]=s,localStorage.setItem(`${n.title}`,JSON.stringify(i)),console.log(s),draw(s,n)}}},911:(e,t,n)=>{const{newtonRaphson:o,options:a,logger:r,round:s,roundDict:u,initSystem:l,normalize:i,flueViscosity:_,flueThermalCond:c}=n(170),d=n(684),f={O2:.2095,N2:.7905,H2O:0},m=(e,t={})=>{const n=Object.values(e).reduce(((e,t)=>e+t)),o=Math.abs(1-n)<=3e-12;return o||(t.err+=`[fuel fraction not equal to 1, total: ${n}. fuels: ${Object.keys(e)}],`),o},h=({c0:e,c1:t,c2:n,c3:o,MW:a,Substance:u},l,i)=>_=>(_<250&&!i&&r.debug(`"Cp0", "temp": ${s(_)},"Msg": "${u} bellow range for Cp0 formula"`),_>1200&&!i&&r.debug(`"Cp0", "temp": ${s(_)},"Msg": "${u} above range for Cp0 formula"`),"-"===e?(r.debug(`"Cp0", "Msg": "Wrong use, called for compound ${u}, no data found"`),0):l?a*(e+t*(.001*_)+n*(.001*_)**2+o*(.001*_)**3):e+t*(.001*_)+n*(.001*_)**2+o*(.001*_)**3),p=(e,t,n)=>{if(0===e.length)return e=>0;let o=JSON.parse(JSON.stringify(e));m(e)||(o=i(o,"Cp_multicomp",n));const a=d.filter((e=>e.Formula in o)),r=[];let s=0;for(const e in o)r[s]=n=>o[e]*h(a.filter((t=>t.Formula==e))[0],t)(n),s++;return r.reduce(((e,t)=>n=>e(n)+t(n)),(e=>0))},O=(e,t)=>{if(0===e.length)return e=>0;let n=JSON.parse(JSON.stringify(e));m(e)||(n=i(n,"MW_multicomp",t));const o=d.filter((e=>e.Formula in n));let a=0;for(const e in n)a+=o.filter((t=>t.Formula==e))[0].MW*n[e];return a},$=(e,t)=>{const n=e-a.tempToK;return 610.78*Math.exp(n/(n+238.3)*17.2694)*t*.01},C=(e,t)=>{const n=$(e,t);return d[31].MW*n/(O(f)*(a.pAtm-n))},g=(e,t)=>"-"===e.Cp0?"-"===e.h0?(r.warn(`wrong use of deltaH func, called for compound ${e.Substance} without data`),void 0===t?()=>0:0):void 0===t?()=>e.h0:e.h0:void 0===t?t=>e.h0+(t-a.tempAmbRef)*h(e,!0,!0)((a.tempAmbRef+t)/2):e.h0+(t-a.tempAmbRef)*h(e,!0,!0)((a.tempAmbRef+t)/2),b=(e,t,n,o)=>{const r=g(d[6]),s=g(d[34]),u=g(d[2]);let l=g(d[31]);return!0===o&&(l=g(d[32])),void 0===n&&(n=a.tAmb),void 0===t?t=>e.CO2*r(t)+e.SO2*s(t)+e.H2O*l(t)-g(e)(n)-e.O2*u(n):e.CO2*r(t)+e.SO2*s(t)+e.H2O*l(t)-g(e)(n)-e.O2*u(n)};e.exports={combSection:(e,t,n,h)=>{h||r.debug(`"airExcess", "value": ${e}`);const k=l(n.unitSystem),w={err:"",atmPressure:k.pressure(n.p_atm),fuelTemperature:k.tempC(n.t_fuel,0),ambTemperature:k.tempC(n.t_amb,0),airTemperature:k.tempC(n.t_air,0),"humidity_%":n.humidity,"dryAirN2_%":s(79.05,2),"dryAirO2_%":s(20.95,2),moisture:k.moist(C(n.t_air,n.humidity)),spGrav:n.sp_grav,cpFluidTb:k.cp(n.Cp_fluid((n.t_in_conv+n.t_out)/2)),unitSystem:k.system[n.lang]},N=d.filter(((e,n,o)=>e.Formula in t));let v={...t};m(t,w)||(v=i(t,"combSection")),((e,t,n={})=>{const o=Math.abs(t.length-Object.keys(e).length);0===o||(r.error(`[some fuels aren't in the database, #badFuels: ${o}],`),n.err+=`[some fuels aren't in the database, #badFuels: ${o}],`)})(v,N,w);const y={O2:0,N2:0,H2O:0,CO2:0,SO2:0},F={...f};((e,t,n)=>{for(const o of e)for(const e in t)if("N2"!=e)t[e]+=o[e]*n[o.Formula];else{if("N2"==o.Formula||'"N2a'==o.Formula){t[e]+=n[o.Formula];continue}t[e]+=o.O2*n[o.Formula]*3.7732696897374702}})(N,y,v),e-1e-6<0&&(e=0),n.humidity-1e-6<0&&(n.humidity=0);let S=y.O2,A=S*(1+e);if(y.O2<=0||y.N2<0)r.error(`airExcess set to 0, O2 in fuel >= O2 needed. Products: {O2:${y.O2}, N2:${y.N2}}`),A=0,S=0,y.N2=v.N2,y.O2=-y.O2;else{const e=$(n.t_air,n.humidity),t=n.p_atm-e;F.N2=.7905*t/n.p_atm,F.O2=.2095*t/n.p_atm,F.H2O=e/n.p_atm,w.dryAirPressure=k.pressure(t),w.waterPressure=k.pressure(e),w["H2OPressure_%"]=s(100*F.H2O),w["N2Pressure_%"]=s(100*F.N2),w["O2Pressure_%"]=s(100*F.O2),y.O2=A-y.O2,y.N2+=y.O2*(F.N2/F.O2),y.H2O+=y.N2*(e/(F.N2*n.p_atm))}let M=0,I=0;for(const e in y)M+=y[e],"H2O"!==e&&(I+=y[e]);const T={total_flow:M,dry_total_flow:I,"N2_%":100*y.N2/M,"H2O_%":100*y.H2O/M,"CO2_%":100*y.CO2/M,"O2_%":100*y.O2/M,O2_mol_req_theor:S,O2_mass_req_theor:k.mass(S*d[2].MW),"air_excess_%":100*n.airExcess,AC:A/F.O2,AC_theor_dryAir:S/.2095,AC_mass:A/F.O2*O(F)/O(v),AC_mass_theor_moistAir:S/F.O2*O(F)/O(v),fuel_MW:k["mass/mol"](O(v)),Cp_fuel:k.cp(p(v)(n.t_fuel)),flue_MW:O(y,h),Cp_flue:p(y,!1,h)};return h||(n.m_flue_ratio=M*T.flue_MW/O(v),n.m_air_ratio=A/F.O2*O(F)/O(v),n.Pco2=y.CO2/M,n.Ph2o=y.H2O/M,n.Cp_air=p(F),n.Cp_fuel=p(v),n.Cp_flue=T.Cp_flue,n.miu_flue=_(d,y),n.kw_flue=c(d,y),T.Cp_flue=k.cp(T.Cp_flue(n.t_air)),T.flue_MW=k["mass/mol"](T.flue_MW),n.NCV=-((e,t,n,o)=>{let a=0;for(const r in e){if(r in t)continue;const s=n.filter((e=>e.Formula==r))[0];a+=e[r]*b(s)(o)}return a})(v,y,N,n.t_amb)/O(v),T.NCV=k["energy/mass"](n.NCV,0),n.adFlame=o(((e,t,n,o)=>{void 0===n&&(n=a.tAmb),void 0===o&&(o=0);const r=d.filter((t=>t.Formula in e)),s=g(d.filter((e=>"O2"==e.Formula))[0]),u=g(d.filter((e=>"N2"==e.Formula))[0]),l=g(d.filter((e=>"CO2"==e.Formula))[0]),i=g(d.filter((e=>"H2O"==e.Formula))[0]),_=g(d.filter((e=>"SO2"==e.Formula))[0]),c=[];let f=0;for(const t in e)c[f]=e[t]*g(r.filter((e=>e.Formula==t))[0])(n),f++;return e=>(e=>t.O2*s(e)+t.SO2*_(e)+t.H2O*i(e)+t.CO2*l(e)+t.N2*u(e)-t.N2*u(n)-o*s(n))(e)-c.reduce(((e,t)=>e+t))})(v,y,n.t_amb,A),2e3,n.NROptions,"fuel_adFlame"),r.info(`Adiabatic flame temp: [${s(n.adFlame)} K] ${k.tempC(n.adFlame)}`),u(y),""==w.err&&delete w.err),{flows:T,products:y,debug_data:w}}}},399:(e,t,n)=>{const{newtonRaphson:o,logger:a,LMTD:r,round:s,unitConv:u}=n(170);e.exports={convSection:(e,t)=>{let n=e.tg_sh,o=0,u=e.t_in_sh,l=e.t_in_conv,i=0;const _=(e,t=u)=>.5*(e+t),c=e.m_fluid,d=e.m_flue,f=(t,n=t)=>e.Cp_fluid(_(t,n)),m=(t,n=t)=>e.Cp_flue(_(t,n)),h=t=>e.kw_fluid(t),p=t=>e.kw_tube(t),O=t=>e.kw_flue(t),$=t=>e.miu_fluid(t),C=t=>e.miu_flue(t),g=e.Rfo,b=e.Rfi_conv,k=e.L_conv,w=e.Do_conv,N=e.Do_conv-2*e.Sch_sh_cnv,v=e.Pitch_sh_cnv,y=e.N_conv,F=e.Tpr_sh_cnv,S=e.Nf,A=e.Lf,M=e.Tf,I=F*v*k-(w+2*A*M*S)*k*F,T=Math.PI*w*(1-S*M),R=Math.PI*w*(1-S*M)+Math.PI*S*(2*A*(w+A)+M*(w+2*A)),D=R-T,H=y*R*k,P=Math.PI*N**2/2,x=2/3*(e.Width_rad*e.Length_rad*e.Height_rad)**(1/3),B=(e.Ph2o+e.Pco2)*x,Q=3.6,W=e=>$(e)*Q*f(e)/h(e),E=e=>C(e)*Q*m(e)/O(e),G=c/Q/P,L=e=>G*N/$(e),U=d/I,J=e=>U/Q*w/C(e),K=(e,t=e)=>h(e)/N*.023*L(e)**.8*W(e)**(1/3)*($(e)/$(t))**.14,V=(e,t=u)=>c*f(e,t)*(t-e),j=(e=_(u,l),t=e,n=l)=>(e=>V(e))(n)/H*(w/N)*(b+1/K(e,t)+N*Math.log(w/N)/(2*p(t)))+e,q=(e,t)=>2.2*2.7431452152*B**.5*(T/R)**.75;let z=(e,t)=>O(e)/w*.33*E(e)**(1/3)*J(e)**.6;const X=(e,t)=>1/(1/(z(e,t)+q())+g),Y=1.36*p(j(_(l,u),j(_(l,u)))),Z=A+M/2,ee=(X(_(n,o),j(_(l,u),j(_(l,u))))/(6*Y*M))**.5,te=Math.tanh(ee*Z)/(ee*Z),ne=te*(.7+.3*te),oe=w+2*A,ae=ne*(.45*Math.log(oe/w)*(ne-1)+1),re=(e,t)=>X(e,t)*(ae*D+T)/R,se=(t,n)=>((e,t,n,o)=>{const a=t.Lf,r=1/t.Nf-t.Tf,s=.35+.65*Math.exp(-.25*a/r),u=t.Pitch_sh_cnv,l=t.Pitch_sh_cnv,i=t.N_conv/t.Tpr_sh_cnv,_=.7+(.7-.8*Math.exp(-.15*i**2))*Math.exp(-u/l),c=(2*t.Lf+t.Do_conv)/t.Do_conv,d=(e,t)=>e+(t-e)/((Math.exp(1.4142*n*o)+Math.exp(-1.4142*n*o))/2);return t.Ts=d,(t,n)=>(t=>.25*e(t)**-.35)(t)*s*_*c**.5*(t/d(t,n))**.25})(J,e,ee,Z)(t,n);z=(e,t)=>se(e,t)*U*m(e)*E(e)**-.67;const ue=e=>r(e,u,n,o),le=(e,t)=>w/N*(1/K(e,t)+b),ie=e=>w*Math.log(w/N)/(2*p(e)),_e=(e,t)=>1/re(e,t),ce=(e,t,n)=>1/((e,t,n)=>_e(e,n)+ie(n)+le(t,n))(e,t,n),de=(e,t)=>d*m(e,t)*(e-t),fe=(e,t,n)=>ce(_(n,t),_(e),j(_(e),j(_(e))))*H*ue(e),me=(e,t=.7*n)=>n-V(e)/(d*m(_(n,t))),he=()=>100*(fe(i,n,o)-V(i))/V(i);for(o=me(l),i=l;o-i<0;)i*=1.002,o=me(i);let pe,Oe;for(let e=0;e<100&&!(Math.abs(he())<.001);e++)o-i<0||he()<=0?(pe=i,pe&&Oe?i=(pe+Oe)/2:i*=1.001):(Oe=i,pe&&Oe?i=(pe+Oe)/2:i*=.999),o=me(i);return l=i,t||a.default(`CONV, T_in_calc: ${e.units.tempC(i)}, T_in_given: ${e.units.tempC(e.t_in_conv)}, Tg_stack: ${e.units.tempC(o)}`),e.t_in_conv_calc=l,e.tg_conv=o,{t_fin:e.Ts(_(l),j(_(l),j(_(l)))),t_in_given:e.t_in_conv,t_in:l,t_out:u,Tb:_(l),Tw:j(_(l),j(_(l))),tg_out:o,tg_in:n,Tb_g:_(n,o),rfi:b,rfo:g,LMTD:ue(l),DeltaA:n-u,DeltaB:o-l,Q_flue:de(n,o),Q_fluid:V(l),Q_conv:fe(l,n,o),Q_stack:de(o,e.t_air),duty:V(l),"%":V(l)/e.duty,duty_flux:V(l)/H,Cp_fluid:f(l,u),Cp_flue:m(n,o),miu_fluid:$(j(_(l))),miu_flue:C(o),kw_fluid:h(_(l)),kw_tube:p(j(_(l))),kw_fin:Y,kw_flue:O(_(n,o)),Prandtl:s(W(_(u))),Reynolds:s(L(_(u))),PrandtlFlue:s(E(_(u))),ReynoldsFlue:s(J(_(u))),At:H,Ai:P,An:I,Ao:R,Apo:T,Afo:D,Ef:ae,Gn:U/Q,hi:K(_(l),j(_(l),j(_(l)))),hr:q(_(n,o),j(_(l),j(_(l)))),ho:X(_(n,o),j(_(l),j(_(l)))),hc:z(_(n,o),j(_(l),j(_(l)))),he:re(_(n,o),j(_(l),j(_(l)))),j:se(_(n,o),j(_(l),j(_(l)))),gr:(_(n,o),j(_(l),j(_(l))),2.7431452152),Uo:ce(_(n,o),_(l),j(_(l))),R_int:le(_(l),j(_(l))),R_tube:ie(j(_(l))),R_ext:_e(_(n,o),j(_(l))),TUBING:{Material:e.Material,Nt:F,N:y,Sch:e.Sch_sh_cnv,Do:w,L:k,S_tube:v},FINING:{Material:e.FinMaterial,Type:e.FinType,Height:e.Lf,Thickness:e.Tf,Dens:e.Nf,Arrange:e.FinArrange}}}}},623:(e,t,n)=>{const{newtonRaphson:o,logger:a,round:r,unitConv:s}=n(170),u=e=>{const t={a:{A:2.58e-8,B:-39e-9,C:6.8e-9,D:-2.2e-10},b:{A:-119e-6,B:56e-6,C:-41e-7,D:-72e-8},c:{A:.21258,B:.2258,C:-.047351,D:.004165}},n=(e,n=t)=>t=>n.a[e]*t**2+n.b[e]*t+n.c[e],o=n("A"),a=n("B"),r=n("C"),s=n("D");return t=>o(t)+a(t)*e+r(t)*e**2+s(t)*e**3},l=(e,t,n,o,a)=>{const r=n*o+e*t,s=a-r;return{Aw:s,Aw_aAcp:s/r}};e.exports={radSection:(e,t)=>{let n=0,i=0,_=e.t_out,c=e.m_fuel,d=0,f=0;const m=e.t_air,h=e.t_fuel,p=e.t_amb,O=e.t_in_conv,$=(e,t=i)=>.5*(t+e),C=e.Rfi,g=e.N_rad,b=e.N_shld,k=e.L_rad,w=e.L_shld,N=e.Do_rad,v=e.Do_rad-e.Sch_rad,y=e.Pitch_rad||.394,F=e.Pitch_sh_cnv,S=e.h_conv||30.66,A=2/3*(e.Width_rad*e.Length_rad*e.Height_rad)**(1/3),M=(e.Ph2o+e.Pco2)*A,I=1+y/N*.49/6-.09275*(y/N)**2+.065*(y/N)**3/6+25e-5*(y/N)**4,T=g*Math.PI*N*k,R=g*y*k,D=b/2*F*w,H=(e=>{const t=s.m2toft2(e.Pitch_sh_cnv*e.Tpr_sh_cnv*e.L_shld),n=e.Length_rad*e.Width_rad,o=e.Height_rad*e.Width_rad,a=e.Height_rad*e.Length_rad,r=s.mtoft(e.Pitch_sh_cnv*e.Tpr_sh_cnv),u=(e.Width_rad-r)/2,l=s.mtoft(4*e.Pitch_rad),i=Math.sin(Math.acos(u/l))*l,_=2*o+2*a+2*n-t-(2*u*i+2*r*i)-Math.PI/4*13*2.24**2;return s.ft2tom2(_)})(e),{Aw:P,Aw_aAcp:x}=l(I,R,1,D,H),B=Math.PI*v**2/2,Q=2.04133464e-7,W=e=>((e,t,n,o,a,r)=>{const{Aw_aAcp:s}=l(t,n,o,a,r),i=u(e),_={a:{A:-5e-4,B:.0072,C:-.0062},b:{A:.0022,B:-.1195,C:.1168},c:{A:.0713,B:.5333,C:-.6473},d:{A:-.0152,B:1.0577,C:-.154}},c=(e,t=_)=>n=>t.a[e]*n**3+t.b[e]*n**2+t.c[e]*n+t.d[e],d=c("A"),f=c("B"),m=c("C");return e=>d(s)+f(s)*i(e)+m(s)*i(e)**2})(M,I,R,1,D,H)(s.KtoF(e)),E=e.duty_rad_dist||.7,G=e.efficiency||.8,L=e.heat_loss_percent||.015,U=e.NCV,J=e.m_fluid,K=(t=c)=>e.m_air_ratio*t,V=(t=c)=>e.m_flue_ratio*t,j=e.Cp_fuel($(h,p)),q=e.Cp_air($(m,p)),z=(t,n=t)=>e.Cp_fluid($(t,n)),X=(t,n=t)=>e.Cp_flue($(t,n)),Y=t=>e.kw_fluid(t),Z=t=>e.kw_tube(t),ee=t=>e.miu_fluid(t),te=J/3.6/B,ne=e=>ee(e)*z(e)*3.6/Y(e),oe=e=>te*v/ee(e),ae=(e,t=e)=>Y(e)/v*.023*oe(e)**.8*ne(e)**(1/3)*(ee(e)/ee(t))**.14,re=(e,t=e,n=f)=>n/T*(N/v)*(C+1/ae(e,t)+v*Math.log(N/v)/(2*Z(t)))+e,se=e=>K(e)*q*(m-p),ue=e=>e*j*(h-p),le=e=>e*U,ie=e=>le(e)+se(e)+ue(e),_e=(e,t)=>V(t)*X(e,p)*(e-p),ce=e=>le(e)*L,de=(e,t)=>S*T*(e-t),fe=(e,t)=>W(e)*Q*I*R*(e**4-t**4),me=(e,t)=>W(e)*Q*1*D*(e**4-t**4),he=(e,t)=>fe(e,t)+de(e,t),pe=(e,t=c,n=re($(_),re($(_))))=>he(e,n)+me(e,n)+ce(t)+_e(e,t),Oe=(e,t)=>J*z(t,e)*(e-t);if(0!==_){d=Oe(_,O),f=d*E,i=O+d*(1-E)/(J*z(O,_));const r=o((e=>Oe(_,i)-he(e,re($(_),re($(_))))),1e3,e.NROptions,"Tg_Tout-seed_radiant",t);r&&(n=r);const s=e=>ie(e)-pe(n,e,re($(_),re($(_))));let u=Oe(_,O)/(U*G);t||a.debug(`"mass_fuel_seed", "value": "${u}"`),u=o(s,u,e.NROptions,"M-fuel_T-seed_radiant",t),u&&(c=u),f=he(n,re($(_),re($(_))))}else{d=le(c)*G,f=d*E,i=O+d*(1-E)/(J*z(O));let r=O+d/(J*z(i));const s=o((e=>ie(c)-pe(e,c,re($(r),re($(r))))),1e3,e.NROptions,"Tg_mFuel-seed_radiant",t);s&&(n=s),r=o((e=>Oe(e,i)-he(n,re($(e),re($(e))))),r,e.NROptions,"Tout_mFuel-seed_radiant",t),r&&(_=r);const u=J*z(i,_)*(_-O),l=e.t_in_conv+u*(1-E)/(J*z(i,_));t||a.info(`t_out, seed: ${r} vs calc: ${_}`),t||a.info(`t_in_rad, seed: ${i} vs calc: ${l}`)}t||a.default(`RADI, T_in_calc: ${e.units.tempC(i)}, M_fuel: ${e.units.mass_flow(c)}, Tg_out: ${e.units.tempC(n)}`),e.t_in_rad=i,e.t_out=_,e.tg_rad=n,e.duty=d,e.m_flue=V(c),e.m_air=K(c),e.t_w_rad=re($(_),re($(_))),e.q_rad_sh=me(n,e.t_w_rad);const $e={m_air:K(),m_flue:V(),m_fuel:c,m_fluid:J,t_in:i,t_out:_,Tw:e.t_w_rad,tg_out:n,rfi:C,Q_in:ie(c),Q_rls:le(c),Q_air:se(c),Q_fuel:ue(c),Q_out:pe(n,c),Q_flue:_e(n,c),Q_losses:ce(c),Q_shld:me(n,e.t_w_rad),Q_conv:de(n,e.t_w_rad),Q_rad:fe(n,e.t_w_rad),Q_R:he(n,e.t_w_rad),Q_fluid:Oe(_,i),At:T,Ar:H,Ai:B,Aw:P,Aw_aAcp:x,Acp:R,aAcp:I*R,Acp_sh:D,hi:ae($(_),e.t_w_rad),h_conv:S,duty_total:d,duty:f,"%":f/d,eff_total:d/le(c)>1?100:100*d/le(c),duty_flux:f/T,Alpha:I,MBL:r(A),Pco2:r(e.Pco2),Ph2o:r(e.Ph2o),PL:r(M),F:r(W(n)),emiss:r(u(M)(n)),kw_tube:Z(re($(i))),kw_fluid:Y($(i)),kw_flue:e.kw_flue(n),Cp_fluid:z(i,_),Cp_flue:X(n,p),Cp_fuel:j,Cp_air:q,Prandtl:r(ne($(_))),Reynolds:r(oe($(_))),TUBING:{Material:e.Material,Nt:2,N:g,Sch:e.Sch_rad,Do:N,L:k,S_tube:y},FINING:"None"};return $e.miu_flue=e.miu_flue(n),$e.miu_fluid=ee($(_)),$e}}},16:(e,t,n)=>{const{newtonRaphson:o,logger:a,LMTD:r,round:s,unitConv:u}=n(170);e.exports={shieldSection:(e,t)=>{let n=e.tg_rad,u=0,l=e.t_in_rad,i=.5*(e.t_in_rad+e.t_in_conv),_=0;const c=(e,t=l)=>.5*(e+t),d=e.m_fluid,f=e.m_flue,m=(t,n=t)=>e.Cp_fluid(c(t,n)),h=(t,n=t)=>e.Cp_flue(c(t,n)),p=t=>e.kw_fluid(t),O=t=>e.kw_tube(t),$=t=>e.kw_flue(t),C=t=>e.miu_fluid(t),g=t=>e.miu_flue(t),b=e.Rfo_shld,k=e.Rfi_shld,w=e.N_shld,N=e.L_shld,v=e.Do_shld,y=e.Do_shld-2*e.Sch_sh_cnv,F=e.Pitch_sh_cnv,S=w*Math.PI*v*N,A=Math.PI*y**2/2,M=w/2*(F-v)*N,I=3.6,T=e=>C(e)*I*m(e)/p(e),R=e=>g(e)*I*h(e)/$(e),D=d/I/A,H=e=>D*y/C(e),P=f/I/M,x=e=>P*v/g(e),B=(e,t=e)=>p(e)/y*.023*H(e)**.8*T(e)**(1/3)*(C(e)/C(t))**.14,Q=e=>.092*e-34,W=e=>$(e)/v*.33*R(e)**(1/3)*x(e)**.6,E=(e,t=n)=>1/(1/(W(c(e,t))+Q(c(e,t)))+b),G=e=>d*m(e)*(l-e),L=(e,t=e,n=i)=>G(n)/S*(v/y)*(k+1/B(e,t)+y*Math.log(v/y)/(2*O(t)))+e,U=(e,t)=>v/(y*B(e,t))+v/y*k,J=e=>v*Math.log(v/y)/(2*O(e)),K=(e,t=n)=>1/E(e,t),V=(e,t,n,o)=>1/((e,t,n,o)=>K(e,t)+J(o)+U(n,o))(e,t,n,o),j=e.q_rad_sh,q=(e,t,n,o,a)=>V(n,t,o,a)*S*r(e,l,t,n),z=(e,t,n,o,a)=>j+q(e,t,n,o,a),X=(e,t=l)=>d*m(e,t)*(t-e),Y=(e,t=u)=>f*h(e,t)*(e-t),Z=e=>Y(n,e)+j-X(i,l),ee=e=>X(e)-z(e,n,u,c(e),L(c(e),L(c(e))));u=o(Z,n-100,e.NROptions,"Tg_out_shield-1",t),_=o(ee,i,e.NROptions,"T_in_shield-1",t);let te=1;const ne=e=>Math.abs((Y(n,e)-q(i,n,e,c(i),L(c(i),L(c(i)))))/Y(n,u));for(;ne(u)-.001>0;){if(!_){a.error("Invalid t_in_calc at shield sect");break}if(i=_,_=o(ee,i,e.NROptions,"T_in_shield-2",!0),u=o(Z,n-58,e.NROptions,"Tg_out_shield-2",!0),te++,te>35){a.debug(`"Tin_shield",  "t_in_sh_calc": ${s(_)}, "t_in_sh_sup": ${s(i)}`),t||a.info(`diff vs error: ${ne(u)}-0.001`),a.error("Max iterations reached for inlet temp calc at shield sect");break}}return t||a.default(`SHLD, cycles: ${te}, T_in_calc: ${e.units.tempC(i)}, Tg_out: ${e.units.tempC(u)}`),e.t_in_sh=i,e.tg_sh=u,{m_flue:f,t_in_sup:.5*(e.t_in_rad+e.t_in_conv),t_in:i,t_out:l,Tb:c(i),Tw:L(c(i),L(c(i))),tg_out:u,tg_in:n,Tb_g:c(n,u),LMTD:r(i,l,n,u),DeltaA:n-l,DeltaB:u-i,rfi:k,rfo:b,Q_flue:Y(n,u),Q_fluid:X(i),Q_R:z(i,n,u,c(i),L(c(i))),Q_rad:j,Q_conv:q(i,n,u,c(i),L(c(i))),Cp_fluid:m(i,l),Cp_flue:h(n,u),miu_fluid:C(L(c(i))),miu_flue:g(u),duty:G(i),"%":G(i)/e.duty,duty_flux:G(i)/S,kw_fluid:p(c(i)),kw_tube:O(L(c(i))),kw_flue:$(c(n,u)),Prandtl:s(T(c(l))),Reynolds:s(H(c(l))),PrandtlFlue:s(R(c(l))),ReynoldsFlue:s(x(c(l))),At:S,Ai:A,An:M,Gn:P,hi:B(c(i)),hi_tw:B(c(i),L(c(i))),hr:Q(n),ho:E(u),hc:W(c(n,u)),Uo:V(u,n,c(i),L(c(i),L(c(i)))),R_int:U(c(i),L(c(i),L(c(i)))),R_tube:J(L(c(i),L(c(i)))),R_ext:K(u,n),TUBING:{Material:e.Material,Nt:e.Tpr_sh_cnv,N:w,Sch:e.Sch_sh_cnv,Do:v,L:N,S_tube:F},FINING:"None"}}}},691:(e,t,n)=>{const{logger:o,unitConv:a}=n(170);e.exports={optionsModifier:(e,t,n)=>{let r;switch(e){case"project_title":t[e]&&(n.title=t[e]);break;case"fuel_percent":break;case"heat_loss":r=parseFloat(t[e]),r<=5&&(n.hLoss=.01*r);break;case"rad_dist":r=parseFloat(t[e]),r>=40&&r<=100&&(n.radDist=.01*r,n.runDistCycle=!1);break;case"rfi":r=parseFloat(t[e]),r>=0&&(n.rfi=r);break;case"rfo":r=parseFloat(t[e]),r>=0&&(n.rfo=r);break;case"t_fuel":r=parseFloat(t[e]),r>=0&&(n.tFuel=a.FtoK(r));break;case"unit_system":o.debug(`"${e}", "value":"${t[e]}"`),n.unitSystem=t[e];break;default:((e,t,n)=>{let o;switch(e){case"graph_var":n.graphVar=t[e];break;case"graph_range":o=parseFloat(t[e]),o>0&&(n.graphRange=o);break;case"graph_points":o=parseFloat(t[e]),o>0&&o<=200&&(n.graphPoints=o)}})(e,t,n),((e,t,n)=>{let o=parseFloat(t[e]);if(!(o<=0))switch(e){case"m_fluid":n.mFluid=o;break;case"t_in":n.tIn=o;break;case"t_out":n.tOut=o;break;case"sp_grav":n.spGrav=o;break;case"miu_in":n.miuFluidIn=o;break;case"miu_out":n.miuFluidOut=o;break;case"kw_in":n.kwFluidIn=o;break;case"kw_out":n.kwFluidOut=o;break;case"cp_in":n.cpFluidIn=o;break;case"cp_out":n.cpFluidOut=o}})(e,t,n),((e,t,n)=>{let o;switch(e){case"t_amb":o=parseFloat(t[e]),o<100&&(n.tAir=a.FtoK(o));break;case"humidity":o=parseFloat(t[e]),o>=0&&o<=100&&(n.humidity=o);break;case"p_atm":o=parseFloat(t[e]),o>=.01&&o<2&&(n.pAtm=o*n.pAtmRef);break;case"air_excess":o=parseFloat(t[e]),o>=0&&o<=300&&(n.airExcess=.01*o);break;case"o2_excess":o=parseFloat(t[e]),o>=0&&o<=30&&(n.o2Excess=.01*o)}})(e,t,n)}}}},30:(e,t,n)=>{const{round:o,initSystem:a}=n(170);e.exports={stringRadResult:(e,t,n)=>{const r=a(n);let s;return s="es"==e?"Resultados sección radiante:":"Radiant section results:",s+=`\n\n  t_in:     ${r.tempC(t.t_in)}      \n  t_out:    ${r.tempC(t.t_out)}      \n  Tw:       ${r.tempC(t.Tw)}      \n\n  tg_out:   ${r.tempC(t.tg_out)}     \n\n  rfi:      ${r.fouling_factor(t.rfi)}\n\n  Q_in:     ${r.heat_flow(t.Q_in)} \n    Q_rls:    ${r.heat_flow(t.Q_rls)} \n    Q_air:    ${r.heat_flow(t.Q_air)}  \n    Q_fuel:   ${r.heat_flow(t.Q_fuel)}  \n\n  Q_out:    ${r.heat_flow(t.Q_out)} \n    Q_flue:   ${r.heat_flow(t.Q_flue)} \n    Q_losses: ${r.heat_flow(t.Q_losses)}  \n    Q_shld:   ${r.heat_flow(t.Q_shld)}  \n    Q_R:      ${r.heat_flow(t.Q_R)} \n      Q_conv: ${r.heat_flow(t.Q_conv)}  \n      Q_rad:  ${r.heat_flow(t.Q_rad)} \n    Q_fluid:  ${r.heat_flow(t.Q_fluid)} \n\n  duty_rad:   ${o(100*t["%"],2)}%  \n\n  At:       ${r.area(t.At)}    \n  Ar:       ${r.area(t.Ar)}    \n  Acp:      ${r.area(t.Acp)}    \n  αAcp:     ${r.area(t.aAcp)}    \n  Aw:       ${r.area(t.Aw)}    \n  Aw/αAcp:  ${o(t.Aw_aAcp)}           \n  Alpha:    ${o(t.Alpha)}           \n  Acp_sh:   ${r.area(t.Acp_sh)}     \n  Ai:        ${r.area(t.Ai)}      \n\n  hi:     ${r.convect(t.hi)} \n  h_conv:   ${r.convect(t.h_conv)} \n\n  MBL:      ${t.MBL} ft \n  GPpres:   ${o(1*t.Pco2+1*t.Ph2o)} atm \n  PL:       ${t.PL} atm-ft \n  GEmiss:   ${t.emiss} \n  F:        ${t.F} \n\n  kw_tube:  ${r.thermal(t.kw_tube)}\n  kw_fluid: ${r.thermal(t.kw_fluid)}\n  kw_flue:  ${r.thermal(t.kw_flue)}\n  \n  miu_fluid:${r.viscosity(t.miu_fluid)}\n  miu_flue: ${r.viscosity(t.miu_flue)}\n\n  Cp_fluid: ${r.cp(t.Cp_fluid)}\n  Cp_flue:  ${r.cp(t.Cp_flue)}\n  \n  Cp_fuel:  ${r.cp(t.Cp_fuel)}\n  Cp_air:   ${r.cp(t.Cp_air)}\n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n\n  TUBING:\n    Material:       ${t.TUBING.Material}\n    No Tubes Wide:  ${t.TUBING.Nt}\n    No Tubes:       ${t.TUBING.N}\n    Wall Thickness: ${r.lengthC(t.TUBING.Sch)}\n    Outside Di:     ${r.lengthC(t.TUBING.Do)}\n    Pitch:          ${r.lengthC(t.TUBING.S_tube)}\n    Ef. Length:     ${r.length(t.TUBING.L)}\n    \n  `,"\n"+s},stringShldResult:(e,t,n)=>{const r=a(n);let s;return s="es"==e?"Resultados sección de escudo:":"Shield section results:",s+=`\n\n  t_in:     ${r.tempC(t.t_in)} \n  t_out:    ${r.tempC(t.t_out)} \n  Tw:       ${r.tempC(t.Tw)} \n  \n  tg_in:      ${r.tempC(t.tg_in)} \n  tg_out:     ${r.tempC(t.tg_out)} \n\n  rfi:      ${r.fouling_factor(t.rfi)}\n  rfo:      ${r.fouling_factor(t.rfo)}\n\n  LMTD:     ${r.temp(t.LMTD)}    \n  DeltaA:     ${r.temp(t.DeltaA)}\n  DeltaB:     ${r.temp(t.DeltaB)}\n  DeltaA-B:   ${r.temp(t.DeltaA-t.DeltaB)}\n  Log(A/B):   ${o(Math.log(t.DeltaA/t.DeltaB))}\n\n  Q_flue:   ${r.heat_flow(t.Q_flue)} \n    M_fuel xCp x(Tg_in-Tg_out)\n  Q_Shield: ${r.heat_flow(t.Q_R)} \n    Q_rad:   ${r.heat_flow(t.Q_rad)} \n    Q_conv:  ${r.heat_flow(t.Q_conv)} \n  Q_fluid:  ${r.heat_flow(t.Q_fluid)} \n\n  duty_shld: ${o(100*t["%"],2)}% \n\n  At:    ${r.area(t.At)}     \n  An:     ${r.area(t.An)}     \n  Ai:      ${r.area(t.Ai)}\n  Gn:    ${o(t.Gn/3600)} lb/sec-ft² \n\n  Uo:    ${r.convect(t.Uo)} \n  R_int: ${o(t.R_int,6)}\n  R_tub: ${o(t.R_tube,6)}\n  R_ext: ${o(t.R_ext,6)}\n\n  hi: ${r.convect(t.hi)} \n  hr:   ${r.convect(t.hr)}\n  ho:   ${r.convect(t.ho)}\n  hc:   ${r.convect(t.hc)}\n\n  kw_tube:  ${r.thermal(t.kw_tube)}\n  kw_fluid: ${r.thermal(t.kw_fluid)}\n  kw_flue:  ${r.thermal(t.kw_flue)}\n  \n  miu_fluid:${r.viscosity(t.miu_fluid)}\n  miu_flue: ${r.viscosity(t.miu_flue)}\n\n  Cp_fluid: ${r.cp(t.Cp_fluid)}\n  Cp_flue:  ${r.cp(t.Cp_flue)}\n\n  Pr_flue:  ${t.PrandtlFlue}\n  Re_flue:  ${t.ReynoldsFlue}\n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n\n  TUBING:\n    Material:       ${t.TUBING.Material}\n    No Tubes Wide:  ${t.TUBING.Nt}\n    No Tubes:       ${t.TUBING.N}\n    Wall Thickness: ${r.lengthC(t.TUBING.Sch)}\n    Outside Di:     ${r.lengthC(t.TUBING.Do)}\n    Tran Pitch:     ${r.lengthC(t.TUBING.S_tube)}\n    Long Pitch:     ${r.lengthC(t.TUBING.S_tube)}\n    Ef. Length:     ${r.length(t.TUBING.L)}\n\n  `,"\n"+s},stringConvResult:(e,t,n)=>{const r=a(n);let s;return s="es"==e?"Resultados sección convectiva:":"Convective section results:",s+=`\n\n  t_in:     ${r.tempC(t.t_in)}\n  t_out:    ${r.tempC(t.t_out)}      \n  Tw:       ${r.tempC(t.Tw)}      \n  \n  tg_in:      ${r.tempC(t.tg_in)}   \n  tg_stack:   ${r.tempC(t.tg_out)}    \n\n  rfi:      ${r.fouling_factor(t.rfi)}\n  rfo:      ${r.fouling_factor(t.rfo)}\n\n  LMTD:     ${r.temp(t.LMTD)}      \n  DeltaA:     ${r.temp(t.DeltaA)}\n  DeltaB:     ${r.temp(t.DeltaB)}\n  DeltaA-B:     ${r.temp(t.DeltaA-t.DeltaB)}\n  Log(|A/B|):   ${o(Math.log(Math.abs(t.DeltaA/t.DeltaB)))}\n\n  Q_flue:   ${r.heat_flow(t.Q_flue)}\n  Q_conv:   ${r.heat_flow(t.Q_conv)}   \n  Q_fluid:  ${r.heat_flow(t.Q_fluid)}   \n\n  Q_stack:  ${r.heat_flow(t.Q_stack)}\n\n  duty_conv: ${o(100*t["%"],2)}% \n\n  At:   ${r.area(t.At)}        \n  An:    ${r.area(t.An)}         \n  Ao:     ${r.area(t.Ao)}         \n  Afo:    ${r.area(t.Afo)}         \n  Apo:    ${r.area(t.Apo)}          \n  Ai:     ${r.area(t.Ai)}          \n  F_eff:  ${o(t.Ef,6)}           \n  Gn:    ${o(t.Gn/3600)} lb/sec-ft²    \n\n  Uo:    ${r.convect(t.Uo)}  \n  R_int: ${o(t.R_int,6)}\n  R_tub: ${o(t.R_tube,6)}\n  R_ext: ${o(t.R_ext,6)}\n\n  hi:   ${r.convect(t.hi)} \n  hr:   ${r.convect(t.hr)}\n  ho:   ${r.convect(t.ho)}   \n  hc:   ${r.convect(t.hc)}\n  he:   ${r.convect(t.he)}      \n\n  kw_fin:   ${r.thermal(t.kw_fin)} \n  kw_tube:  ${r.thermal(t.kw_tube)}\n  kw_fluid: ${r.thermal(t.kw_fluid)}\n  kw_flue:  ${r.thermal(t.kw_flue)}\n  \n  miu_fluid:${r.viscosity(t.miu_fluid)}\n  miu_flue: ${r.viscosity(t.miu_flue)}\n\n  Cp_fluid: ${r.cp(t.Cp_fluid)}\n  Cp_flue:  ${r.cp(t.Cp_flue)}\n\n  Pr_flue:  ${t.PrandtlFlue}\n  Re_flue:  ${t.ReynoldsFlue}\n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n\n  TUBING:\n    No Tubes:    ${t.TUBING.N}\n    Other props: Same as shield\n\n  FINNING: \n    Material:   ${t.FINING.Material}\n    Type:       ${t.FINING.Type}\n    Height:     ${r.lengthC(t.FINING.Height)}\n    Thickness:  ${r.lengthC(t.FINING.Thickness)}\n    Dens:       ${r.lengthInv(t.FINING.Dens)},\n    Arrange:    ${t.FINING.Arrange}\n  `,"\n"+s},stringCombResult:(e,t,n)=>{const r=a(n);let s;return s="es"==e?`\nDatos de entrada\n  (en caso de no haber sido introducidos, el \n  simulador selecciona los valores predeterminados)\n\n  Sistema de unidades:         ${t.debug_data.unitSystem}\n  Presión atmosférica:         ${t.debug_data.atmPressure}\n  Temperatura de referencia:   ${t.debug_data.ambTemperature}\n  Temperatura del combustible: ${t.debug_data.fuelTemperature}\n  Temperatura del aire:        ${t.debug_data.airTemperature}\n\n  Humedad Relativa:            ${o(t.debug_data["humidity_%"],0)} %\n  Volumen de N2 en aire seco:  ${t.debug_data["dryAirN2_%"]} %\n  Volumen de O2 en aire seco:  ${t.debug_data["dryAirO2_%"]} %\n\n  Presión del aire seco:       ${t.debug_data.dryAirPressure}\n  Presión de vapor de agua:    ${t.debug_data.waterPressure}\n\n  Fracción molar de H2O: ${t.debug_data["H2OPressure_%"]} ÷10²\n  Fracción molar de N2: ${t.debug_data["N2Pressure_%"]} ÷10²\n  Fracción molar de O2: ${t.debug_data["O2Pressure_%"]} ÷10²\n  Humedad del aire: ${t.debug_data.moisture} aire seco\n\n\n  Temperatura de entrada (residuo): ${r.tempC(t.conv_result.t_in_given,0)}\n  Temperatura de salida (residuo):  ${r.tempC(t.rad_result.t_out,0)}\n\n  Calor específico (Cp) residuo: ${t.debug_data.cpFluidTb}\n\n  Gravedad específica (residuo): ${t.debug_data.spGrav}\n  Flujo másico (residuo):     ${r.mass_flow(t.rad_result.m_fluid,1)}\n\n  Calor absorbido ("duty") requerido: ${r.heat_flow(t.rad_result.duty_total)}\n  Calor absorbido ("duty") calculado: ${r.heat_flow(t.rad_result.duty+t.shld_result.duty+t.conv_result.duty)}\n\n  Eficiencia del horno: ${o(t.rad_result.eff_total,2)}% [Q_rls/Q_fluid]\n\n\nMoles de gases de combustión por mol de combustible\n\n  Moles totales:               ${o(t.flows.total_flow,3)}\n  Moles totales (a base seca): ${o(t.flows.dry_total_flow,3)}\n\n  Componentes \n    N2:   ${t.products.N2} \n    O2:   ${t.products.O2}\n    H2O:  ${t.products.H2O}\n    CO2:  ${t.products.CO2}\n    SO2:  ${t.products.SO2}\n\n  Porcentajes molares en base húmeda\n    N2:  ${o(t.flows["N2_%"])} %\n    O2:  ${o(t.flows["O2_%"])} %\n    H2O: ${o(t.flows["H2O_%"])} %\n    CO2: ${o(t.flows["CO2_%"])} %\n    SO2: ${t.flows["SO2_%"]||"0.000"} %\n\n  Exceso de aire: ${o(t.flows["air_excess_%"],2)} %\n  Moles O2 estequiométrico/mol combustible: ${o(t.flows.O2_mol_req_theor,3)}\n\n  Relación A/C molar húmeda:  ${o(t.flows.AC,3)}\n  Relación A/C másica húmeda: ${o(t.flows.AC_mass,3)}\n  Relación A/C molar estequiométrica (aire seco): \n    ${o(t.flows.AC_theor_dryAir,3)}\n  Relación A/C másica estequiométrica (aire húmedo): \n    ${o(t.flows.AC_mass_theor_moistAir,3)}\n\n  Poder Calorífico Neto (NCV):       ${t.flows.NCV}\n  \n  Flujo másico (combustible): ${r.mass_flow(t.rad_result.m_fuel,1)}   \n  Flujo másico (gases):       ${r.mass_flow(t.rad_result.m_flue,1)} \n  Flujo másico (aire):        ${r.mass_flow(t.rad_result.m_air,1)} \n\n  Peso molecular (combustible): ${t.flows.fuel_MW}\n  Peso molecular (gases):       ${t.flows.flue_MW}\n  \n  Calor específico (Cp) combustible: ${t.flows.Cp_fuel}\n  Calor específico (Cp) gases:       ${t.flows.Cp_flue}\n`:`\nInput Data \n  (in case of no input, \n  default values will be taken)\n\n  Unit System:          ${t.debug_data.unitSystem}\n  Atmospheric Pressure: ${t.debug_data.atmPressure}\n  Ref Temperature:      ${t.debug_data.ambTemperature}\n  Air Temperature:      ${t.debug_data.airTemperature}\n  Fuel Temperature:     ${t.debug_data.fuelTemperature}\n\n  Humidity:             ${o(t.debug_data["humidity_%"],0)} %\n  N2 en aire seco:      ${t.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:      ${t.debug_data["dryAirO2_%"]} %\n\n  Dry Air Pressure:     ${t.debug_data.dryAirPressure}\n  Water Vapor Pressure:  ${t.debug_data.waterPressure}\n\n  Partial Fraction H2O: ${t.debug_data["H2OPressure_%"]} ÷10²\n  Partial Fraction N2: ${t.debug_data["N2Pressure_%"]} ÷10²\n  Partial Fraction O2: ${t.debug_data["O2Pressure_%"]} ÷10²\n  Moisture content (w): ${t.debug_data.moisture}-dryAir\n\n\n  Fluid's Inlet Temp.:  ${r.tempC(t.conv_result.t_in_given,0)}\n  Fluid's outlet Temp.: ${r.tempC(t.rad_result.t_out,0)}\n\n  Fluid's Cp(Tb):    ${t.debug_data.cpFluidTb}\n\n  Fluid's Sp Grav:   ${t.debug_data.spGrav}\n  Fluid's Mass Flow: ${r.mass_flow(t.rad_result.m_fluid)}\n\n  Comb's  Mass Flow: ${r.mass_flow(t.rad_result.m_fuel)}   \n  Gases's Mass Flow: ${r.mass_flow(t.shld_result.m_flue)} \n\n  Fluid heat required: ${r.heat_flow(t.rad_result.duty_total)}\n  Heat calculated:     ${r.heat_flow(t.rad_result.duty+t.shld_result.duty+t.conv_result.duty)}\n  \n  Heater Efficiency: ${o(t.rad_result.eff_total,2)}% [Q_rls/Q_fluid]\n\n\nTotal flue gas moles and percentage (per fuel mol)\n\n  Flow total: ${o(t.flows.total_flow,3)}\n  Dry total:  ${o(t.flows.dry_total_flow,3)}\n                        Moist basis percentage\n  N2:  ${t.products.N2}             N2:  ${o(t.flows["N2_%"],3)} %\n  O2:  ${t.products.O2}              O2:  ${o(t.flows["O2_%"],3)} %\n  H2O: ${t.products.H2O}              H2O: ${o(t.flows["H2O_%"],3)} %\n  CO2: ${t.products.CO2}              CO2: ${o(t.flows["CO2_%"],3)} %\n  SO2: ${t.products.SO2}              SO2: ${t.flows["SO2_%"]||"0.000"} %\n\n  Air excess used : ${o(t.flows["air_excess_%"],3)} %\n  Moles O2 required/fuel-mol (theor): ${o(t.flows.O2_mol_req_theor,3)}\n\n  A/C molar moist relation:   ${o(t.flows.AC,3)}\n  A/C mass moist relation:    ${o(t.flows.AC_mass,3)}\n  A/C molar relation (dry air, theor):   ${o(t.flows.AC_theor_dryAir,3)}\n  A/C mass relation (moist air, theor):  ${o(t.flows.AC_mass_theor_moistAir,3)}\n\n  Fuel mol weight: ${t.flows.fuel_MW}\n  Fuel Cp(t_fuel): ${t.flows.Cp_fuel}\n  NCV:             ${t.flows.NCV} \n\n  Flue gas mol weight: ${t.flows.flue_MW}\n  Flue gas Cp(t_amb):  ${t.flows.Cp_flue}\n`,s}}},170:e=>{const t=(...e)=>{let t=""+e[1][0];for(var n=1;n<e[1].length;n++)t+=" "+e[1][n];switch(e[0]){case"DEBUG":i.verbose&&console.debug(JSON.parse(`{"${e[0]}": ${t}}`));break;case"INFO":console.info(`{ [32;1m${e[0]}[0m: "${t}"}`);break;case"ERROR":console.error(`{ [31;1m${e[0]}[0m: '${t}'}`);break;case"WARN":console.warn(`{ [35;1m${e[0]}[0m: '${t}'}`);break;default:console.log(`{ [34;1m${e[0]}[0m: '${t}'}`)}},n={info:(...e)=>t("INFO",e),warn:(...e)=>t("WARN",e),error:(...e)=>t("ERROR",e),debug:(...e)=>t("DEBUG",e),default:(...e)=>t("DEFAULT",e)},o=273.15,a=101325,r=5.6145833333,s=62.371,u=288.70556,l={RtoK:e=>e*(5/9),KtoR:e=>1.8*e,KtoF:e=>1.8*e-459.67,CtoK:e=>e+o,CtoF:e=>1.8*e+32,FtoC:e=>5/9*(e-32),FtoK:e=>5/9*(e-32)+o,kgtolb:e=>2.20462*e,lbtokg:e=>e/2.20462,BPDtolb_h:(e,t=.84)=>e*r*s/24*t,lb_htoBPD:(e,t=.84)=>e/r/s*24/t,kJtoBTU:e=>e/1.05506,BTUtokJ:e=>1.05506*e,fttom:e=>e/3.28084,ft2tom2:e=>e/3.28084**2,mtoft:e=>3.28084*e,m2toft2:e=>e*3.28084**2,intom:e=>e/39.3701,mtoin:e=>39.3701*e,CpENtoCpSI:e=>1.05506*e/(5/9)*2.20462,kwENtokwSI:e=>1.05506*e/(5/9)*3.28084,RfENtoRfSI:e=>e/20.441829691933805,hcENtohcSI:e=>1.05506*e/(5/9)*3.28084**2,BtuHtoW:e=>e/3.4121416331},i=(()=>{const e={tempToK:o,tempAmbRef:u,pAtmRef:a,spGrav:.84,runDistCycle:!0,verbose:!0,tAmb:u,tAir:u,tFuel:u,humidity:0,o2Excess:0,airExcess:0,radDist:.64,hLoss:.015,effcy:.8,rfi:0,rfo:0,tIn:678,tOut:772,mFluid:9e4,miuFluidIn:1.45,miuFluidOut:.96,cpFluidIn:.676,cpFluidOut:.702,kwFluidIn:.038,kwFluidOut:.035,pAtm:a,unitSystem:"SI",lang:"en",title:"simple",graphVar:"t_out",graphRange:50,graphPoints:100,NROptions:{tolerance:1e-4,epsilon:3e-8,maxIterations:20,h:1e-4,verbose:!0}};return"undefined"==typeof process||(e.verbose="true"==process.argv[2],e.unitSystem=process.argv[3],e.tAmb=o+parseFloat(process.argv[4])||u,e.humidity=parseFloat(process.argv[5])||0,e.o2Excess=.01*parseFloat(process.argv[6])||0,e.airExcess=.01*parseFloat(process.argv[7])||0,e.pAtm=parseFloat(process.argv[8])||101325,e.NROptions.verbose="true"==process.argv[2]),e})();i.verbose&&n.debug(`"options","args":${JSON.stringify(i,null,2)}`);const _=(e,t=3)=>(+(Math.round(e*10**t)/10**t).toFixed(t)).toLocaleString(),c=(e,t,o)=>{const a={...e},r=Object.values(a).reduce(((e,t)=>e+t));for(const e in a)a[e]=a[e]/r;return o||n.debug(`"normalize", "name": "${t}", "total": ${r}`),a},d=({k0:e,k1:t,k2:o,Substance:a})=>0==e||"-"==e?(n.debug(`"Thermal Cond func called for '${a}' without coffs"`),()=>0):n=>3.6*(e+t*n+o*n**2),f=({u0:e,u1:t,u2:o,Substance:a})=>0==e||"-"==e?(n.debug(`"Viscosity func called for '${a}' without coffs"`),()=>0):n=>e+t*n+o*n**2,m={"energy/mol":e=>_(l.kJtoBTU(e))+" Btu/mol","mass/mol":e=>_(e)+" lb/lbmol",heat_flow:e=>_(1e-6*l.kJtoBTU(e))+" MMBtu/h",heat_flux:e=>_(l.kJtoBTU(e)/l.mtoft(1)**2)+" Btu/h-ft²",fouling_factor:e=>_(10.763910417*e*1.8/.94781712)+" h-ft²-°F/Btu","energy/mass":(e,t)=>_(l.kJtoBTU(e)/l.kgtolb(1),t)+" Btu/lb","energy/vol":e=>_(l.kJtoBTU(e)/l.mtoft(1)**3)+" Btu/ft³",area:e=>_(10.763910417*e)+" ft²",length:e=>_(l.mtoft(e))+" ft",lengthC:e=>_(l.mtoin(e))+" in",lengthInv:e=>_(e/l.mtoft(1))+" 1/ft",temp:e=>_(l.KtoR(e))+" °R",tempC:(e,t)=>_(l.CtoF(e-o),t)+" °F",pressure:e=>_(.0001450377*e)+" psi",mass:e=>_(.0022046244202*e)+" lb",mass_flow:(e,t)=>_(l.kgtolb(e),t)+" lb/h",barrel_flow:(e,t=.84)=>_(l.kgtolb(e)/l.BPDtolb_h(1,t)/1e3)+" x10³ BPD",vol_flow:e=>_(e*l.mtoft(1)**3)+" ft³/h",cp:e=>_(.238845896627*e)+" Btu/lb-°F",cp_mol:e=>_(.238845896627*e)+" Btu/lb-mol-°F",power:e=>_(3.4121416331*e)+" Btu/h",moist:e=>_(1e3*e)+" ÷10³ lb H2O/lb",thermal:e=>_(e*l.kJtoBTU(1)/l.KtoR(1)/l.mtoft(1))+" BTU/h-ft-°F",convect:e=>_(e*l.kJtoBTU(1)/l.KtoR(1)/l.mtoft(1)**2)+" BTU/h-ft²-°F",viscosity:e=>_(1*e)+" cP",system:{en:"English",es:"Inglés"}},h={"energy/mol":e=>_(1*e)+" kJ/mol","mass/mol":e=>_(1*e)+" kg/kmol",heat_flow:e=>_(1e-6*e)+" MJ/h",heat_flux:e=>_(1*e)+" W/m²",fouling_factor:(e,t)=>_(1e3*e,t)+" ÷10³ m²-K/W","energy/mass":(e,t)=>_(e,t)+" kJ/kg","energy/vol":e=>_(1*e)+" kJ/m³",area:e=>_(1*e)+" m²",length:e=>_(1*e)+" m",lengthC:e=>_(100*e)+" cm",lengthInv:e=>_(1*e)+" 1/m",tempC:(e,t)=>_(1*e-o,t)+" °C",temp:e=>_(1*e)+" K",pressure:e=>_(.001*e)+" kPa",mass:e=>_(.001*e)+" kg",mass_flow:(e,t)=>_(e,t)+" kg/h",barrel_flow:(e,t=.84)=>_(l.kgtolb(e)/l.BPDtolb_h(1,t)/1e3)+" x10³ BPD",vol_flow:e=>_(1*e)+" m³/h",cp:e=>_(1*e)+" kJ/kg-K",cp_mol:e=>_(1*e)+" kJ/kmol-K",power:e=>_(1*e)+" W",moist:e=>_(1e3*e)+" g H2O/kg",thermal:e=>_(1*e)+" kJ/h-m-C",convect:e=>_(1*e)+" kJ/h-m²-C",viscosity:e=>_(1*e)+" cP",system:{en:"SI",es:"SI"}};e.exports={options:i,unitConv:l,newtonRaphson:(e,t,o,a,r,s)=>{let u,l,i,_,c,d,f,m;"function"!=typeof t&&(s=r,r=a,a=o,o=t,t=null);const h=a||{},p=void 0===h.tolerance?1e-7:h.tolerance,O=void 0===h.epsilon?222e-17:h.epsilon,$=void 0===h.h?1e-4:h.h,C=1/$,g=void 0===h.maxIterations?20:h.maxIterations;for(_=0;_++<g;){if(l=e(o),t?i=t(o):(c=e(o+$),d=e(o-$),f=e(o+2*$),m=e(o-2*$),i=(m-f+8*(c-d))*C/12),Math.abs(i)<=O*Math.abs(l))return n.error(`Newton-Raphson (${r}): failed to converged due to nearly zero first derivative`),!1;if(u=o-l/i,Math.abs(u-o)<=p*Math.abs(u))return s||n.debug(`"Newton-Raphson", "func":"${r}", "var converged to":${u}, "iterations":${_}`),u;o=u}return n.error(`Newton-Raphson (${r}): Maximum iterations reached (${g})`),!1},logger:n,round:_,roundDict:(e={})=>{for(const[t,n]of Object.entries(e))isNaN(n)||""===n||(e[t]=_(n))},linearApprox:({x1:e,x2:t,y1:o,y2:a})=>{if("number"!=typeof o)return n.error(`call for linearApprox with incorrect value type for y1: ${o}`),()=>0;if(e==t||null==t||null==a)return()=>o;const r=(a-o)/(t-e);return t=>r*(t-e)+o},viscosityApprox:({t1:e,t2:t,v1:o,v2:a})=>{if("number"!=typeof o)return n.error(`call for viscosityApprox with incorrect value type for v1: ${o}`),()=>0;if(e==t||null==t||null==a)return()=>o;const r=Math.log(o/a)/(1/e-1/t),s=o*Math.exp(-r/e);return e=>s*Math.exp(r/e)},initSystem:e=>{if("string"!=typeof e)return i.verbose&&n.warn(`invalid type (${e}) for unit system, using default SI`),h;switch(e.toLowerCase()){case"si":return h;case"english":case"en":return m;default:return n.warn(e.toLowerCase()+" - invalid unit system, using default SI"),h}},normalize:c,flueViscosity:(e,t)=>{const n=c(t,"flueViscosity"),o=f(e[34]),a=f(e[31]),r=f(e[6]),s=f(e[3]),u=f(e[2]);return e=>n.CO2*r(e)+n.SO2*o(e)+n.H2O*a(e)+n.O2*u(e)+n.N2*s(e)},flueThermalCond:(e,t)=>{const n=c(t,"flueThermalCond"),o=d(e[34]),a=d(e[31]),r=d(e[6]),s=d(e[3]),u=d(e[2]);return e=>n.CO2*r(e)+n.SO2*o(e)+n.H2O*a(e)+n.O2*u(e)+n.N2*s(e)},kw_tubes_A312_TP321:e=>{const t=e-o;return 3.6*(14.643+.0164*t+-2e-6*t**2)},LMTD:(e,t,n,o,a)=>{let r=n-t,s=o-e;return a&&(r=o-e,s=n-t),Math.abs((r-s)/Math.log(Math.abs(r/s)))}}},684:e=>{"use strict";e.exports=JSON.parse('[{"ID":0,"Substance":"Carbon","Formula":"C","MW":12.011,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1,"SO2":0,"CO2":1,"H2O":0,"N2":3.773269},{"ID":1,"Substance":"Hydrogen","Formula":"H2","MW":2.0159,"h0":0,"Cp0":14.209,"c0":13.46,"c1":4.6,"c2":-6.85,"c3":3.79,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.5,"SO2":0,"CO2":0,"H2O":1,"N2":1.886634},{"ID":2,"Substance":"Oxygen","Formula":"O2","MW":31.9988,"h0":0,"Cp0":0.922,"c0":0.88,"c1":-0.0001,"c2":0.54,"c3":-0.33,"u0":0.00845,"u1":0.0000472,"u2":-6.56e-9,"k0":0.00733,"k1":0.0000708,"k2":-6.61e-9,"O2":-1,"SO2":0,"CO2":0,"H2O":0,"N2":0},{"ID":3,"Substance":"Nitrogen","Formula":"N2","MW":28.0134,"h0":0,"Cp0":1.042,"c0":1.11,"c1":-0.48,"c2":0.96,"c3":-0.42,"u0":0.00784,"u1":0.0000387,"u2":-5.11e-9,"k0":0.00952,"k1":0.000062,"k2":-6.22e-9,"O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":4,"Substance":"Nitrogen (atm)","Formula":"N2a","MW":28.158,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":5,"Substance":"Carbon Monoxide","Formula":"CO","MW":28.0104,"h0":-110527,"Cp0":1.041,"c0":1.1,"c1":-0.46,"c2":1,"c3":-0.454,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.5,"SO2":0,"CO2":1,"H2O":0,"N2":1.886634},{"ID":6,"Substance":"Carbon Dioxide","Formula":"CO2","MW":44.0098,"h0":-393522,"Cp0":0.842,"c0":0.45,"c1":1.67,"c2":-1.27,"c3":0.39,"u0":0.00331,"u1":0.0000445,"u2":-6.69e-9,"k0":-0.00958,"k1":0.0000918,"k2":-1.14e-8,"O2":0,"SO2":0,"CO2":1,"H2O":0,"N2":0},{"ID":7,"Substance":"Methane","Formula":"CH4","MW":16.0428,"h0":-74873,"Cp0":2.254,"c0":1.2,"c1":3.25,"c2":0.75,"c3":-0.71,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":2,"SO2":0,"CO2":1,"H2O":2,"N2":7.546539},{"ID":8,"Substance":"Ethane","Formula":"C2H6","MW":30.0697,"h0":-84740,"Cp0":1.766,"c0":0.18,"c1":5.92,"c2":-2.31,"c3":0.29,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3.5,"SO2":0,"CO2":2,"H2O":3,"N2":13.20644},{"ID":9,"Substance":"Propane","Formula":"C3H8","MW":44.0966,"h0":-103900,"Cp0":1.679,"c0":-0.096,"c1":6.95,"c2":-3.6,"c3":0.73,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":5,"SO2":0,"CO2":3,"H2O":4,"N2":18.86634},{"ID":10,"Substance":"n-Butane","Formula":"C4H10","MW":58.1235,"h0":-126200,"Cp0":1.716,"c0":0.163,"c1":5.7,"c2":-1.906,"c3":-0.049,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":11,"Substance":"Isobutane","Formula":"iC4H10","MW":58.1235,"h0":-135000,"Cp0":1.547,"c0":0.206,"c1":5.67,"c2":-2.12,"c3":0.183,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":12,"Substance":"n-Pentane","Formula":"C5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":13,"Substance":"Isopentane","Formula":"iC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":14,"Substance":"Neopentane","Formula":"nC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":15,"Substance":"n-Hexane","Formula":"C6H14","MW":86.1773,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":9.5,"SO2":0,"CO2":6,"H2O":7,"N2":35.84606},{"ID":16,"Substance":"Ethylene","Formula":"C2H4","MW":28.0538,"h0":52467,"Cp0":1.548,"c0":0.136,"c1":5.58,"c2":-3,"c3":0.63,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3,"SO2":0,"CO2":2,"H2O":2,"N2":11.3198},{"ID":17,"Substance":"Propylene","Formula":"C3H6","MW":42.0807,"h0":20410,"Cp0":1.437,"c0":0.454,"c1":4.06,"c2":-0.934,"c3":-0.133,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":4.5,"SO2":0,"CO2":3,"H2O":3,"N2":16.97971},{"ID":18,"Substance":"n-Butene (Butylene)","Formula":"C4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":19,"Substance":"Isobutene","Formula":"iC4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":20,"Substance":"n-Pentene","Formula":"C5H10","MW":70.1345,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":7.5,"SO2":0,"CO2":5,"H2O":5,"N2":28.29952},{"ID":21,"Substance":"Benzene","Formula":"C6H6","MW":78.1137,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":7.5,"SO2":0,"CO2":6,"H2O":3,"N2":28.29952},{"ID":22,"Substance":"Toluene","Formula":"C7H8","MW":92.1406,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":9,"SO2":0,"CO2":7,"H2O":4,"N2":33.95942},{"ID":23,"Substance":"Xylene","Formula":"C8H10","MW":106.1675,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":10.5,"SO2":0,"CO2":8,"H2O":5,"N2":39.6193},{"ID":24,"Substance":"Acetylene","Formula":"C2H2","MW":26.0379,"h0":226731,"Cp0":1.699,"c0":1.03,"c1":2.91,"c2":-1.92,"c3":0.54,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":2.5,"SO2":0,"CO2":2,"H2O":1,"N2":9.433174},{"ID":25,"Substance":"Naphthalene","Formula":"C10H8","MW":128.1736,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":12,"SO2":0,"CO2":10,"H2O":4,"N2":45.27923},{"ID":26,"Substance":"Methyl alcohol-Methanol","Formula":"CH3OH","MW":32.0422,"h0":-201300,"Cp0":1.405,"c0":0.66,"c1":2.21,"c2":0.81,"c3":-0.89,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1.5,"SO2":0,"CO2":1,"H2O":2,"N2":5.659904},{"ID":27,"Substance":"Ethyl alcohol-Ethanol","Formula":"C2H5OH","MW":46.0691,"h0":-235000,"Cp0":1.427,"c0":0.2,"c1":-4.65,"c2":-1.82,"c3":0.03,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3,"SO2":0,"CO2":2,"H2O":3,"N2":11.3198},{"ID":28,"Substance":"Ammonia","Formula":"NH3","MW":17.0306,"h0":-45720,"Cp0":2.13,"c0":1.6,"c1":1.4,"c2":1,"c3":-0.7,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.75,"SO2":0,"CO2":0,"H2O":1.5,"N2":2.82995},{"ID":29,"Substance":"Sulfur","Formula":"S","MW":32.066,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1,"SO2":1,"CO2":0,"H2O":0,"N2":3.773269},{"ID":30,"Substance":"Hydrogen sulfide","Formula":"H2S","MW":34.0819,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":-0.000545,"u1":0.0000502,"u2":-1.3e-8,"k0":"-","k1":"-","k2":"-","O2":1.5,"SO2":1,"CO2":0,"H2O":1,"N2":5.659904},{"ID":31,"Substance":"Steam (Water vapor)","Formula":"H2O","MW":18.0153,"h0":-241826,"Cp0":1.872,"c0":1.79,"c1":0.107,"c2":0.586,"c3":-0.2,"u0":-0.00596,"u1":0.0000484,"u2":-4.76e-9,"k0":-0.00592,"k1":0.0000718,"k2":-3.03e-8,"O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":32,"Substance":"Water (liquid)","Formula":"H2Ol","MW":18.0153,"h0":-285830,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":33,"Substance":"Dry Air","Formula":"N2+O2","MW":28.8483,"h0":0,"Cp0":1.004,"c0":1.05,"c1":-0.365,"c2":0.85,"c3":-0.39,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.2095,"SO2":0,"CO2":0,"H2O":0,"N2":0.7905},{"ID":34,"Substance":"Sulfur dioxide","Formula":"SO2","MW":62.059,"h0":-296842,"Cp0":0.624,"c0":0.37,"c1":1.05,"c2":-0.77,"c3":0.21,"u0":-0.00301,"u1":0.0000578,"u2":-1.66e-8,"k0":-0.00188,"k1":0.0000314,"k2":2.7e-8,"O2":0,"SO2":1,"CO2":0,"H2O":0,"N2":0}]')}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,n),r.exports}(()=>{const{round:e,logger:t,options:o,unitConv:a,initSystem:r,linearApprox:s,newtonRaphson:u,viscosityApprox:l,kw_tubes_A312_TP321:i}=n(170),_=n(684),{radSection:c}=n(623),{convSection:d}=n(399),{shieldSection:f}=n(16),{combSection:m}=n(911),{browserProcess:h}=n(620),p=(e,t)=>{const n=(e=>{const t=a.BPDtolb_h(a.lbtokg(e.mFluid),e.spGrav),n=a.FtoK(e.tIn),o=a.FtoK(e.tOut),u=e.miuFluidIn,_=e.miuFluidOut,c=a.CpENtoCpSI(e.cpFluidIn),d=a.CpENtoCpSI(e.cpFluidOut),f=a.kwENtokwSI(e.kwFluidIn),m=a.kwENtokwSI(e.kwFluidOut);return{runDistCycle:e.runDistCycle,p_atm:e.pAtm,t_fuel:e.tFuel,t_air:e.tAir,t_amb:e.tAmb,humidity:e.humidity,airExcess:e.airExcess,o2Excess:e.o2Excess,sp_grav:e.spGrav,t_in_conv:n,t_out:o,m_fluid:t,Rfi:a.RfENtoRfSI(e.rfi),Rfo:a.RfENtoRfSI(e.rfo),Rfi_conv:0,Rfi_shld:0,Rfo_shld:0,efficiency:e.effcy,duty_rad_dist:e.radDist,heat_loss_percent:e.hLoss,max_duty:a.BTUtokJ(71527.6),miu_fluid:l({t1:n,v1:u,t2:o,v2:_}),Cp_fluid:s({x1:n,y1:c,x2:o,y2:d}),kw_fluid:s({x1:n,y1:f,x2:o,y2:m}),Material:"A-312 TP321",h_conv:a.hcENtohcSI(1.5),kw_tube:i,Pass_number:2,Pitch_rad:a.intom(16),N_rad:42,L_rad:a.fttom(62.094),Do_rad:a.intom(8.625),Sch_rad:a.intom(.322),Burner_number:13,Do_Burner:2.24,Width_rad:17.5,Length_rad:64.55,Height_rad:27,N_shld:16,L_shld:a.fttom(60),Do_shld:a.intom(6.625),Pitch_sh_cnv:a.intom(12),Sch_sh_cnv:a.intom(.28),Tpr_sh_cnv:8,N_conv:40,L_conv:a.fttom(60),Do_conv:a.intom(6.625),Nf:a.mtoft(60),Tf:a.fttom(.005),Lf:a.fttom(.08),FinType:"Solid",FinMaterial:"11.5-13.5Cr",FinArrange:"Staggered Pitch",verbose:e.verbose,unitSystem:e.unitSystem,lang:e.lang,NROptions:e.NROptions,units:r(e.unitSystem)}})(t);0!=n.o2Excess&&$(n,e);const o=m(n.airExcess,e,n);return n.runDistCycle&&O(n),o.rad_result=c(n),o.shld_result=f(n),o.conv_result=d(n),o},O=n=>{let o=0,a=!0;const r={...n.NROptions};r.maxIterations*=5,r.tolerance*=.1,r.epsilon*=.1,r.h*=.1;const s=u((e=>{o++,e>.3&&e<1&&(n.duty_rad_dist=e);const t={rad:c(n,a),shld:f(n,a),conv:d(n,a)},r=Math.abs(t.rad.Q_fluid)+Math.abs(t.shld.Q_fluid)+Math.abs(t.conv.Q_fluid);return(n.duty-r)/r}),n.duty_rad_dist,r,"rad_dist_final");s>.1&&s<1?n.duty_rad_dist=s:t.error("external cycle broken, error in rad_dist estimation, using: "+n.duty_rad_dist),t.info(`duty_rad_dist: ${e(100*s,2)}, ext_cycle_reps: ${o}`)},$=(n,o)=>{let a=0;const r={...n.NROptions};r.maxIterations*=5,r.tolerance*=.1,r.epsilon*=.1,r.h*=.1;const s=u((e=>{a++;const t=m(e,o,n,!0);return Math.round(1e5*t.flows["O2_%"]-1e7*n.o2Excess)}),.05,r,"o2_excess_to_air");s&&(n.airExcess=s),t.info(`'air_excess': ${e(100*s,2)}, 'comb_cycle_reps': ${a}`)};let C={H2:.1142,N2:.0068,CO:.0066,CO2:.0254,CH4:.5647,C2H6:.1515,C3H8:.0622,C4H10:.0176,iC4H10:.0075,C2H4:.0158,C3H6:.0277};"undefined"!=typeof window?h(C,_,o,p):t.info(JSON.stringify(p(C,o),null,2))})()})();