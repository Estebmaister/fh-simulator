(()=>{var e={620:(e,t,n)=>{const{logger:o}=n(170),{stringRadResult:r,stringShldResult:s,stringConvResult:a}=n(30),u=(e,t,n)=>{let r;switch(e){default:break;case"t_amb":r=parseFloat(t[e]),r>-n.tempToK&&r<100&&(n.tAmb=r+n.tempToK);break;case"humidity":r=parseFloat(t[e]),r>=0&&r<=100&&(n.humidity=r);break;case"p_atm":r=parseFloat(t[e]),r>.001&&r<1e3&&(n.pAtm=1e3*r);break;case"air_excess":r=parseFloat(t[e]),r>=0&&r<=300&&(n.airExcess=.01*r);break;case"o2_excess":r=parseFloat(t[e]),r>=0&&r<=30&&(n.o2Excess=.01*r);break;case"unit_system":o.debug(`"${e}", "value":"${t[e]}"`),n.unitSystem=t[e]}};e.exports={browserProcess:(e,t,n,l)=>{let i="en";const c=window.location.pathname.split("/");c.length>0&&c.forEach((e=>{"es"==e&&(i="es")})),n.lang=i;const _=(e=>{if(""==e)return{};let t={};for(const n of e){const e=n.split("=",2);1==e.length?t[e[0]]="":t[e[0]]=decodeURIComponent(e[1].replace(/\+/g," "))}return t})(window.location.search.substr(1).split("&"));_!=={}&&((e,t,n,r)=>{const s={},a=n.filter((t=>t.Formula in e));for(const t in e)if(1===a.filter((e=>e.Formula==t)).length&&""!==e[t]){const n=parseFloat(e[t]);n>0&&n<=100?s[t]=n/100:o.error(`fuel fraction invalid (${n}) for ${t}`)}else""!==e[t]&&void 0!==e[t]&&u(t,e,r);Object.keys(s).length})(_,0,t,n),((e,t,n,o)=>{let u="";u+="es"==n?`\nDatos de entrada\n  (en caso de no haber sido introducidos, tomará el predeterminado)\n\n  Sistema de unidades:   ${e.debug_data.unitSystem}\n  Presión atmosférica:   ${e.debug_data.atmPressure}\n  Temperatura ambiente:  ${e.debug_data.ambTemperature}\n  Humedad:               ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:       ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:       ${e.debug_data["dryAirO2_%"]} %\n\n  Presión de aire seco:     ${e.debug_data.dryAirPressure}\n  Presión de vapor de agua: ${e.debug_data.waterPressure}\n  Presión parcial de H2O:   ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Presión parcial de N2:    ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Presión parcial de O2:    ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Contenido húmedo (w):     ${e.debug_data.moisture}-AireSeco\n\nMoles de gases de combustión total y porcentajes por cada mol de combustible\n\n  Flujo total: ${e.flows.total_flow}\n  Flujo seco:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Porcentajes en base húmeda\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Exceso de aire usado: ${e.flows["air_excess_%"]} %\n  Moles O2 requeridos/mol de combustible (teórico): ${e.flows.O2_mol_req_theor}\n\n  Relación A/C molar húmeda:  ${e.flows.AC}\n  Relación A/C másica húmeda: ${e.flows.AC_mass}\n  Relación A/C molar (aire seco, teórica):    ${e.flows.AC_theor_dryAir}\n  Relación A/C másica (aire húmedo, teórica): ${e.flows.AC_mass_theor_moistAir}\n\n  Peso molecular del combustible: ${e.flows.fuel_MW}\n  Cp(t_entrada) del combustible:  ${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Peso molecular de los gases de combustión: ${e.flows.flue_MW}\n  Cp(t_amb) de los gases de combustión: ${e.flows.flue_Cp_Tamb}\n`:`\nInput Data \n  (in case of no input, default values will be taken)\n\n  Unit System:          ${e.debug_data.unitSystem}\n  Atmospheric Pressure: ${e.debug_data.atmPressure}\n  Ambient Temperature:  ${e.debug_data.ambTemperature}\n  Humidity:             ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:      ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:      ${e.debug_data["dryAirO2_%"]} %\n\n  Dry Air Pressure:     ${e.debug_data.dryAirPressure}\n  Water Vapor Pressure: ${e.debug_data.waterPressure}\n  Partial Pressure H2O: ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Partial Pressure N2 : ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Partial Pressure O2 : ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Moisture content (w): ${e.debug_data.moisture}-dryAir\n\nTotal flue gas moles and percentage (per fuel mol)\n\n  Flow total: ${e.flows.total_flow}\n  Dry total:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Moist basis percentage\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Air excess used : ${e.flows["air_excess_%"]} %\n  Moles O2 required/fuel-mol (theoretical): ${e.flows.O2_mol_req_theor}\n\n  A/C molar moist relation:   ${e.flows.AC}\n  A/C mass moist relation:    ${e.flows.AC_mass}\n  A/C molar relation (dry air, theoretical):   ${e.flows.AC_theor_dryAir}\n  A/C mass relation (moist air, theoretical):  ${e.flows.AC_mass_theor_moistAir}\n\n  Fuel mol weight:    ${e.flows.fuel_MW}\n  Fuel Cp(t_fuel_in):\t${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Flue gas mol weight: ${e.flows.flue_MW}\n  Flue gas Cp(t_amb):  ${e.flows.flue_Cp_Tamb}\n`,document.getElementById("loader-wrapper").remove(),document.getElementById("output-combustion").textContent=u,document.getElementById("output-radiant").textContent=r(n,e.rad_result,o),document.getElementById("output-shield").textContent=s(n,e.shld_result,o),document.getElementById("output-convective").textContent=a(n,e.conv_result,o)})(l(e,n),0,i,n.unitSystem)}}},392:(e,t,n)=>{const{newtonRaphson:o,options:r,logger:s,round:a,roundDict:u,initSystem:l,normalize:i,flueViscosity:c,flueThermalCond:_}=n(170),d=n(684),f={O2:.2095,N2:.7905,H2O:0},m=(e,t={})=>{const n=Object.values(e).reduce(((e,t)=>e+t)),o=Math.abs(1-n)<=3e-12;return o||(t.err+=`[fuel fraction not equal to 1, total: ${n}. fuels: ${Object.keys(e)}],`),o},h=({c0:e,c1:t,c2:n,c3:o,MW:r,Substance:a},u)=>l=>"-"===e?(s.debug(`"Cp0", "Msg": "Wrong use, called for compound ${a}, no data found"`),0):u?r*(e+t*(.001*l)+n*(.001*l)**2+o*(.001*l)**3):e+t*(.001*l)+n*(.001*l)**2+o*(.001*l)**3,p=(e,t)=>{if(0===e.length)return e=>0;let n=JSON.parse(JSON.stringify(e));m(e)||(n=i(n,"Cp_multicomp"));const o=d.filter((e=>e.Formula in n)),r=[];let s=0;for(const e in n)r[s]=r=>n[e]*h(o.filter((t=>t.Formula==e))[0],t)(r),s++;return r.reduce(((e,t)=>n=>e(n)+t(n)),(e=>0))},O=e=>{if(0===e.length)return e=>0;let t=JSON.parse(JSON.stringify(e));m(e)||(t=i(t,"MW_multicomp"));const n=d.filter((e=>e.Formula in t));let o=0;for(const e in t)o+=n.filter((t=>t.Formula==e))[0].MW*t[e];return o},C=(e,t)=>{const n=e-r.tempToK;return 610.78*Math.exp(n/(n+238.3)*17.2694)*t*.01},$=(e,t)=>{const n=C(e,t);return d[31].MW*n/(O(f)*(r.pAtm-n))},b=(e,t)=>"-"===e.Cp0?"-"===e.h0?(r.verbose&&s.warn(`wrong use of deltaH func, called for compound ${e.Substance} without data`),void 0===t?()=>0:0):void 0===t?()=>e.h0:e.h0:void 0===t?t=>e.h0+e.MW*h(e)((r.tempAmbRef+t)/2)*(t-r.tempAmbRef):e.h0+e.MW*h(e)((r.tempAmbRef+t)/2)*(t-r.tempAmbRef),g=(e,t,n,o)=>{const s=b(d[6]),a=b(d[34]),u=b(d[2]);let l=b(d[31]);return!0===o&&(l=b(d[32])),void 0===n&&(n=r.tAmb),void 0===t?t=>e.CO2*s(t)+e.SO2*a(t)+e.H2O*l(t)-b(e)(n)-e.O2*u(n):e.CO2*s(t)+e.SO2*a(t)+e.H2O*l(t)-b(e)(n)-e.O2*u(n)};e.exports={combSection:(e,t,n)=>{s.debug(`"airExcess", "value": ${e}`);const h=l(n.unitSystem),k={err:"",atmPressure:h.pressure(n.p_atm),ambTemperature:h.tempC(n.t_amb),"humidity_%":a(n.humidity),"dryAirN2_%":a(79.05),"dryAirO2_%":a(20.95),moisture:h.moist($(n.t_amb,n.humidity)),unitSystem:h.system[n.lang]},v=d.filter(((e,n,o)=>e.Formula in t));let w={...t};m(t,k)||(w=i(t,"combSection")),((e,t,n={})=>{const o=Math.abs(t.length-Object.keys(e).length);0===o||(s.error(`[some fuels aren't in the database, #badFuels: ${o}],`),n.err+=`[some fuels aren't in the database, #badFuels: ${o}],`)})(w,v,k);const N={O2:0,N2:0,H2O:0,CO2:0,SO2:0},S={...f};((e,t,n)=>{for(const o of e)for(const e in t)if("N2"!=e)t[e]+=o[e]*n[o.Formula];else{if("N2"==o.Formula||'"N2a'==o.Formula){t[e]+=n[o.Formula];continue}t[e]+=o.O2*n[o.Formula]*3.7732696897374702}})(v,N,w),e-1e-6<0&&(e=0),n.humidity-1e-6<0&&(n.humidity=0);let y=N.O2,A=y*(1+e);if(N.O2<=0||N.N2<0)s.error(`airExcess set to 0, O2 in fuel is greater than or equal to needed. Products O2:${N.O2}, N2:${N.N2}`),A=0,y=0,N.N2=w.N2,N.O2=-N.O2;else{const e=C(n.t_amb,n.humidity),t=n.p_atm-e;S.N2=.7905*t/n.p_atm,S.O2=.2095*t/n.p_atm,S.H2O=e/n.p_atm,k.dryAirPressure=h.pressure(t),k.waterPressure=h.pressure(e),k["H2OPressure_%"]=a(100*S.H2O),k["N2Pressure_%"]=a(100*S.N2),k["O2Pressure_%"]=a(100*S.O2),N.O2=A-N.O2,N.N2+=N.O2*(S.N2/S.O2),N.H2O+=N.N2*(e/(S.N2*n.p_atm))}n.NCV=-((e,t,n,o)=>{let r=0;for(const s in e){if(s in t)continue;const a=n.filter((e=>e.Formula==s))[0];r+=e[s]*g(a)(o)}return r})(w,N,v,n.t_amb)/O(w),n.adFlame=o(((e,t,n,o)=>{void 0===n&&(n=r.tAmb),void 0===o&&(o=0);const s=d.filter((t=>t.Formula in e)),a=b(d.filter((e=>"O2"==e.Formula))[0]),u=b(d.filter((e=>"N2"==e.Formula))[0]),l=b(d.filter((e=>"CO2"==e.Formula))[0]),i=b(d.filter((e=>"H2O"==e.Formula))[0]),c=b(d.filter((e=>"SO2"==e.Formula))[0]),_=[];let f=0;for(const t in e)_[f]=e[t]*b(s.filter((e=>e.Formula==t))[0])(n),f++;return e=>(e=>t.O2*a(e)+t.SO2*c(e)+t.H2O*i(e)+t.CO2*l(e)+t.N2*u(e)-t.N2*u(n)-o*a(n))(e)-_.reduce(((e,t)=>e+t))})(w,N,n.t_amb,A),2e3,n.NROptions,"fuel_adFlame"),s.info(`Adiabatic flame temp: [${a(n.adFlame)} K] ${h.tempC(n.adFlame)}`);let F=0,H=0;for(const e in N)F+=N[e],"H2O"!==e&&(H+=N[e]);const T={total_flow:F,dry_total_flow:H,"N2_%":100*N.N2/F,"H2O_%":100*N.H2O/F,"CO2_%":100*N.CO2/F,"O2_%":100*N.O2/F,O2_mol_req_theor:y,O2_mass_req_theor:h.mass(y*d[2].MW),"air_excess_%":100*n.airExcess,AC:A/S.O2,AC_theor_dryAir:y/.2095,AC_mass:A/S.O2*O(S)/O(w),AC_mass_theor_moistAir:y/S.O2*O(S)/O(w),fuel_MW:h["mass/mol"](O(w)),fuel_Cp:h.cp(p(w,!0)(n.t_fuel)),flue_MW:h["mass/mol"](O(N)),flue_Cp_Tamb:h.cp(p(N,!0)(n.t_amb)),NCV:h["energy/mass"](n.NCV)};return n.Pco2=N.CO2/F,n.Ph2o=N.H2O/F,n.m_flue_ratio=F*O(N)/O(w),n.m_air_ratio=A/S.O2*O(S)/O(w),n.Cp_flue=p(N),n.Cp_air=p(S),n.Cp_fuel=p(w),n.miu_flue=c(d,N),n.kw_flue=_(d,N),u(N),u(T),u(k),""==k.err&&delete k.err,{flows:T,products:N,debug_data:k}}}},489:(e,t,n)=>{const{newtonRaphson:o,logger:r,LMTD:s,round:a,unitConv:u}=n(170),{options:l,initSystem:i}=n(170),c=i("EN");e.exports={convSection:e=>{if(null==e)return r.error("wrong call for convection section, no parameters set at call."),{};let t=e.tg_sh,n=0,l=e.t_in_sh,i=e.t_in_conv,_=0;const d=(e,t=l)=>.5*(e+t),f=e.m_fluid,m=e.m_flue,h=(t,n=t)=>e.Cp_fluid(d(t,n)),p=(t,n=t)=>e.Cp_flue(d(t,n)),O=t=>e.kw_fluid(t),C=t=>e.kw_tube(t),$=t=>e.kw_flue(t),b=t=>e.miu_fluid(t),g=t=>e.miu_flue(t),k=e.Rfo,v=e.Rfi,w=e.N_conv,N=e.L_conv,S=e.Do_conv,y=e.Do_conv-2*e.Sch_sh_cnv,A=e.Pitch_sh_cnv,F=e.N_conv/e.Tpr_conv,H=w*A*N,T=w*Math.PI*S*N,M=Math.PI*y**2/2,R=(w/F*(A-S)+A/2)*N,P=T,I=2/3*(e.Width_rad*e.Length_rad*e.Height_rad)**(1/3),D=(e.Ph2o+e.Pco2)*I,x=3.6;r.warn(`Acp_conv: ${a(u.m2toft2(H))} ft`);const W=e=>b(e)*x*h(e)/O(e),B=e=>g(e)*x*p(e)/$(e),Q=f/x/M,E=e=>Q*y/b(e),L=m/x/R,U=e=>L*S/g(e),J=t=>((e,t,n)=>{const o=n.Lf,r=1/n.Nf-n.Tf,s=.35+.65*Math.exp(-.25*o/r),a=n.Pitch_sh_cnv,u=n.Pitch_sh_cnv,l=n.N_conv/n.Tpr_conv,i=.7+(.7-.8*Math.exp(-.15*l**2))*Math.exp(-a/u),c=(2*n.Lf+n.Do_conv)/n.Do_conv;return n=>(t=>.25*e(t)**-.35)(n)*s*i*c**.5*(n/t())**.25})(U,X,e)(t),K=(e,t=e)=>O(e)/y*.023*E(e)**.8*W(e)**(1/3)*(b(e)/b(t))**.14,G=(e,t)=>2.2*12.6*D**.5*(P/T)**.75,j=e=>J(e)*L*p(e)*B(e)**-.67,V=(e,t)=>1/(1/(j(e)+G())+k),q=(e,t)=>V(e)*(1+P)/T,z=(e,t=l)=>f*h(e,t)*(t-e),X=(e=d(l,i),t=e,n=i)=>(e=>z(e))(n)/T*(S/y)*(v+1/K(e,t)+y*Math.log(S/y)/(2*C(t)))+e,Y=e=>s(e,l,t,n),Z=(e,t)=>S/y*(1/K(e,t)+v),ee=e=>S*Math.log(S/y)/(2*C(e)),te=(e,t)=>1/q(e),ne=(e,t,n)=>1/((e,t,n)=>te(e)+ee(n)+Z(t,n))(e,t,n),oe=(e,t)=>m*p(e,t)*(e-t),re=(e,t,n)=>ne(d(n,t),d(e),X(d(e),X(d(e))))*T*Y(e),se=e=>oe(t,e)-z(i,l),ae=e=>z(e)-re(e,t,n);n=o(se,t-58,e.NROptions,"Tg_out_convective-1"),_=o(ae,i,e.NROptions,"T_in_convective-1"),r.warn(`"vars to check in shld section",\n    "t_in_conv":  "${c.tempC(_)} vs ${c.tempC(i)}"`);const ue=(e,t=i)=>Math.abs(e-t)/t;let le=0;for(;ue(_)>1e-6;){if(r.debug(`"Tin_convective", "t_in_cnv_calc": ${_}, "t_in_cnv_sup": ${i}`),!_){r.error("Invalid t_in_calc at convective sect");break}if(i=_,n=o(se,t-58,e.NROptions,"Tg_out_convective-2"),_=o(ae,i,e.NROptions,"T_in_convective-2"),le++,le>10){r.info(`diff vs error: 0.000001-${ue(_)}`),r.error("Max iterations reached for inlet temp calc at convective sect");break}}const ie={t_in_given:e.t_in_conv,t_in:i,t_out:l,Tb:d(i),Tw:X(d(i),X(d(i))),tg_out:n,tg_in:t,Tb_g:d(t,n),LMTD:Y(i),DeltaA:t-l,DeltaB:n-i,Q_flue:oe(t,n),Q_fluid:z(i),Q_conv:re(i,t,n),Cp_fluid:h(i,l),Cp_flue:p(t,n),miu_fluid:b(X(d(i))),kw_fluid:O(d(i)),kw_tube:C(X(d(i))),kw_flue:$(d(t,n)),Prandtl:a(W(d(l))),Reynolds:a(E(d(l))),PrandtlFlue:a(B(d(l))),ReynoldsFlue:a(U(d(l))),At:T,Ai:M,An:R,hi:K(d(i)),hi_tw:K(d(i),X(d(i),X(d(i)))),hr:G(d(n,t),X(d(i),X(d(i)))),hc:j(d(t,n)),ho:V(d(t,n),X(d(i),X(d(i)))),he:q(d(t,n),X(d(i),X(d(i)))),j:J(d(n,t)),Uo:ne(d(t,n),d(i),X(d(i))),R_int:Z(d(i),X(d(i))),R_tube:ee(X(d(i))),R_ext:te(d(t,n),X(d(i))),TUBING:{Material:"A-312 TP321","No Tubes Wide":e.Tpr_conv,"No Tubes":w,"Wall Thickness":c.length(e.Sch_sh_cnv),"Outside Di":c.length(S),"Ef. Length":c.length(N),"Tran Pitch":c.length(A),"Long Pitch":c.length(A)},FINING:{Material:"11.5-13.5Cr",Type:"Solid",Height:c.length(e.Lf),Thickness:c.length(e.Tf),Dens:e.Nf+" 1/m",Arrange:"Staggered Pitch"}};return ie.miu_flue=g(n),r.default(`T_in_given: ${c.tempC(e.t_in_conv)}, T_in_calc: ${c.tempC(_)}, Tg_out_conv: ${c.tempC(n)}`),e.t_in_conv_calc=i,e.tg_conv=n,ie}}},113:(e,t,n)=>{const{newtonRaphson:o,logger:r,round:s,unitConv:a}=n(170),{options:u,initSystem:l}=n(170),i=l(u.unitSystem),c=(e,t,n)=>{let u=0,l=0,c=n.t_out,f=e||n.m_fuel;const m=n.t_air,h=n.t_fuel,p=n.t_amb,O=n.t_in_conv,C=(e,t=l)=>.5*(t+e),$=n.Rfi,b=n.N_rad,g=n.N_shld,k=n.L_rad,v=n.L_shld,w=n.Do_rad,N=n.Do_rad-n.Sch_rad,S=n.Pitch_rad||.394,y=n.Pitch_sh_cnv,A=n.h_conv||30.66,F=2/3*(n.Width_rad*n.Length_rad*n.Height_rad)**(1/3),H=n.Pass_number*S/n.Do_rad,T=(n.Ph2o+n.Pco2)*F,M=1+.49*H/6-.09275*H**2+.065*H**3/6+25e-5*H**4,R=_(n.Width_rad,n.Length_rad,n.Height_rad),P=g*y*v,I=2*b*S*k,D=b*Math.PI*w*k,x=Math.PI*N**2/2,W=2.041e-7;r.warn(`Acp: ${s(a.m2toft2(I))} ft, Acp_shld: ${s(a.m2toft2(P))} ft`);const B=n.duty_rad_dist||.7,Q=n.efficiency||.8,E=n.heat_loss_percent||.015,L=n.NCV,U=n.m_fluid,J=(e=f)=>n.m_flue_ratio*e,K=n.Cp_fuel(C(h,p)),G=n.Cp_air(C(m,p)),j=(e,t=e)=>n.Cp_fluid(C(e,t)),V=(e,t=e)=>n.Cp_flue(C(e,t)),q=e=>n.kw_fluid(e),z=e=>n.kw_tube(e),X=e=>n.miu_fluid(e);let Y=0;const Z=e=>d(T,M,I,1,P,R)(a.KtoF(e)),ee=e=>X(e)*j(e)*3.6/q(e),te=U/3.6/x,ne=e=>te*N/X(e),oe=(e,t=e)=>q(e)/N*.023*ne(e)**.8*ee(e)**(1/3)*(X(e)/X(t))**.14,re=(e,t=e,n=Y)=>n/D*(w/N)*($+1/oe(e,t)+N*Math.log(w/N)/(2*z(t)))+e,se=(e,t=m,o=p)=>((e=f)=>n.m_air_ratio*e)(e)*G*(t-o),ae=e=>e*L,ue=(e,t=h,n=p)=>e*K*(t-n),le=(e,t=m,n=h,o=p)=>ae(e)+se(e,t,o)+ue(e,n,o),ie=(e=f)=>E*ae(e),ce=(e,t=c,n=l)=>W*Z(e)*(M*I)*(e**4-re(C(t,n),re(C(t,n)))**4),_e=(e,t=c,n=l)=>A*D*(e-re(C(t,n),re(C(t,n)))),de=(e,t=c,n=l)=>ce(e,t,n)+_e(e,t,n),fe=(e,t=c,n=l)=>W*Z(e)*(1*P)*(e**4-re(C(t,n),re(C(t,n)))**4),me=(e,t=f,n=p)=>J(t)*V(e,n)*(e-n),he=(e,t=c,n=f,o=l,r=p)=>de(e,t,o)+fe(e,t,o)+ie(n)+me(e,n,r);let pe=0,Oe=0;if(void 0!==t){Oe=U*j(O,c)*(c-O),Y=Oe*B,l=O+Oe*(1-B)/(U*j(O,c)),pe=o((e=>U*j(l,c)*(c-l)-(ce(e)+_e(e))),1e3,n.NROptions,"rad_Tg_Tout"),pe&&(u=pe);const e=e=>he(u,c,e)-le(e),t=U*j(O,c)*(c-O)/(L*Q);f=o(e,t,n.NROptions,"rad_mFuel"),f&&(n.m_fuel=f)}else if(void 0!==e){Oe=ae(e)*Q,Y=Oe*B,l=O+Oe*(1-B)/(U*j(O)),t=O+Oe/(U*j(l)),pe=o((e=>he(e,t,f)-le(f)),1e3,n.NROptions,"rad_Tg_mFuel"),pe&&(u=pe),c=o((e=>U*j(l,t)*(e-l)-(ce(u)+_e(u))),t,n.NROptions,"rad_Tout"),c&&(n.t_out=c),r.info(`t_out, seed: ${t} vs calc: ${c}`);const s=U*j(l,c)*(c-O),a=n.t_in_conv+s*(1-B)/(U*j(l,c));r.info(`t_in_rad, seed: ${l} vs calc: ${a}`)}else n.err+="-wrong call for rad section, no seed for mass fuel or out temp.";n.t_out=c,n.t_in_rad=l,n.tg_rad=u,n.duty_rad=Y,n.q_rad_sh=fe(u),n.m_flue=J(f);const Ce={m_fuel:f,t_in:l,t_out:c,Tw:re(C(c),re(C(c))),tg_out:u,Q_in:le(f),Q_rls:ae(f),Q_air:se(f),Q_fuel:ue(f),Q_out:he(u,c,f),Q_flue:me(u),Q_losses:ie(f),Q_shld:fe(u),Q_conv:_e(u),Q_rad:ce(u,c),Q_R:de(u),Q_fluid:((e=c,t=l)=>U*j(e,t)*(e-t))(),kw_fluid:q(C(l)),kw_tube:z(re(C(l))),kw_flue:n.kw_flue(u),Cp_fluid:j(l,c),Cp_fuel:K,Cp_air:G,Cp_flue:V(u,p),At:D,Ar:R,Ai:x,Acp:I,Acp_sh:P,duty:Oe,duty_rad:Y,duty_flux:Y/D,hi:oe(C(c)),hi_tw:oe(C(c),re(C(c))),hi_tww:oe(C(c),re(C(c),re(C(c)))),h_conv:A,Prandtl:s(ee(C(c))),Reynolds:s(ne(C(c))),Alpha:s(M),MBL:s(F),Pco2:s(n.Pco2),Ph2o:s(n.Ph2o),PL:s(T),F:s(Z(u)),F_desired:.635,TUBING:{Material:"A-312 TP321","No Tubes Wide":2,"No Tubes":b,OD:i.length(w),"Wall Thickness":i.length(n.Sch_rad),Length:i.length(k),"Tube Spacing":i.length(S)},FINING:"None"};return Ce.miu_flue=n.miu_flue(u),Ce.miu_fluid=X(C(c)),Ce},_=(e,t,n)=>{const o=t*e,s=n*t,u=58*e+2*s+o,l=n*e*2+2*s+1.234*o;return r.warn(`{"Ar prev (ft)": ${u},"Ar calc (ft)": ${l}}`),a.fttom(l)*a.fttom(1)},d=(e,t,n,o,r,s)=>{const a=o*r+t*n,u=(s-a)/a,l=(e=>{const t={a:{A:2.58e-8,B:-39e-9,C:6.8e-9,D:-2.2e-10},b:{A:-119e-6,B:56e-6,C:-41e-7,D:-72e-8},c:{A:.21258,B:.2258,C:-.047351,D:.004165}},n=(e,n=t)=>t=>n.a[e]*t**2+n.b[e]*t+n.c[e],o=n("A"),r=n("B"),s=n("C"),a=n("D");return t=>o(t)+r(t)*e+s(t)*e**2+a(t)*e**3})(e),i={a:{A:-5e-4,B:.0072,C:-.0062},b:{A:.0022,B:-.1195,C:.1168},c:{A:.0713,B:.5333,C:-.6473},d:{A:-.0152,B:1.0577,C:-.154}},c=(e,t=i)=>n=>t.a[e]*n**3+t.b[e]*n**2+t.c[e]*n+t.d[e],_=c("A"),d=c("B"),f=c("C");return e=>_(u)+d(u)*l(e)+f(u)*l(e)**2};e.exports={radSection:e=>{let t={};if(null==e)return r.error("wrong call for radiant section, no parameters set at call."),t;if(void 0!==e.t_out)t=c(void 0,e.t_out,e);else if(void 0!==e.m_fuel)t=c(e.m_fuel,void 0,e);else{const t="wrong call for radiant section, no seed for mass fuel or out temp.";r.error(t),e.err+=`-${t}`}return t}}},30:(e,t,n)=>{const{round:o,initSystem:r}=n(170);e.exports={stringRadResult:(e,t,n)=>{const o=r(n);let s;s="es"==e?"Resultados para sección radiante:":"Radiant section results:";let a="\n";return Object.entries(t.TUBING).forEach((([e,t])=>a+=`\t${e}: ${t}\n`)),s+=`\n\n  m_fuel:   ${o.mass_flow(t.m_fuel)}\n\n  t_in:     ${o.tempC(t.t_in)}\n  t_out:    ${o.tempC(t.t_out)}\n  Tw:       ${o.tempC(t.Tw)}\n  tg_out:   ${o.tempC(t.tg_out)}\n\n  Q_in:     ${o.heat_flow(t.Q_in)}\n    Q_rls:    ${o.heat_flow(t.Q_rls)}\n    Q_air:    ${o.heat_flow(t.Q_air)}\n    Q_fuel:   ${o.heat_flow(t.Q_fuel)}\n\n  Q_out:    ${o.heat_flow(t.Q_out)}\n    Q_flue:   ${o.heat_flow(t.Q_flue)}\n    Q_losses: ${o.heat_flow(t.Q_losses)}\n    Q_shld:   ${o.heat_flow(t.Q_shld)}\n    Q_R:      ${o.heat_flow(t.Q_R)}\n      Q_conv:   ${o.heat_flow(t.Q_conv)}\n      Q_rad:    ${o.heat_flow(t.Q_rad)}\n    Q_fluid:  ${o.heat_flow(t.Q_fluid)}\n\n  At:       ${o.area(t.At)}\n  Ar:       ${o.area(t.Ar)}\n  Ai:         ${o.area(t.Ai)}\n  Acp:      ${o.area(t.Acp)}\n  Acp_sh:   ${o.area(t.Acp_sh)}\n\n  hi:       ${o.convect(t.hi)}\n  hi_tw:    ${o.convect(t.hi_tw)}\n  hi_twf:   ${o.convect(t.hi_tww)}\n  h_conv:   ${o.convect(t.h_conv)}\n  duty:      ${o.heat_flow(t.duty)}\n  duty_flux: ${o.heat_flux(t.duty_flux)}\n  duty_rad:  ${o.heat_flow(t.duty_rad)}\n\n\n  Alpha:    ${t.Alpha}\n  MBL:      ${t.MBL}\n  Pco2:     ${t.Pco2}\n  Ph2o:     ${t.Ph2o}\n  PL:       ${t.PL}\n  F:        ${t.F} vs ${t.F_desired}\n\n  kw_fluid: ${o.thermal(t.kw_fluid)}\n  kw_tube:  ${o.thermal(t.kw_tube)}\n  kw_flue:  ${o.thermal(t.kw_flue)}\n  Cp_fluid: ${o.cp(t.Cp_fluid)}\n  Cp_flue:  ${o.cp(t.Cp_flue)}\n  miu_fluid:${o.viscosity(t.miu_fluid)}\n  miu_flue: ${o.viscosity(t.miu_flue)}\n  \n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n  Cp_fuel:  ${o.cp(t.Cp_fuel)}\n  Cp_air:   ${o.cp(t.Cp_air)}\n\n  TUBING: ${a}\n  FINING: ${JSON.stringify(t.FINING,null,2)}\n  `,"\n"+s},stringShldResult:(e,t,n)=>{const s=r(n);let a;a="es"==e?"Resultados para sección de escudo:":"Shield section results:";let u="\n";return Object.entries(t.TUBING).forEach((([e,t])=>u+=`\t${e}: ${t}\n`)),a+=`\n\n  m_flue:   ${s.mass_flow(t.m_flue)}\n  t_in_sup: ${s.tempC(t.t_in_sup)}\n  t_in:     ${s.tempC(t.t_in)}\n  t_out:    ${s.tempC(t.t_out)}\n  Tw:       ${s.tempC(t.Tw)}\n  Tb_g:     ${s.tempC(t.Tb_g)}\n  tg_in:      ${s.tempC(t.tg_in)}\n  tg_out:     ${s.tempC(t.tg_out)}\n\n  LMTD:     ${s.temp(t.LMTD)}\n  DeltaA:     ${s.temp(t.DeltaA)}\n  DeltaB:     ${s.temp(t.DeltaB)}\n  Log(A/B):   ${o(Math.log(t.DeltaA/t.DeltaB))}\n  DeltaA-B:   ${s.temp(t.DeltaA-t.DeltaB)}\n\n  Q_flue:   ${s.heat_flow(t.Q_flue)}\n  Q_R:      ${s.heat_flow(t.Q_R)}\n    Q_rad:    ${s.heat_flow(t.Q_rad)}\n    Q_conv:   ${s.heat_flow(t.Q_conv)}\n  Q_fluid:  ${s.heat_flow(t.Q_fluid)}\n\n  At:       ${s.area(t.At)}\n  Ai:         ${s.area(t.Ai)}\n  An:       ${s.area(t.An)}\n  Acp:      ${s.area(t.Acp)}\n\n  hi:       ${s.convect(t.hi)}\n  hi_tw:    ${s.convect(t.hi_tw)}\n  hr:       ${s.convect(t.hr)}\n  ho:       ${s.convect(t.ho)}\n  hc:       ${s.convect(t.hc)}\n\n  Uo:       ${s.convect(t.Uo)}\n  R_int:    ${o(t.R_int,6)}\n  R_tube:   ${o(t.R_tube,6)}\n  R_ext:    ${o(t.R_ext,6)}\n\n  kw_fluid: ${s.thermal(t.kw_fluid)}\n  kw_tube:  ${s.thermal(t.kw_tube)}\n  kw_flue:  ${s.thermal(t.kw_flue)}\n  Cp_fluid: ${s.cp(t.Cp_fluid)}\n  Cp_flue:  ${s.cp(t.Cp_flue)}\n  miu_fluid:${s.viscosity(t.miu_fluid)}\n  miu_flue: ${s.viscosity(t.miu_flue)}\n\n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n  Pr_flue:  ${t.PrandtlFlue}\n  Re_flue:  ${t.ReynoldsFlue}\n\n  TUBING: ${u}\n  FINING: ${JSON.stringify(t.FINING,null,2)}\n  `,"\n"+a},stringConvResult:(e,t,n)=>{const s=r(n);let a;a="es"==e?"Resultados para sección convectiva:":"Convective section results:";let u="\n";return Object.entries(t.TUBING).forEach((([e,t])=>u+=`\t${e}: ${t}\n`)),a+=`\n\n\n  t_in_data:${s.tempC(t.t_in_given)}\n  t_in:     ${s.tempC(t.t_in)}\n  t_out:    ${s.tempC(t.t_out)}\n  Tw:       ${s.tempC(t.Tw)}\n  Tb_g:     ${s.tempC(t.Tb_g)}\n  tg_in:      ${s.tempC(t.tg_in)}\n  tg_out:     ${s.tempC(t.tg_out)}\n\n  LMTD:     ${s.temp(t.LMTD)}\n  DeltaA:     ${s.temp(t.DeltaA)}\n  DeltaB:     ${s.temp(t.DeltaB)}\n  Log(A/B):   ${o(Math.log(t.DeltaA/t.DeltaB))}\n  DeltaA-B:   ${s.temp(t.DeltaA-t.DeltaB)}\n\n  Q_flue:   ${s.heat_flow(t.Q_flue)}\n\n  Q_conv:   ${s.heat_flow(t.Q_conv)}\n\n  Q_fluid:  ${s.heat_flow(t.Q_fluid)}\n\n  At:       ${s.area(t.At)}\n  Ai:         ${s.area(t.Ai)}\n  An:       ${s.area(t.An)}\n\n\n  hi:       ${s.convect(t.hi)}\n  hi_tw:    ${s.convect(t.hi_tw)}\n  hr:       ${s.convect(t.hr)}\n  ho:       ${s.convect(t.ho)}\n  hc:       ${s.convect(t.hc)}\n  he:       ${s.convect(t.he)}\n  \n  Uo:       ${t.Uo}\n  R_int:    ${o(t.R_int,6)}\n  R_tube:   ${o(t.R_tube,6)}\n  R_ext:    ${o(t.R_ext,6)}\n  j:        ${o(t.j,6)}\n\n  kw_fluid: ${s.thermal(t.kw_fluid)}\n  kw_tube:  ${s.thermal(t.kw_tube)}\n  kw_flue:  ${s.thermal(t.kw_flue)}\n  Cp_fluid: ${s.cp(t.Cp_fluid)}\n  Cp_flue:  ${s.cp(t.Cp_flue)}\n  miu_fluid:${s.viscosity(t.miu_fluid)}\n  miu_flue: ${s.viscosity(t.miu_flue)}\n\n  Pr_fluid: ${t.Prandtl}\n  Re_fluid: ${t.Reynolds}\n  Pr_flue:  ${t.PrandtlFlue}\n  Re_flue:  ${t.ReynoldsFlue}\n\n  TUBING: ${u}\n  FINING: ${JSON.stringify(t.FINING,null,2)}\n  `,"\n"+a}}},361:(e,t,n)=>{const{newtonRaphson:o,logger:r,LMTD:s,round:a,unitConv:u}=n(170),{options:l,initSystem:i}=n(170),c=i(l.unitSystem);e.exports={shieldSection:e=>{let t=e.tg_rad,n=0,l=e.t_in_rad,i=.5*(e.t_in_rad+e.t_in_conv),_=0;const d=e=>m*p(e,l)*(l-e),f=(e,t=l)=>.5*(e+t),m=e.m_fluid,h=e.m_flue,p=(t,n=t)=>e.Cp_fluid(f(t,n)),O=(t,n=t)=>e.Cp_flue(f(t,n)),C=t=>e.kw_fluid(t),$=t=>e.kw_tube(t),b=t=>e.kw_flue(t),g=t=>e.miu_fluid(t),k=t=>e.miu_flue(t),v=e.Rfo,w=e.Rfi,N=e.N_shld,S=e.L_shld,y=e.Do_shld,A=e.Do_shld-2*e.Sch_sh_cnv,F=e.Pitch_sh_cnv,H=N*F*S,T=N*Math.PI*y*S,M=Math.PI*A**2/2,R=(N/2*(F-y)+F/2)*S,P=3.6;r.warn(`Acp_shld: ${a(u.m2toft2(H))} ft`);const I=e=>g(e)*P*p(e)/C(e),D=e=>k(e)*P*O(e)/b(e),x=m/P/M,W=e=>x*A/g(e),B=h/P/R,Q=e=>B*y/k(e),E=(e,t=e)=>C(e)/A*.023*W(e)**.8*I(e)**(1/3)*(g(e)/g(t))**.14,L=e=>.092*e-34,U=e=>b(e)/y*.33*D(e)**(1/3)*Q(e)**.6,J=(e,n=t)=>1/(1/(U(f(e,n))+L(n))+v),K=(e,t=e,n=i)=>d(n)/T*(y/A)*(w+1/E(e,t)+A*Math.log(y/A)/(2*$(t)))+e,G=(e,t)=>y/(A*E(e,t))+y/A*w,j=e=>y*Math.log(y/A)/(2*$(e)),V=(e,n=t)=>1/J(e,n),q=(e,t,n,o)=>1/((e,t,n,o)=>V(e,t)+j(o)+G(n,o))(e,t,n,o),z=e.q_rad_sh,X=(e,t,n,o,r)=>q(n,t,o,r)*T*s(e,l,t,n),Y=(e,t,n,o,r)=>z+X(e,t,n,o,r),Z=(e,t=l)=>m*p(e,t)*(t-e),ee=(e,t=n)=>h*O(e,t)*(e-t),te=e=>ee(t,e)+z-Z(i,l),ne=e=>Z(e)-Y(e,t,n,f(e),K(f(e),K(f(e))));n=o(te,t-200,e.NROptions,"Tg_out_shield-1"),_=o(ne,i,e.NROptions,"T_in_shield-1");const oe=(e,t=i)=>Math.abs(e-t)/t;let re=0;for(;oe(_)>1e-6;){if(r.debug(`"Tin_shield",  "t_in_sh_calc": ${a(_)}, "t_in_sh_sup": ${a(i)}`),!_){r.error("Invalid t_in_calc at shield sect");break}if(i=_,_=o(ne,i,e.NROptions,"T_in_shield-2"),n=o(te,t-58,e.NROptions,"Tg_out_shield-2"),re++,re>10){r.info(`diff vs error: 0.000001-${oe(_)}`),r.error("Max iterations reached for inlet temp calc at shield sect");break}}e.t_in_sh=i,e.tg_sh=n;const se={m_flue:h,t_in_sup:.5*(e.t_in_rad+e.t_in_conv),t_in:i,t_out:l,Tb:f(i),Tw:K(f(i),K(f(i))),tg_out:n,tg_in:t,Tb_g:f(t,n),LMTD:s(i,l,t,n),DeltaA:t-l,DeltaB:n-i,Q_flue:ee(t,n),Q_fluid:Z(i),Q_R:Y(i,t,n,f(i),K(f(i))),Q_rad:z,Q_conv:X(i,t,n,f(i),K(f(i))),Cp_fluid:p(i,l),Cp_flue:O(t,n),miu_fluid:g(K(f(i))),duty_sh:d(i),kw_fluid:C(f(i)),kw_tube:$(K(f(i))),kw_flue:b(f(t,n)),Prandtl:a(I(f(l))),Reynolds:a(W(f(l))),PrandtlFlue:a(D(f(l))),ReynoldsFlue:a(Q(f(l))),At:T,Ai:M,An:R,Acp:H,hi:E(f(i)),hi_tw:E(f(i),K(f(i))),hr:L(t),ho:J(n),hc:U(f(t,n)),Uo:q(n,t,f(i),K(f(i),K(f(i)))),R_int:G(f(i),K(f(i),K(f(i)))),R_tube:j(K(f(i),K(f(i)))),R_ext:V(n,t),TUBING:{Material:"A-312 TP321","No Tubes Wide":e.Tpr_conv,"No Tubes":N,"Wall Thickness":c.length(e.Sch_sh_cnv),"Outside Di":c.length(y),"Ef. Length":c.length(S),"Tran Pitch":c.length(F),"Long Pitch":c.length(F)},FINING:"None"};return se.miu_flue=k(n),r.default(`T_in_sh: ${a(i)} K, Tg_sh: ${a(n)} K`),se}}},170:e=>{const t=(...e)=>{let t=""+e[1][0];for(var n=1;n<e[1].length;n++)t+=" "+e[1][n];switch(e[0]){case"DEBUG":a.verbose&&console.debug(JSON.parse(`{"${e[0]}": ${t}}`));break;case"INFO":console.info(`{ [32;1m${e[0]}[0m: "${t}"}`);break;case"ERROR":console.error(`{ [31;1m${e[0]}[0m: '${t}'}`);break;case"WARN":console.warn(`{ [35;1m${e[0]}[0m: '${t}'}`);break;default:console.log(`{ [34;1m${e[0]}[0m: '${t}'}`)}},n={info:(...e)=>t("INFO",e),warn:(...e)=>t("WARN",e),error:(...e)=>t("ERROR",e),debug:(...e)=>t("DEBUG",e),default:(...e)=>t("DEFAULT",e)},o=273.15,r=298.15,s={RtoK:e=>e*(5/9),KtoR:e=>1.8*e,KtoF:e=>1.8*e-459.67,CtoK:e=>e+o,CtoF:e=>1.8*e+32,FtoC:e=>5/9*(e-32),FtoK:e=>5/9*(e-32)+o,kgtolb:e=>2.20462*e,lbtokg:e=>e/2.20462,kJtoBTU:e=>e/1.05506,BTUtokJ:e=>1.05506*e,fttom:e=>e/3.28084,ft2tom2:e=>e/3.28084**2,mtoft:e=>3.28084*e,m2toft2:e=>e*3.28084**2,intom:e=>e/39.3701,CpENtoCpSI:e=>1.05506*e/(5/9)*2.20462,kwENtokwSI:e=>1.05506*e/(5/9)*3.28084,hcENtohcSI:e=>1.05506*e/(5/9)*3.28084**2,BtuHtoW:e=>e/3.4121416331},a=(()=>{const e={tempToK:o,tempAmbRef:r,verbose:!0,tAmb:r,humidity:0,o2Excess:0,airExcess:0,pAtm:101325,unitSystem:"SI",lang:"en",NROptions:{tolerance:1e-4,epsilon:3e-8,maxIterations:20,h:1e-4,verbose:!0}};return"undefined"==typeof process||(e.verbose="true"==process.argv[2],e.unitSystem=process.argv[3],e.tAmb=o+parseFloat(process.argv[4])||r,e.humidity=parseFloat(process.argv[5])||0,e.o2Excess=.01*parseFloat(process.argv[6])||0,e.airExcess=.01*parseFloat(process.argv[7])||0,e.pAtm=parseFloat(process.argv[8])||101325,e.NROptions.verbose="true"==process.argv[2]),e})();a.verbose&&n.debug(`"options","args":${JSON.stringify(a,null,2)}`);const u=(e,t=3)=>(Math.round(e*10**t)/10**t).toFixed(t),l=(e,t)=>{const o={...e},r=Object.values(o).reduce(((e,t)=>e+t));for(const e in o)o[e]=o[e]/r;return a.verbose&&n.debug(`"normalize", "name": "${t}", "total": ${r}`),o},i=({k0:e,k1:t,k2:o,Substance:r})=>0==e||"-"==e?(a.verbose&&n.debug(`"Thermal Cond func called for '${r}' without coffs"`),()=>0):n=>3.6*(e+t*n+o*n**2),c=({u0:e,u1:t,u2:o,Substance:r})=>0==e||"-"==e?(a.verbose&&n.debug(`"Viscosity func called for '${r}' without coffs"`),()=>0):n=>e+t*n+o*n**2,_={"energy/mol":e=>u(s.kJtoBTU(e))+" Btu/mol","mass/mol":e=>u(2.2046244202*e)+" lb/lb-mol",heat_flow:e=>u(1e-6*s.kJtoBTU(e))+" MBtu/h",heat_flux:e=>u(s.kJtoBTU(e)/s.mtoft(1)**2)+" Btu/h-ft2",fouling_factor:e=>u(10.763910417*e*1.8/.94781712)+" h-ft2-°F/Btu","energy/mass":e=>u(s.kJtoBTU(e)/s.kgtolb(1))+" Btu/lb","energy/vol":e=>u(s.kJtoBTU(e)/s.mtoft(1)**3)+" Btu/ft3",area:e=>u(10.763910417*e)+" ft2",length:e=>u(s.mtoft(e))+" ft",temp:e=>u(s.KtoR(e))+" °R",tempC:e=>u(s.CtoF(e-o))+" °F",pressure:e=>u(.0001450377*e)+" psi",mass:e=>u(.0022046244202*e)+" lb",mass_flow:e=>u(s.kgtolb(e))+" lb/h",vol_flow:e=>u(s.mtoft(e)**3)+" f3/h",cp:e=>u(.238845896627*e)+" Btu/lb-mol °F",power:e=>u(3.4121416331*e)+" Btu/h",moist:e=>u(1e3*e)+"x10^(-3) lb-H2O/lb",thermal:e=>u(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1))+" BTU/h-ft-F",convect:e=>u(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1)**2)+" BTU/h-ft2-F",viscosity:e=>u(1*e)+" cP",system:{en:"English",es:"Inglés"}},d={"energy/mol":e=>u(1*e)+" kJ/mol","mass/mol":e=>u(1*e)+" kg/kmol",heat_flow:e=>u(1e-6*e)+" MJ/h",heat_flux:e=>u(1*e)+" W/m2",fouling_factor:e=>u(1*e)+" m2-K/W","energy/mass":e=>u(1*e)+" kJ/kg","energy/vol":e=>u(1*e)+" kJ/m3",area:e=>u(1*e)+" m2",length:e=>u(1*e)+" m",tempC:e=>u(1*e-o)+" °C",temp:e=>u(1*e)+" K",pressure:e=>u(.001*e)+" kPa",mass:e=>u(.001*e)+" kg",mass_flow:e=>u(1*e)+" kg/h",vol_flow:e=>u(1*e)+" m3/h",cp:e=>u(1*e)+" kJ/kmol K",power:e=>u(1*e)+" W",moist:e=>u(1e3*e)+" g-H2O/kg",thermal:e=>u(1*e)+" kJ/h-m-C",convect:e=>u(1*e)+" kJ/h-m2-C",viscosity:e=>u(1*e)+" cP",system:{en:"SI",es:"SI"}};e.exports={options:a,unitConv:s,newtonRaphson:(e,t,o,r,s)=>{let a,u,l,i,c,_,d,f;"function"!=typeof t&&(s=r,r=o,o=t,t=null);const m=r||{},h=void 0===m.tolerance?1e-7:m.tolerance,p=void 0===m.epsilon?222e-17:m.epsilon,O=void 0===m.h?1e-4:m.h,C=1/O,$=void 0===m.maxIterations?20:m.maxIterations;for(i=0;i++<$;){if(u=e(o),t?l=t(o):(c=e(o+O),_=e(o-O),d=e(o+2*O),f=e(o-2*O),l=(f-d+8*(c-_))*C/12),Math.abs(l)<=p*Math.abs(u))return n.error(`Newton-Raphson (${s}): failed to converged due to nearly zero first derivative`),!1;if(a=o-u/l,Math.abs(a-o)<=h*Math.abs(a))return n.debug(`"Newton-Raphson", "func":"${s}", "var converged to":${a}, "iterations":${i}`),a;o=a}return n.error(`Newton-Raphson (${s}): Maximum iterations reached (${$})`),!1},logger:n,round:u,roundDict:(e={})=>{for(const[t,n]of Object.entries(e))isNaN(n)||""===n||(e[t]=u(n))},linearApprox:({x1:e,x2:t,y1:o,y2:r})=>{if("number"!=typeof o)return n.error(`call for linearApprox with incorrect value type for y1: ${o}`),()=>0;if(e==t||null==t||null==r)return()=>o;const s=(r-o)/(t-e);return t=>s*(t-e)+o},viscosityApprox:({t1:e,t2:t,v1:o,v2:r})=>{if("number"!=typeof o)return n.error(`call for viscosityApprox with incorrect value type for v1: ${o}`),()=>0;if(e==t||null==t||null==r)return()=>o;const s=Math.log(o/r)/(1/e-1/t),a=o*Math.exp(-s/e);return e=>a*Math.exp(s/e)},initSystem:e=>{if("string"!=typeof e)return a.verbose&&n.warn(`invalid type (${e}) for unit system, using default SI`),d;switch(e.toLowerCase()){case"si":return d;case"english":case"en":return _;default:return n.warn(e.toLowerCase()+" - invalid unit system, using default SI"),d}},normalize:l,flueViscosity:(e,t)=>{const n=l(t,"flueViscosity"),o=c(e[34]),r=c(e[31]),s=c(e[6]),a=c(e[3]),u=c(e[2]);return e=>n.CO2*s(e)+n.SO2*o(e)+n.H2O*r(e)+n.O2*u(e)+n.N2*a(e)},flueThermalCond:(e,t)=>{const n=l(t,"flueThermalCond"),o=i(e[34]),r=i(e[31]),s=i(e[6]),a=i(e[3]),u=i(e[2]);return e=>n.CO2*s(e)+n.SO2*o(e)+n.H2O*r(e)+n.O2*u(e)+n.N2*a(e)},kw_tubes_A312_TP321:e=>{const t=e-o;return 3.6*(14.643+.0164*t+-2e-6*t**2)},LMTD:(e,t,n,o,r)=>{let s=n-t,a=o-e;return r&&(s=o-e,a=n-t),(s-a)/Math.log(s/a)}}},684:e=>{"use strict";e.exports=JSON.parse('[{"ID":0,"Substance":"Carbon","Formula":"C","MW":12.011,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1,"SO2":0,"CO2":1,"H2O":0,"N2":3.773269},{"ID":1,"Substance":"Hydrogen","Formula":"H2","MW":2.0159,"h0":0,"Cp0":14.209,"c0":13.46,"c1":4.6,"c2":-6.85,"c3":3.79,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.5,"SO2":0,"CO2":0,"H2O":1,"N2":1.886634},{"ID":2,"Substance":"Oxygen","Formula":"O2","MW":31.9988,"h0":0,"Cp0":0.922,"c0":0.88,"c1":-0.0001,"c2":0.54,"c3":-0.33,"u0":0.00845,"u1":0.0000472,"u2":-6.56e-9,"k0":0.00733,"k1":0.0000708,"k2":-6.61e-9,"O2":-1,"SO2":0,"CO2":0,"H2O":0,"N2":0},{"ID":3,"Substance":"Nitrogen","Formula":"N2","MW":28.0134,"h0":0,"Cp0":1.042,"c0":1.11,"c1":-0.48,"c2":0.96,"c3":-0.42,"u0":0.00784,"u1":0.0000387,"u2":-5.11e-9,"k0":0.00952,"k1":0.000062,"k2":-6.22e-9,"O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":4,"Substance":"Nitrogen (atm)","Formula":"N2a","MW":28.158,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":5,"Substance":"Carbon Monoxide","Formula":"CO","MW":28.0104,"h0":-110527,"Cp0":1.041,"c0":1.1,"c1":-0.46,"c2":1,"c3":-0.454,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.5,"SO2":0,"CO2":1,"H2O":0,"N2":1.886634},{"ID":6,"Substance":"Carbon Dioxide","Formula":"CO2","MW":44.0098,"h0":-393522,"Cp0":0.842,"c0":0.45,"c1":1.67,"c2":-1.27,"c3":0.39,"u0":0.00331,"u1":0.0000445,"u2":-6.69e-9,"k0":-0.00958,"k1":0.0000918,"k2":-1.14e-8,"O2":0,"SO2":0,"CO2":1,"H2O":0,"N2":0},{"ID":7,"Substance":"Methane","Formula":"CH4","MW":16.0428,"h0":-74873,"Cp0":2.254,"c0":1.2,"c1":3.25,"c2":0.75,"c3":-0.71,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":2,"SO2":0,"CO2":1,"H2O":2,"N2":7.546539},{"ID":8,"Substance":"Ethane","Formula":"C2H6","MW":30.0697,"h0":-84740,"Cp0":1.766,"c0":0.18,"c1":5.92,"c2":-2.31,"c3":0.29,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3.5,"SO2":0,"CO2":2,"H2O":3,"N2":13.20644},{"ID":9,"Substance":"Propane","Formula":"C3H8","MW":44.0966,"h0":-103900,"Cp0":1.679,"c0":-0.096,"c1":6.95,"c2":-3.6,"c3":0.73,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":5,"SO2":0,"CO2":3,"H2O":4,"N2":18.86634},{"ID":10,"Substance":"n-Butane","Formula":"C4H10","MW":58.1235,"h0":-126200,"Cp0":1.716,"c0":0.163,"c1":5.7,"c2":-1.906,"c3":-0.049,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":11,"Substance":"Isobutane","Formula":"iC4H10","MW":58.1235,"h0":-135000,"Cp0":1.547,"c0":0.206,"c1":5.67,"c2":-2.12,"c3":0.183,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":12,"Substance":"n-Pentane","Formula":"C5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":13,"Substance":"Isopentane","Formula":"iC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":14,"Substance":"Neopentane","Formula":"nC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":15,"Substance":"n-Hexane","Formula":"C6H14","MW":86.1773,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":9.5,"SO2":0,"CO2":6,"H2O":7,"N2":35.84606},{"ID":16,"Substance":"Ethylene","Formula":"C2H4","MW":28.0538,"h0":52467,"Cp0":1.548,"c0":0.136,"c1":5.58,"c2":-3,"c3":0.63,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3,"SO2":0,"CO2":2,"H2O":2,"N2":11.3198},{"ID":17,"Substance":"Propylene","Formula":"C3H6","MW":42.0807,"h0":20410,"Cp0":1.437,"c0":0.454,"c1":4.06,"c2":-0.934,"c3":-0.133,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":4.5,"SO2":0,"CO2":3,"H2O":3,"N2":16.97971},{"ID":18,"Substance":"n-Butene (Butylene)","Formula":"C4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":19,"Substance":"Isobutene","Formula":"iC4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":20,"Substance":"n-Pentene","Formula":"C5H10","MW":70.1345,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":7.5,"SO2":0,"CO2":5,"H2O":5,"N2":28.29952},{"ID":21,"Substance":"Benzene","Formula":"C6H6","MW":78.1137,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":7.5,"SO2":0,"CO2":6,"H2O":3,"N2":28.29952},{"ID":22,"Substance":"Toluene","Formula":"C7H8","MW":92.1406,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":9,"SO2":0,"CO2":7,"H2O":4,"N2":33.95942},{"ID":23,"Substance":"Xylene","Formula":"C8H10","MW":106.1675,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":10.5,"SO2":0,"CO2":8,"H2O":5,"N2":39.6193},{"ID":24,"Substance":"Acetylene","Formula":"C2H2","MW":26.0379,"h0":226731,"Cp0":1.699,"c0":1.03,"c1":2.91,"c2":-1.92,"c3":0.54,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":2.5,"SO2":0,"CO2":2,"H2O":1,"N2":9.433174},{"ID":25,"Substance":"Naphthalene","Formula":"C10H8","MW":128.1736,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":12,"SO2":0,"CO2":10,"H2O":4,"N2":45.27923},{"ID":26,"Substance":"Methyl alcohol-Methanol","Formula":"CH3OH","MW":32.0422,"h0":-201300,"Cp0":1.405,"c0":0.66,"c1":2.21,"c2":0.81,"c3":-0.89,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1.5,"SO2":0,"CO2":1,"H2O":2,"N2":5.659904},{"ID":27,"Substance":"Ethyl alcohol-Ethanol","Formula":"C2H5OH","MW":46.0691,"h0":-235000,"Cp0":1.427,"c0":0.2,"c1":-4.65,"c2":-1.82,"c3":0.03,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":3,"SO2":0,"CO2":2,"H2O":3,"N2":11.3198},{"ID":28,"Substance":"Ammonia","Formula":"NH3","MW":17.0306,"h0":-45720,"Cp0":2.13,"c0":1.6,"c1":1.4,"c2":1,"c3":-0.7,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.75,"SO2":0,"CO2":0,"H2O":1.5,"N2":2.82995},{"ID":29,"Substance":"Sulfur","Formula":"S","MW":32.066,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":1,"SO2":1,"CO2":0,"H2O":0,"N2":3.773269},{"ID":30,"Substance":"Hydrogen sulfide","Formula":"H2S","MW":34.0819,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":-0.000545,"u1":0.0000502,"u2":-1.3e-8,"k0":"-","k1":"-","k2":"-","O2":1.5,"SO2":1,"CO2":0,"H2O":1,"N2":5.659904},{"ID":31,"Substance":"Steam (Water vapor)","Formula":"H2O","MW":18.0153,"h0":-241826,"Cp0":1.872,"c0":1.79,"c1":0.107,"c2":0.586,"c3":-0.2,"u0":-0.00596,"u1":0.0000484,"u2":-4.76e-9,"k0":-0.00592,"k1":0.0000718,"k2":-3.03e-8,"O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":32,"Substance":"Water (liquid)","Formula":"H2Ol","MW":18.0153,"h0":-285830,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":33,"Substance":"Dry Air","Formula":"N2+O2","MW":28.8483,"h0":0,"Cp0":1.004,"c0":1.05,"c1":-0.365,"c2":0.85,"c3":-0.39,"u0":"-","u1":"-","u2":"-","k0":"-","k1":"-","k2":"-","O2":0.2095,"SO2":0,"CO2":0,"H2O":0,"N2":0.7905},{"ID":34,"Substance":"Sulfur dioxide","Formula":"SO2","MW":62.059,"h0":-296842,"Cp0":0.624,"c0":0.37,"c1":1.05,"c2":-0.77,"c3":0.21,"u0":-0.00301,"u1":0.0000578,"u2":-1.66e-8,"k0":-0.00188,"k1":0.0000314,"k2":2.7e-8,"O2":0,"SO2":1,"CO2":0,"H2O":0,"N2":0}]')}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,n),s.exports}(()=>{const{logger:e,options:t,unitConv:o,initSystem:r,linearApprox:s,newtonRaphson:a,viscosityApprox:u,kw_tubes_A312_TP321:l}=n(170),i=n(684),{radSection:c}=n(113),{convSection:_}=n(489),{shieldSection:d}=n(361),{combSection:f}=n(392),{browserProcess:m}=n(620),h=o.FtoK(678),p=o.FtoK(772),O=o.CpENtoCpSI(.676),C=o.CpENtoCpSI(.703),$=o.kwENtokwSI(.038),b=o.kwENtokwSI(.035),g=(o.kwENtokwSI(11.508),(t,n)=>{const i=(e=>({p_atm:e.pAtm,t_air:e.tAmb,t_fuel:e.tAmb,t_amb:e.tAmb,humidity:e.humidity,airExcess:e.airExcess,o2Excess:e.o2Excess,max_duty:o.BTUtokJ(71527.6),Rfi:0,Rfo:0,duty_rad_dist:.7,efficiency:.8,heat_loss_percent:.015,m_fluid:500590,miu_fluid:u({t1:h,v1:1.45,t2:p,v2:.96}),Cp_fluid:s({x1:h,y1:O,x2:p,y2:C}),kw_fluid:s({x1:h,y1:$,x2:p,y2:b}),t_in_conv:h,t_out:p,h_conv:o.hcENtohcSI(1.5),kw_tube:l,Pass_number:2,CtoC:o.intom(2),Pitch_rad:o.intom(16),N_rad:42,L_rad:o.fttom(62),Do_rad:o.intom(8.625),Sch_rad:o.intom(.322),Di_rad:o.intom(8.303),Width_rad:17.5,Length_rad:64.55,Height_rad:27,N_shld:16,L_shld:o.fttom(60),Do_shld:o.intom(6.625),Pitch_sh_cnv:o.intom(12),Sch_sh_cnv:o.intom(.28),N_conv:40,Tpr_conv:8,L_conv:o.fttom(60),Do_conv:o.intom(6.625),Nf:o.mtoft(60),Tf:o.fttom(.005),Lf:o.fttom(.08),verbose:e.verbose,unitSystem:e.unitSystem,lang:e.lang,NROptions:e.NROptions,units:r(e.unitSystem)}))(n);if(0!=i.o2Excess){const n=a((n=>{const o=f(n,t,i);return e.info("O2%: "+o.flows["O2_%"]+" vs O2excess: "+100*i.o2Excess),o.flows["O2_%"]/100-i.o2Excess}),.5,i.NROptions,"o2_excess_to_air");n&&(i.airExcess=n)}else i.airExcess=n.airExcess;const m=f(i.airExcess,t,i);return m.rad_result=c(i),m.shld_result=d(i),m.conv_result=_(i),m});let k={H2:.1142,N2:.0068,CO:.0066,CO2:.0254,CH4:.5647,C2H6:.1515,C3H8:.0622,C4H10:.0176,iC4H10:.0075,C2H4:.0158,C3H6:.0277};"undefined"!=typeof window?m(k,i,t,g):g(k,t)})()})();