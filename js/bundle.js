(()=>{var e={620:(e,t,o)=>{const{logger:r}=o(170),n=(e,t)=>{let o;switch(key){default:break;case"t_amb":o=parseFloat(e[key]),o>-t.tempToK&&o<100&&(t.tAmb=o+t.tempToK);break;case"humidity":o=parseFloat(e[key]),o>=0&&o<=100&&(t.humidity=o);break;case"p_atm":o=parseFloat(e[key]),o>.001&&o<1e3&&(t.pAtm=1e3*o);break;case"air_excess":o=parseFloat(e[key]),o>=0&&o<=300&&(t.airExcess=.01*o);break;case"o2_excess":o=parseFloat(e[key]),o>=0&&o<=30&&(t.o2Excess=.01*o);break;case"unit_system":r.debug(`${key}: ${e[key]}`),t.unitSystem=e[key]}};e.exports={browserProcess:(e,t,o,s)=>{let a="en";const u=window.location.pathname.split("/");u.length>0&&u.forEach((e=>{"es"==e&&(a="es")})),o.lang=a;const l=(e=>{if(""==e)return{};let t={};for(const o of e){const e=o.split("=",2);1==e.length?t[e[0]]="":t[e[0]]=decodeURIComponent(e[1].replace(/\+/g," "))}return t})(window.location.search.substr(1).split("&"));l!=={}&&((e,t,o,s)=>{const a={},u=o.filter((t=>t.Formula in e));for(const t in e)if(1===u.filter((e=>e.Formula==t)).length&&""!==e[t]){const o=parseFloat(e[t]);o>0&&o<=100?a[t]=o/100:r.error(`fuel fraction invalid (${o}) for ${t}`)}else""!==e[t]&&void 0!==e[t]&&n(e,s);Object.keys(a).length})(l,0,t,o),((e,t,o)=>{r.info(JSON.stringify(e,null,2)),r.debug(JSON.stringify(t,null,2));let n="";n="es"==o?`\nDatos de entrada\n  (en caso de no haber sido introducidos, tomará el predeterminado)\n\n  Sistema de unidades:   ${e.debug_data.unitSystem}\n  Presión atmosférica:   ${e.debug_data.atmPressure}\n  Temperatura ambiente:  ${e.debug_data.ambTemperature}\n  Humedad:               ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:       ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:       ${e.debug_data["dryAirO2_%"]} %\n\n  Presión de aire seco:     ${e.debug_data.dryAirPressure}\n  Presión de vapor de agua: ${e.debug_data.waterPressure}\n  Presión parcial de H2O:   ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Presión parcial de N2:    ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Presión parcial de O2:    ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Contenido húmedo (w):     ${e.debug_data.moisture}-AireSeco\n\nMoles de gases de combustión total y porcentajes por cada mol de combustible\n\n  Flujo total: ${e.flows.total_flow}\n  Flujo seco:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Porcentajes en base húmeda\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Exceso de aire usado: ${e.flows["air_excess_%"]} %\n  Moles O2 requeridos/mol de combustible (teórico): ${e.flows.O2_mol_req_theor}\n\n  Relación A/C molar húmeda:  ${e.flows.AC}\n  Relación A/C másica húmeda: ${e.flows.AC_mass}\n  Relación A/C molar (aire seco, teórica):    ${e.flows.AC_theor_dryAir}\n  Relación A/C másica (aire húmedo, teórica): ${e.flows.AC_mass_theor_moistAir}\n\n  Peso molecular del combustible: ${e.flows.fuel_MW}\n  Cp(t_entrada) del combustible:  ${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Peso molecular de los gases de combustión: ${e.flows.flue_MW}\n  Cp(t_amb) de los gases de combustión: ${e.flows.flue_Cp_Tamb}\n`:`\nInput Data \n  (in case of no input, default values will be taken)\n\n  Unit System:          ${e.debug_data.unitSystem}\n  Atmospheric Pressure: ${e.debug_data.atmPressure}\n  Ambient Temperature:  ${e.debug_data.ambTemperature}\n  Humidity:             ${e.debug_data["humidity_%"]} %\n  N2 en aire seco:      ${e.debug_data["dryAirN2_%"]} %\n  O2 en aire seco:      ${e.debug_data["dryAirO2_%"]} %\n\n  Dry Air Pressure:     ${e.debug_data.dryAirPressure}\n  Water Vapor Pressure: ${e.debug_data.waterPressure}\n  Partial Pressure H2O: ${e.debug_data["H2OPressure_%"]} 10^(-2)\n  Partial Pressure N2 : ${e.debug_data["N2Pressure_%"]} 10^(-2)\n  Partial Pressure O2 : ${e.debug_data["O2Pressure_%"]} 10^(-2)\n  Moisture content (w): ${e.debug_data.moisture}-dryAir\n\nTotal flue gas moles and percentage (per fuel mol)\n\n  Flow total: ${e.flows.total_flow}\n  Dry total:  ${e.flows.dry_total_flow}\n\n  N2:  ${e.products.N2}\n  O2:  ${e.products.O2}\n  H2O: ${e.products.H2O}\n  CO2: ${e.products.CO2}\n  SO2: ${e.products.SO2}\n\n  Moist basis percentage\n    N2:  ${e.flows["N2_%"]} %\n    H2O: ${e.flows["H2O_%"]} %\n    CO2: ${e.flows["CO2_%"]} %\n    O2:  ${e.flows["O2_%"]} %\n\n  Air excess used : ${e.flows["air_excess_%"]} %\n  Moles O2 required/fuel-mol (theoretical): ${e.flows.O2_mol_req_theor}\n\n  A/C molar moist relation:   ${e.flows.AC}\n  A/C mass moist relation:    ${e.flows.AC_mass}\n  A/C molar relation (dry air, theoretical):   ${e.flows.AC_theor_dryAir}\n  A/C mass relation (moist air, theoretical):  ${e.flows.AC_mass_theor_moistAir}\n\n  Fuel mol weight:    ${e.flows.fuel_MW}\n  Fuel Cp(t_fuel_in):\t${e.flows.fuel_Cp}\n  NCV: ${e.flows.NCV}\n\n  Flue gas mol weight: ${e.flows.flue_MW}\n  Flue gas Cp(t_amb):  ${e.flows.flue_Cp_Tamb}\n`,document.getElementById("loader-wrapper").remove(),document.getElementById("output-data").textContent=n})(s(e,o),l,a)}}},392:(e,t,o)=>{const{newtonRaphson:r,options:n,logger:s,round:a,roundDict:u,initSystem:l,normalize:c,flueViscosity:i}=o(170),m=o(684),_={O2:.2095,N2:.7905,H2O:0},d=(e,t={})=>{const o=Object.values(e).reduce(((e,t)=>e+t)),r=Math.abs(1-o)<=3e-12;return r||(t.err+=`[fuel fraction not equal to 1, total: ${o}. fuels: ${Object.keys(e)}],`),r},f=({c0:e,c1:t,c2:o,c3:r,MW:u,Substance:l},c)=>i=>(i<250&&s.debug(`"Cp0", "temp": ${a(i)},"Msg": "${l} bellow range for Cp0 formula"`),i>1200&&n.verbose&&s.debug(`"Cp0", "temp": ${a(i)},"Msg": "${l} above range for Cp0 formula"`),"-"===e?(s.debug(`"Cp0", "Msg": "Wrong use, called for compound ${l}, no data found"`),0):c?u*(e+t*(.001*i)+o*(.001*i)**2+r*(.001*i)**3):e+t*(.001*i)+o*(.001*i)**2+r*(.001*i)**3),O=(e,t)=>{if(0===e.length)return e=>0;let o=JSON.parse(JSON.stringify(e));d(e)||(o=c(o,"Cp_multicomp"));const r=m.filter((e=>e.Formula in o)),n=[];let s=0;for(const e in o)n[s]=n=>o[e]*f(r.filter((t=>t.Formula==e))[0],t)(n),s++;return n.reduce(((e,t)=>o=>e(o)+t(o)),(e=>0))},p=e=>{if(0===e.length)return e=>0;let t=JSON.parse(JSON.stringify(e));d(e)||(t=c(t,"MW_multicomp"));const o=m.filter((e=>e.Formula in t));let r=0;for(const e in t)r+=o.filter((t=>t.Formula==e))[0].MW*t[e];return r},h=(e,t)=>{const o=e-n.tempToK;return 610.78*Math.exp(o/(o+238.3)*17.2694)*t*.01},C=(e,t)=>{const o=h(e,t);return m[31].MW*o/(p(_)*(n.pAtm-o))},b=(e,t)=>"-"===e.Cp0?"-"===e.h0?(n.verbose&&s.warn(`wrong use of deltaH func, called for compound ${e.Substance} without data`),void 0===t?()=>0:0):void 0===t?()=>e.h0:e.h0:void 0===t?t=>e.h0+e.MW*f(e)((n.tempAmbRef+t)/2)*(t-n.tempAmbRef):e.h0+e.MW*f(e)((n.tempAmbRef+t)/2)*(t-n.tempAmbRef),$=(e,t,o,r)=>{const s=b(m[6]),a=b(m[34]),u=b(m[2]);let l=b(m[31]);return!0===r&&(l=b(m[32])),void 0===o&&(o=n.tAmb),void 0===t?t=>e.CO2*s(t)+e.SO2*a(t)+e.H2O*l(t)-b(e)(o)-e.O2*u(o):e.CO2*s(t)+e.SO2*a(t)+e.H2O*l(t)-b(e)(o)-e.O2*u(o)};e.exports={combSection:(e,t,o)=>{s.debug(`{"airExcess in call": ${e}}`);const f=l(o.unitSystem),g={err:"",atmPressure:f.pressure(o.p_atm),ambTemperature:f.tempC(o.t_amb),"humidity_%":a(o.humidity),"dryAirN2_%":a(79.05),"dryAirO2_%":a(20.95),moisture:f.moist(C(o.t_amb,o.humidity)),unitSystem:f.system[o.lang]},w=m.filter(((e,o,r)=>e.Formula in t));let S={...t};d(t,g)||(S=c(t,"combSection")),((e,t,o={})=>{const r=Math.abs(t.length-Object.keys(e).length);0===r||(s.error(`[some fuels aren't in the database, #badFuels: ${r}],`),o.err+=`[some fuels aren't in the database, #badFuels: ${r}],`)})(S,w,g);const y={O2:0,N2:0,H2O:0,CO2:0,SO2:0},N={..._};((e,t,o)=>{for(const r of e)for(const e in t)if("N2"!=e)t[e]+=r[e]*o[r.Formula];else{if("N2"==r.Formula||'"N2a'==r.Formula){t[e]+=o[r.Formula];continue}t[e]+=r.O2*o[r.Formula]*3.7732696897374702}})(w,y,S),e-1e-6<0&&(e=0),o.humidity-1e-6<0&&(o.humidity=0);let v=y.O2,H=v*(1+e);if(y.O2<=0||y.N2<0)s.error(`airExcess set to 0, O2 in fuel is greater than or equal to needed. Products O2:${y.O2}, N2:${y.N2}`),H=0,v=0,y.N2=S.N2,y.O2=-y.O2;else{const e=h(o.t_amb,o.humidity),t=o.p_atm-e;N.N2=.7905*t/o.p_atm,N.O2=.2095*t/o.p_atm,N.H2O=e/o.p_atm,g.dryAirPressure=f.pressure(t),g.waterPressure=f.pressure(e),g["H2OPressure_%"]=a(100*N.H2O),g["N2Pressure_%"]=a(100*N.N2),g["O2Pressure_%"]=a(100*N.O2),y.O2=H-y.O2,y.N2+=y.O2*(N.N2/N.O2),y.H2O+=y.N2*(e/(N.N2*o.p_atm))}o.NCV=-((e,t,o,r)=>{let n=0;for(const s in e){if(s in t)continue;const a=o.filter((e=>e.Formula==s))[0];n+=e[s]*$(a)(r)}return n})(S,y,w,o.t_amb)/p(S),o.adFlame=r(((e,t,o,r)=>{void 0===o&&(o=n.tAmb),void 0===r&&(r=0);const s=m.filter((t=>t.Formula in e)),a=b(m.filter((e=>"O2"==e.Formula))[0]),u=b(m.filter((e=>"N2"==e.Formula))[0]),l=b(m.filter((e=>"CO2"==e.Formula))[0]),c=b(m.filter((e=>"H2O"==e.Formula))[0]),i=b(m.filter((e=>"SO2"==e.Formula))[0]),_=[];let d=0;for(const t in e)_[d]=e[t]*b(s.filter((e=>e.Formula==t))[0])(o),d++;return e=>(e=>t.O2*a(e)+t.SO2*i(e)+t.H2O*c(e)+t.CO2*l(e)+t.N2*u(e)-t.N2*u(o)-r*a(o))(e)-_.reduce(((e,t)=>e+t))})(S,y,o.t_amb,H),2e3,o.NROptions,"fuel_adFlame"),s.info(`Adiabatic flame temp: [${a(o.adFlame)} K] ${f.tempC(o.adFlame)}`);let F=0,A=0;for(const e in y)F+=y[e],"H2O"!==e&&(A+=y[e]);const M={total_flow:F,dry_total_flow:A,"N2_%":100*y.N2/F,"H2O_%":100*y.H2O/F,"CO2_%":100*y.CO2/F,"O2_%":100*y.O2/F,O2_mol_req_theor:v,O2_mass_req_theor:f.mass(v*m[2].MW),"air_excess_%":100*o.airExcess,AC:H/N.O2,AC_theor_dryAir:v/.2095,AC_mass:H/N.O2*p(N)/p(S),AC_mass_theor_moistAir:v/N.O2*p(N)/p(S),fuel_MW:f["mass/mol"](p(S)),fuel_Cp:f.cp(O(S,!0)(o.t_fuel)),flue_MW:f["mass/mol"](p(y)),flue_Cp_Tamb:f.cp(O(y,!0)(o.t_amb)),NCV:f["energy/mass"](o.NCV)};return o.Pco2=y.CO2/F,o.Ph2o=y.H2O/F,o.m_flue_ratio=F*p(y)/p(S),o.m_air_ratio=H/N.O2*p(N)/p(S),o.Cp_flue=O(y),o.Cp_air=O(N),o.Cp_fuel=O(S),o.flueViscosity=i(m,y),u(y),u(M),u(g),""==g.err&&delete g.err,{flows:M,products:y,debug_data:g}}}},113:(e,t,o)=>{const{newtonRaphson:r,logger:n,round:s,unitConv:a}=o(170),{options:u,initSystem:l}=o(170),c=l(u.unitSystem),i=e=>{const t={a:{A:2.58e-8,B:-39e-9,C:6.8e-9,D:-2.2e-10},b:{A:-119e-6,B:56e-6,C:-41e-7,D:-72e-8},c:{A:.21258,B:.2258,C:-.047351,D:.004165}},o=(e,o=t)=>t=>o.a[e]*t**2+o.b[e]*t+o.c[e],r=o("A"),n=o("B"),s=o("C"),a=o("D");return t=>r(t)+n(t)*e+s(t)*e**2+a(t)*e**3};n.warn(`{"emissivity": ${i(5.207)(1498)}}`);const m=(e,t,o)=>{let u=0,l=0,m=o.t_out,_=e||o.m_fuel;null==o&&(o={});const d=o.t_air,f=o.t_fuel,O=o.t_amb,p=o.t_in_conv,h=(e,t=l)=>.5*(t+e),C=o.N_rad||42,b=o.N_shld||16,$=o.L_rad||20.024,g=o.Do_rad||.219,w=o.Di_rad||o.Do_rad-o.Sch_rad,S=o.Pitch_rad||.394,y=o.h_conv||30.66,N=2/3*(o.Width_rad*o.Length_rad*o.Height_rad)**(1/3),v=o.Pass_number*o.Pitch_rad/o.Do_rad,H=o.Rfi,F=o.kw_tube,A=(o.Ph2o+o.Pco2)*N,M=1+.49*v/6-.09275*v**2+.065*v**3/6+25e-5*v**4,k=Math.PI||3.14159,D=((e,t,o)=>{const r=t*e,s=o*t,u=58*e+2*s+r,l=o*e*2+2*s+1.234*r;return n.warn(`{"Ar prev (ft)": ${u},"Ar calc (ft)": ${l}}`),a.fttom(l)*a.fttom(1)})(o.Width_rad,o.Length_rad,o.Height_rad),x=2*C*S*$,P=b*o.Pitch_shld*$,W=2.041e-7,I=C*k*g*$;n.warn(`Acp: ${s(a.mtoft(x)*a.mtoft(1))}, Acp_sh: ${s(a.mtoft(P)*a.mtoft(1))}`);const R=o.duty_rad_dist||.7,T=o.efficiency||.8,B=o.heat_loss_percent||.015,E=o.m_fluid||225700,J=(e=_)=>o.m_flue_ratio*e,K=o.NCV,Q=o.Cp_fuel(.5*(f+O)),U=o.Cp_air(.5*(d+O)),V=(e,t=O)=>o.Cp_flue(.5*(e+t)),L=(e,t=e)=>o.Cp_fluid(.5*(e+t)),q=o.kw_fluid,j=o.miu_fluid;let z=0;const G=e=>((e,t,o,r,n,s)=>{const a=1*n+t*o,u=(s-a)/a,l=i(e),c={a:{A:-5e-4,B:.0072,C:-.0062},b:{A:.0022,B:-.1195,C:.1168},c:{A:.0713,B:.5333,C:-.6473},d:{A:-.0152,B:1.0577,C:-.154}},m=(e,t=c)=>o=>t.a[e]*o**3+t.b[e]*o**2+t.c[e]*o+t.d[e],_=m("A"),d=m("B"),f=m("C");return e=>_(u)+d(u)*l(e)+f(u)*l(e)**2})(A,M,x,0,P,D)(a.KtoF(e)),X=e=>j(e)*L(e)*3.6/q(e),Y=E/3.6/(k*w**2),Z=e=>Y*w/j(e),ee=(e,t=e)=>q(e)/w*.023*Z(e)**.8*X(e)**(1/3)*(j(e)/j(t))**.14,te=(e,t=e,o=z)=>o/I*(g/w)*(H+1/ee(e,t)+w*Math.log(g/w)/(2*F))+e,oe=(e=m,t=l)=>E*L(e,t)*(e-t),re=(e,t=d,r=O)=>((e=_)=>o.m_air_ratio*e)(e)*U*(t-r),ne=e=>e*K,se=(e,t=f,o=O)=>e*Q*(t-o),ae=(e,t=d,o=f,r=O)=>ne(e)+re(e,t,r)+se(e,o,r),ue=(e=_)=>B*ne(e),le=(e,t=m,o=l)=>W*G(e)*(M*x)*(e**4-te(h(t,o),te(h(t,o)))**4),ce=(e,t=m,o=l)=>y*I*(e-te(h(t,o),te(h(t,o)))),ie=(e,t=m,o=l)=>le(e,t,o)+ce(e,t,o),me=(e,t=m,o=l)=>W*G(e)*(1*P)*(e**4-te(h(t,o),te(h(t,o)))**4),_e=(e,t=_,o=O)=>J(t)*V(e,o)*(e-o),de=(e,t=m,o=_,r=l,n=O)=>ie(e,t,r)+me(e,t,r)+ue(o)+_e(e,o,n);let fe=0,Oe=0;if(void 0!==t){Oe=E*L(p,m)*(m-p),z=Oe*R,l=p+Oe*(1-R)/(E*L(p,m)),fe=r((e=>E*L(l,m)*(m-l)-(le(e)+ce(e))),1e3,o.NROptions,"rad_Tg_Tout"),fe&&(u=fe);const e=e=>de(u,m,e)-ae(e),t=E*L(p,m)*(m-p)/(K*T);_=r(e,t,o.NROptions,"rad_mFuel"),_&&(o.m_fuel=_),n.info(`vars with t_out given",\n    "T_(in) given":           "${c.tempC(p)}",\n    "T_(out) given":          "${c.tempC(l)}",\n    "T_(inRad) from Duty est":"${c.tempC(l)}",\n    "T_(out) from Duty est":  "${c.tempC(m)}",\n    "T_(w) from Duty est":    "${c.tempC(te(h(m)))}",\n    "M_(seed)": "${c.mass_flow(t)}",\n    "Prandtl":  ${s(X(h(m)))},\n    "Reynolds": ${s(Z(h(m)))},\n    "Alpha":    ${s(M)},\n    "MBL":      ${s(N)},\n    "Pco2":     ${s(o.Pco2)},\n    "Ph2o":     ${s(o.Ph2o)},\n    "PL":       ${s(A)},\n    "F(Tg)":    ${s(G(u))},\n    "F_desired":"0.635`)}else if(void 0!==e){Oe=ne(e)*T,z=Oe*R,l=p+Oe*(1-R)/(E*L(p)),t=p+Oe/(E*L(l)),fe=r((e=>de(e,t,_)-ae(_)),1e3,o.NROptions,"rad_Tg_mFuel"),fe&&(u=fe),m=r((e=>E*L(l,t)*(e-l)-(le(u)+ce(u))),t,o.NROptions,"rad_Tout"),m&&(o.t_out=m),n.info(`t_out, seed: ${t} vs calc: ${m}`);const s=E*L(l,m)*(m-p),a=o.t_in_conv+s*(1-R)/(E*L(l,m));n.info(`t_in_rad, seed: ${l} vs calc: ${a}`)}else o.err+="-wrong call for rad section, no seed for mass fuel or out temp.";n.warn(`"vars to check in rad section",\n    "tG":         "${c.tempC(u)} vs 1500F",\n    "kw_tube":    "${c.thermal(F)}",\n    "kw_fluid":   "${c.thermal(q(h(m)))}",\n    "h_conv":     "${c.convect(y)}",\n    "duty":       "${c.heat_flow(Oe)}",\n    "duty_rad":   "${c.heat_flow(z)}",\n    "At_rad":     "${c.area(I)}",\n    "duty_flux":  "${c.heat_flux(z/I)}",\n    "Do/Di":      ${s(g/w)},\n    "hi refer":   "${c.convect(2992)}",\n    "hi post 1":  "${c.convect(ee(h(m)))}",\n    "hi post 2":  "${c.convect(ee(h(m),te(h(m))))}",\n    "hi post 3":  "${c.convect(ee(h(m),te(h(m),te(h(m)))))}",\n    "factor_hi pre": ${H+1/2992+w*Math.log(g/w)/(2*F)},\n    "factor_hi post":${H+1/ee(h(m),te(h(m)))+w*Math.log(g/w)/(2*F)}\n  `),o.t_out=m,o.t_in_rad=l,o.t_g=u,o.duty_rad=z,o.q_rad_sh=me(u),o.m_flue=J(_);const pe={m_fuel:_,t_in_rad:l,t_out:m,Tw:te(h(m),te(h(m))),t_g:u,Q_in:ae(_),Q_rls:ne(_),Q_air:re(_),Q_fuel:se(_),Q_out:de(u,m,_),Q_flue:_e(u),Q_losses:ue(_),Q_shld:me(u),Q_conv:ce(u),Q_rad:le(u,m),Q_R:ie(u),Q_fluid:oe(),Cp_fluid:c.cp(L(l,m)),Cp_fuel:Q,Cp_air:U,Cp_flue:V(u)};return n.warn(`{\n    "m_fuel":   "${c.mass_flow(_)}",\n    "t_in_rad": "${c.tempC(l)}",\n    "t_out":    "${c.tempC(m)}",\n    "Tw":       "${c.tempC(te(h(m),te(h(m))))}",\n    "t_g":      "${c.tempC(u)}",\n    "Q_in":     "${c.heat_flow(ae(_))}",\n    "Q_rls":    "${c.heat_flow(ne(_))}",\n    "Q_air":    "${c.heat_flow(re(_))}",\n    "Q_fuel":   "${c.heat_flow(se(_))}",\n    "Q_out":    "${c.heat_flow(de(u,m,_))}",\n    "Q_flue":   "${c.heat_flow(_e(u))}",\n    "Q_losses": "${c.heat_flow(ue(_))}",\n    "Q_shld":   "${c.heat_flow(me(u))}",\n    "Q_conv":   "${c.heat_flow(ce(u))}",\n    "Q_rad":    "${c.heat_flow(le(u,m))}",\n    "Q_R":      "${c.heat_flow(ie(u))}",\n    "Q_fluid":  "${c.heat_flow(oe())}",\n    "Cp_fluid": "${c.cp(L(l,m))}",\n    "Cp_fuel":  "${c.cp(Q)}",\n    "Cp_air":   "${c.cp(U)}",\n    "Cp_flue":  "${c.cp(V(u))}",\n    "Vs_flue":  "${c.viscosity(o.flueViscosity(u))}"}\n  `),pe};e.exports={radSection:e=>{let t={};return void 0!==e.t_out?t=m(void 0,e.t_out,e):void 0!==e.m_fuel?t=m(e.m_fuel,void 0,e):e.err+="-wrong call for rad section, no seed for mass fuel or out temp.",t}}},361:(e,t,o)=>{const{newtonRaphson:r,logger:n,LMTD:s,round:a,unitConv:u}=o(170),{options:l,initSystem:c}=o(170),i=c(l.unitSystem);e.exports={shieldSection:e=>{let t=e.t_in_rad,o=(e.t_in_rad+e.t_in_conv)/2,l=e.t_g,c=0;const m=e.duty_rad,_=e.Rfo||0,d=e.Rfi||0,f=e.kw_tube,O=(e,o=t)=>.5*(e+o),p=t=>e.kw_fluid(t),h=e.h_conv||30.66,C=e.N_shld||8,b=e.L_shld||20.024,$=e.Do_shld||.219,g=e.Di_shld||e.Do_shld-e.Sch_rad,w=3.14159,S=C*e.Pitch_shld*b,y=C*w*$*b;n.warn(`Acp_sh: ${a(u.mtoft(S)*u.mtoft(1))}`);const N=e.q_rad_sh,v=e.m_flue,H=e.m_fluid,F=(o,r=t)=>e.Cp_fluid(.5*(o+r)),A=e=>miu(e)*F(e)*3.6/p(e),M=H/3.6/(w*g**2),k=e=>M*g/miu(e),D=v/3.6/(y**2-y),x=(e,t=e)=>p(e)/g*.023*k(e)**.8*A(e)**(1/3)*(miu(e)/miu(t))**.14,P=e=>.092*e-34,W=(e,t=l)=>f/$*.33*A(O(e,t))**(1/3)*($*D/miu(O(e,t)))**.6,I=(e,t=l)=>1/(1/(W(e,t)+P(t))+_),R=(e,r=e,n=o)=>(e=>H*F(e)*(t-e))(n)/y*($/g)*(d+1/x(e,r)+g*Math.log($/g)/(2*f))+e;c=r((r=>N+v*((t,o=l)=>e.Cp_flue(.5*(o+t)))(r)*(l-r)-H*F(o)*(t-o)),l-58,e.NROptions,"Tg_shield");const T=(e,t)=>$/(g*x(e,t))+$/g*d,B=$*Math.log($/g)/2*f,E=(e,t=l)=>1/I(e,t),J=(e,t,o,r)=>1/((e,t,o,r)=>E(e,t)+B+T(o,r))(e,t,o,r),K=(e,t,o,r,n)=>1*J(t,o,r,n)*s(e)+N,Q=(e,o=t)=>H*F(e)*(o-e);n.warn(`"vars to check in shield section",\n    "t_in_sh":    "${i.tempC(o)} vs 1500F",\n    "Q_fluid_sh": "${i.heat_flow(Q(o))}",\n    "Q_sh":       "${i.heat_flow(K(o,l,c,(o+t)/2,R((o+t)/2)))}",\n    "kw_fluid":   "${i.thermal(p(O(o)))}",\n    "h_conv":     "${i.convect(h)}",\n    "duty_rad":   "${i.heat_flow(m)}",\n    "At_rad":     "${i.area(y)}",\n    "Do/Di":      ${a($/g)},\n    "hi":         "${i.convect(x(O(o)))}",\n    "Tw":         "${i.temp(R(O(o)))}",\n    "Tb":         "${i.temp(O(o))}",\n    "hi_complete":"${x(O(t),786.574)}",\n    "ho":         "${i.convect(I(c))}",\n    "hc":         "${i.convect(W(c))}",\n    "miu/miu(tW)":"${Math.pow(miu(O(o))/miu(R(O(o))),.9)}",\n    "miu(Tw)":    "${miu(R(O(o)))}",\n    "miu(Tb)":    "${miu(O(o))}",\n  `),n.default("Uo: ",J(l,c,(o+t)/2,R((o+t)/2))),n.default("R's: ",E(l,c),B,T((o+t)/2,R((o+t)/2))),n.default("h's: ",I(l,c),x(O(o),R(O(o))),W(c),P(l)),n.default("kw's: ",p((o+t)/2),f),n.default("thermo const: ",k((o+t)/2),A((o+t)/2),miu((o+t)/2));const U=r((e=>Q(e)-K(e,l,c,O(e),R(O(e)))),o,e.NROptions,"T_in_shield");Math.abs(U-o)/o>1&&(n.warn("difference for inlet tem, calc: ",U," vs est: ",o),o=U),e.t_in_sh=o,e.t_g_sh=c,n.default("t_in_sh: ",o,"t_g_sh: ",c)}}},170:e=>{const t=(...e)=>{let t=""+e[1][0];for(var o=1;o<e[1].length;o++)t+=" "+e[1][o];switch(e[0]){case"DEBUG":a.verbose&&console.debug(JSON.parse(`{"${e[0]}": ${t}}`));break;case"INFO":console.info(`{ [32;1m${e[0]}[0m: "${t}"}`);break;case"ERROR":console.error(`{ [31;1m${e[0]}[0m: '${t}'}`);break;case"WARN":console.warn(`{ [35;1m${e[0]}[0m: '${t}'}`);break;default:console.log(`{ [34;1m${e[0]}[0m: '${t}'}`)}},o={info:(...e)=>t("INFO",e),warn:(...e)=>t("WARN",e),error:(...e)=>t("ERROR",e),debug:(...e)=>t("DEBUG",e),default:(...e)=>t("DEFAULT",e)},r=273.15,n=298.15,s={RtoK:e=>e*(5/9),KtoR:e=>1.8*e,KtoF:e=>1.8*e-459.67,CtoK:e=>e+r,CtoF:e=>1.8*e+32,FtoC:e=>5/9*(e-32),FtoK:e=>5/9*(e-32)+r,kgtolb:e=>2.20462*e,lbtokg:e=>e/2.20462,kJtoBTU:e=>e/1.05506,BTUtokJ:e=>1.05506*e,fttom:e=>e/3.28084,mtoft:e=>3.28084*e,intom:e=>e/39.3701,mtoin:e=>39.3701*e,CpENtoCpSI:e=>1.05506*e/(5/9)*2.20462,kwENtokwSI:e=>1.05506*e/(5/9)*3.28084,BtuHtoW:e=>e/3.4121416331},a=(()=>{const e={tempToK:r,tempAmbRef:n,verbose:!0,tAmb:n,humidity:0,o2Excess:0,airExcess:0,pAtm:101325,unitSystem:"SI",lang:"en",NROptions:{tolerance:1e-4,epsilon:3e-8,maxIterations:20,h:1e-4,verbose:!0}};return"undefined"==typeof process||(e.verbose="true"==process.argv[2],e.unitSystem=process.argv[3],e.tAmb=r+parseFloat(process.argv[4])||n,e.humidity=parseFloat(process.argv[5])||0,e.o2Excess=.01*parseFloat(process.argv[6])||0,e.airExcess=.01*parseFloat(process.argv[7])||0,e.pAtm=parseFloat(process.argv[8])||101325,e.NROptions.verbose="true"==process.argv[2]),e})();a.verbose&&o.debug(`${JSON.stringify(a,null,2)}`);const u=e=>(Math.round(1e3*e)/1e3).toFixed(3),l=(e,t)=>{const r={...e},n=Object.values(r).reduce(((e,t)=>e+t));for(const e in r)r[e]=r[e]/n;return a.verbose&&o.debug(`{"Normalizing": "${t}", "total": ${n}}`),r},c=({u0:e,u1:t,u2:r,Substance:n})=>0==e||"-"==e?(a.verbose&&o.debug(`"Viscosity func called for '${n}' without coffs"`),()=>0):o=>e+t*o+r*o**2,i={"energy/mol":e=>u(s.kJtoBTU(e))+" Btu/mol","mass/mol":e=>u(2.2046244202*e)+" lb/lb-mol",heat_flow:e=>u(1e-6*s.kJtoBTU(e))+" MMBtu/h",heat_flux:e=>u(s.kJtoBTU(e)/s.mtoft(1)**2)+" Btu/h-ft2",fouling_factor:e=>u(10.763910417*e*1.8/.94781712)+" h-ft2-°F/Btu","energy/mass":e=>u(s.kJtoBTU(e)/s.kgtolb(1))+" Btu/lb","energy/vol":e=>u(s.kJtoBTU(e)/s.mtoft(1)**3)+" Btu/ft3",area:e=>u(10.763910417*e)+" ft2",length:e=>u(s.mtoft(e))+" ft",temp:e=>u(s.KtoR(e))+" °R",tempC:e=>u(s.CtoF(e-r))+" °F",pressure:e=>u(.0001450377*e)+" psi",mass:e=>u(.0022046244202*e)+" lb",mass_flow:e=>u(s.kgtolb(e))+" lb/h",vol_flow:e=>u(s.mtoft(e)**3)+" f3/h",cp:e=>u(.238845896627*e)+" Btu/lb-mol °F",power:e=>u(3.4121416331*e)+" Btu/h",moist:e=>u(1e3*e)+"x10^(-3) lb-H2O/lb",thermal:e=>u(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1))+" BTU/h-ft-F",convect:e=>u(s.kJtoBTU(e)/s.KtoR(1)/s.mtoft(1)**2)+" BTU/h-ft2-F",viscosity:e=>u(1*e)+" cP",system:{en:"English",es:"Inglés"}},m={"energy/mol":e=>u(1*e)+" kJ/mol","mass/mol":e=>u(1*e)+" kg/kmol",heat_flow:e=>u(1e-6*e)+" MJ/h",heat_flux:e=>u(1*e)+" W/m2",fouling_factor:e=>u(1*e)+" m2-K/W","energy/mass":e=>u(1*e)+" kJ/kg","energy/vol":e=>u(1*e)+" kJ/m3",area:e=>u(1*e)+" m2",length:e=>u(1*e)+" m",tempC:e=>u(1*e-r)+" °C",temp:e=>u(1*e)+" K",pressure:e=>u(.001*e)+" kPa",mass:e=>u(.001*e)+" kg",mass_flow:e=>u(1*e)+" kg/h",vol_flow:e=>u(1*e)+" m3/h",cp:e=>u(1*e)+" kJ/kmol K",power:e=>u(1*e)+" W",moist:e=>u(1e3*e)+" g-H2O/kg",thermal:e=>u(1*e)+" kJ/h-m-C",convect:e=>u(1*e)+" kJ/h-m2-C",viscosity:e=>u(1*e)+" cP",system:{en:"SI",es:"SI"}};e.exports={options:a,unitConv:s,newtonRaphson:(e,t,r,n,s)=>{let a,u,l,c,i,m,_,d;"function"!=typeof t&&(s=n,n=r,r=t,t=null);const f=n||{},O=void 0===f.tolerance?1e-7:f.tolerance,p=void 0===f.epsilon?222e-17:f.epsilon,h=void 0===f.h?1e-4:f.h,C=1/h,b=void 0===f.maxIterations?20:f.maxIterations;for(c=0;c++<b;){if(u=e(r),t?l=t(r):(i=e(r+h),m=e(r-h),_=e(r+2*h),d=e(r-2*h),l=(d-_+8*(i-m))*C/12),Math.abs(l)<=p*Math.abs(u))return o.error(`Newton-Raphson (${s}): failed to converged due to nearly zero first derivative`),!1;if(a=r-u/l,Math.abs(a-r)<=O*Math.abs(a))return o.debug(`{"Newton-Raphson":"${s}", "var converged to":${a}, "iterations":${c}}`),a;r=a}return o.error(`Newton-Raphson (${s}): Maximum iterations reached (${b})`),!1},logger:o,round:u,roundDict:(e={})=>{for(const[t,o]of Object.entries(e))isNaN(o)||""===o||(e[t]=u(o))},linearApprox:({x1:e,x2:t,y1:r,y2:n})=>{if("number"!=typeof r)return o.error(`call for linearApprox with bad value: ${r}`),()=>0;if(e==t||null==t||null==n)return()=>r;const s=(n-r)/(t-e);return t=>s*(t-e)+r},initSystem:e=>{if("string"!=typeof e)return a.verbose&&o.warn(`invalid type (${e}) for unit system, using default SI`),m;switch(e.toLowerCase()){case"si":return m;case"english":return i;default:return o.warn(e.toLowerCase()+" - invalid unit system, using default SI"),m}},normalize:l,flueViscosity:(e,t)=>{const o=l(t,"flueViscosity"),r=c(e[34]),n=c(e[31]),s=c(e[6]),a=c(e[3]),u=c(e[2]);return e=>o.CO2*s(e)+o.SO2*r(e)+o.H2O*n(e)+o.O2*u(e)+o.N2*a(e)},LMTD:(e,t,o,r)=>{let n=o-t,s=t=>t-e;return r&&(n=o-t,s=t=>t-e),e=>n-s(e)/ln(n/s(e))}}},684:e=>{"use strict";e.exports=JSON.parse('[{"ID":0,"Substance":"Carbon","Formula":"C","MW":12.011,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":1,"SO2":0,"CO2":1,"H2O":0,"N2":3.773269},{"ID":1,"Substance":"Hydrogen","Formula":"H2","MW":2.0159,"h0":0,"Cp0":14.209,"c0":13.46,"c1":4.6,"c2":-6.85,"c3":3.79,"u0":"-","u1":"-","u2":"-","O2":0.5,"SO2":0,"CO2":0,"H2O":1,"N2":1.886634},{"ID":2,"Substance":"Oxygen","Formula":"O2","MW":31.9988,"h0":0,"Cp0":0.922,"c0":0.88,"c1":-0.0001,"c2":0.54,"c3":-0.33,"u0":0.00455,"u1":0.0000589,"u2":-1.44e-8,"O2":-1,"SO2":0,"CO2":0,"H2O":0,"N2":0},{"ID":3,"Substance":"Nitrogen","Formula":"N2","MW":28.0134,"h0":0,"Cp0":1.042,"c0":1.11,"c1":-0.48,"c2":0.96,"c3":-0.42,"u0":0.00493,"u1":0.0000477,"u2":-1.1e-8,"O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":4,"Substance":"Nitrogen (atm)","Formula":"N2a","MW":28.158,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":0,"SO2":0,"CO2":0,"H2O":0,"N2":1},{"ID":5,"Substance":"Carbon Monoxide","Formula":"CO","MW":28.0104,"h0":-110527,"Cp0":1.041,"c0":1.1,"c1":-0.46,"c2":1,"c3":-0.454,"u0":"-","u1":"-","u2":"-","O2":0.5,"SO2":0,"CO2":1,"H2O":0,"N2":1.886634},{"ID":6,"Substance":"Carbon Dioxide","Formula":"CO2","MW":44.0098,"h0":-393522,"Cp0":0.842,"c0":0.45,"c1":1.67,"c2":-1.27,"c3":0.39,"u0":-0.0000571,"u1":0.0000546,"u2":-1.33e-8,"O2":0,"SO2":0,"CO2":1,"H2O":0,"N2":0},{"ID":7,"Substance":"Methane","Formula":"CH4","MW":16.0428,"h0":-74873,"Cp0":2.254,"c0":1.2,"c1":3.25,"c2":0.75,"c3":-0.71,"u0":"-","u1":"-","u2":"-","O2":2,"SO2":0,"CO2":1,"H2O":2,"N2":7.546539},{"ID":8,"Substance":"Ethane","Formula":"C2H6","MW":30.0697,"h0":-84740,"Cp0":1.766,"c0":0.18,"c1":5.92,"c2":-2.31,"c3":0.29,"u0":"-","u1":"-","u2":"-","O2":3.5,"SO2":0,"CO2":2,"H2O":3,"N2":13.20644},{"ID":9,"Substance":"Propane","Formula":"C3H8","MW":44.0966,"h0":-103900,"Cp0":1.679,"c0":-0.096,"c1":6.95,"c2":-3.6,"c3":0.73,"u0":"-","u1":"-","u2":"-","O2":5,"SO2":0,"CO2":3,"H2O":4,"N2":18.86634},{"ID":10,"Substance":"n-Butane","Formula":"C4H10","MW":58.1235,"h0":-126200,"Cp0":1.716,"c0":0.163,"c1":5.7,"c2":-1.906,"c3":-0.049,"u0":"-","u1":"-","u2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":11,"Substance":"Isobutane","Formula":"iC4H10","MW":58.1235,"h0":-135000,"Cp0":1.547,"c0":0.206,"c1":5.67,"c2":-2.12,"c3":0.183,"u0":"-","u1":"-","u2":"-","O2":6.5,"SO2":0,"CO2":4,"H2O":5,"N2":24.52625},{"ID":12,"Substance":"n-Pentane","Formula":"C5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":13,"Substance":"Isopentane","Formula":"iC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":14,"Substance":"Neopentane","Formula":"nC5H12","MW":72.1504,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":8,"SO2":0,"CO2":5,"H2O":6,"N2":30.18615},{"ID":15,"Substance":"n-Hexane","Formula":"C6H14","MW":86.1773,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":9.5,"SO2":0,"CO2":6,"H2O":7,"N2":35.84606},{"ID":16,"Substance":"Ethylene","Formula":"C2H4","MW":28.0538,"h0":52467,"Cp0":1.548,"c0":0.136,"c1":5.58,"c2":-3,"c3":0.63,"u0":"-","u1":"-","u2":"-","O2":3,"SO2":0,"CO2":2,"H2O":2,"N2":11.3198},{"ID":17,"Substance":"Propylene","Formula":"C3H6","MW":42.0807,"h0":20410,"Cp0":1.437,"c0":0.454,"c1":4.06,"c2":-0.934,"c3":-0.133,"u0":"-","u1":"-","u2":"-","O2":4.5,"SO2":0,"CO2":3,"H2O":3,"N2":16.97971},{"ID":18,"Substance":"n-Butene (Butylene)","Formula":"C4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":19,"Substance":"Isobutene","Formula":"iC4H8","MW":56.1076,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":6,"SO2":0,"CO2":4,"H2O":4,"N2":22.63961},{"ID":20,"Substance":"n-Pentene","Formula":"C5H10","MW":70.1345,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":7.5,"SO2":0,"CO2":5,"H2O":5,"N2":28.29952},{"ID":21,"Substance":"Benzene","Formula":"C6H6","MW":78.1137,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":7.5,"SO2":0,"CO2":6,"H2O":3,"N2":28.29952},{"ID":22,"Substance":"Toluene","Formula":"C7H8","MW":92.1406,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":9,"SO2":0,"CO2":7,"H2O":4,"N2":33.95942},{"ID":23,"Substance":"Xylene","Formula":"C8H10","MW":106.1675,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":10.5,"SO2":0,"CO2":8,"H2O":5,"N2":39.6193},{"ID":24,"Substance":"Acetylene","Formula":"C2H2","MW":26.0379,"h0":226731,"Cp0":1.699,"c0":1.03,"c1":2.91,"c2":-1.92,"c3":0.54,"u0":"-","u1":"-","u2":"-","O2":2.5,"SO2":0,"CO2":2,"H2O":1,"N2":9.433174},{"ID":25,"Substance":"Naphthalene","Formula":"C10H8","MW":128.1736,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":12,"SO2":0,"CO2":10,"H2O":4,"N2":45.27923},{"ID":26,"Substance":"Methyl alcohol-Methanol","Formula":"CH3OH","MW":32.0422,"h0":-201300,"Cp0":1.405,"c0":0.66,"c1":2.21,"c2":0.81,"c3":-0.89,"u0":"-","u1":"-","u2":"-","O2":1.5,"SO2":0,"CO2":1,"H2O":2,"N2":5.659904},{"ID":27,"Substance":"Ethyl alcohol-Ethanol","Formula":"C2H5OH","MW":46.0691,"h0":-235000,"Cp0":1.427,"c0":0.2,"c1":-4.65,"c2":-1.82,"c3":0.03,"u0":"-","u1":"-","u2":"-","O2":3,"SO2":0,"CO2":2,"H2O":3,"N2":11.3198},{"ID":28,"Substance":"Ammonia","Formula":"NH3","MW":17.0306,"h0":-45720,"Cp0":2.13,"c0":1.6,"c1":1.4,"c2":1,"c3":-0.7,"u0":"-","u1":"-","u2":"-","O2":0.75,"SO2":0,"CO2":0,"H2O":1.5,"N2":2.82995},{"ID":29,"Substance":"Sulfur","Formula":"S","MW":32.066,"h0":0,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":1,"SO2":1,"CO2":0,"H2O":0,"N2":3.773269},{"ID":30,"Substance":"Hydrogen sulfide","Formula":"H2S","MW":34.0819,"h0":"-","Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":-0.000545,"u1":0.0000502,"u2":-1.3e-8,"O2":1.5,"SO2":1,"CO2":0,"H2O":1,"N2":5.659904},{"ID":31,"Substance":"Steam (Water vapor)","Formula":"H2O","MW":18.0153,"h0":-241826,"Cp0":1.872,"c0":1.79,"c1":0.107,"c2":0.586,"c3":-0.2,"u0":-0.0063,"u1":0.0000493,"u2":-5.4e-9,"O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":32,"Substance":"Water (liquid)","Formula":"H2Ol","MW":18.0153,"h0":-285830,"Cp0":"-","c0":"-","c1":"-","c2":"-","c3":"-","u0":"-","u1":"-","u2":"-","O2":0,"SO2":0,"CO2":0,"H2O":1,"N2":0},{"ID":33,"Substance":"Dry Air","Formula":"N2+O2","MW":28.8483,"h0":0,"Cp0":1.004,"c0":1.05,"c1":-0.365,"c2":0.85,"c3":-0.39,"u0":"-","u1":"-","u2":"-","O2":0.2095,"SO2":0,"CO2":0,"H2O":0,"N2":0.7905},{"ID":34,"Substance":"Sulfur dioxide","Formula":"SO2","MW":62.059,"h0":-296842,"Cp0":0.624,"c0":0.37,"c1":1.05,"c2":-0.77,"c3":0.21,"u0":0,"u1":0,"u2":0,"O2":0,"SO2":1,"CO2":0,"H2O":0,"N2":0}]')}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,o),s.exports}(()=>{const{newtonRaphson:e,options:t,logger:r,linearApprox:n,unitConv:s,initSystem:a}=o(170),{combSection:u}=o(392),{radSection:l}=o(113),{shieldSection:c}=o(361),{browserProcess:i}=o(620),m=o(684),_=(t,o)=>{const i=(e=>({p_atm:e.pAtm,t_air:e.tAmb,t_fuel:e.tAmb,t_amb:e.tAmb,humidity:e.humidity,airExcess:e.airExcess,o2Excess:e.o2Excess,Rfi:0,duty_rad_dist:.7,efficiency:.8,heat_loss_percent:.015,max_duty:s.BTUtokJ(71527.6),m_fluid:500590,miu_fluid:n({x1:s.FtoK(678),y1:1.45,x2:s.FtoK(772),y2:.96}),Cp_fluid:n({x1:s.FtoK(678),y1:s.CpENtoCpSI(.676),x2:s.FtoK(772),y2:s.CpENtoCpSI(.703)}),kw_fluid:n({x1:s.FtoK(678),y1:s.kwENtokwSI(.038),x2:s.FtoK(772),y2:s.kwENtokwSI(.035)}),t_in_conv:s.FtoK(678),t_out:s.FtoK(772),CtoC:s.intom(2),h_conv:s.BTUtokJ(1.5)/s.RtoK(1)/s.fttom(1)**2,kw_tube:s.BTUtokJ(11.508)/s.RtoK(1)/s.fttom(1),Pass_number:2,Pitch_rad:s.intom(8),N_rad:42,L_rad:s.fttom(62),Do_rad:s.intom(8.625),Sch_rad:s.intom(.322),Di_rad:s.intom(8.303),Width_rad:17.5,Length_rad:64.55,Height_rad:27,N_cnv:40,L_cnv:s.fttom(60),Do_cnv:s.intom(6.625),Sch_cnv:s.intom(.28),Pitch_shld:s.intom(6),N_shld:16,L_shld:s.fttom(60),Do_shld:s.intom(6.625),verbose:e.verbose,unitSystem:e.unitSystem,lang:e.lang,NROptions:e.NROptions,units:a(e.unitSystem)}))(o);if(0!=i.o2Excess){const o=e((e=>{const o=u(e,t,i);return r.info("O2%: "+o.flows["O2_%"]+" vs O2excess: "+100*i.o2Excess),o.flows["O2_%"]/100-i.o2Excess}),.5,i.NROptions,"o2_excess_to_air");o&&(i.airExcess=o)}else i.airExcess=o.airExcess;const m=u(i.airExcess,t,i);return m.rad_result=l(i),c(i),m};let d={H2:.1142,N2:.0068,CO:.0066,CO2:.0254,CH4:.5647,C2H6:.1515,C3H8:.0622,C4H10:.0176,iC4H10:.0075,C2H4:.0158,C3H6:.0277};"undefined"!=typeof window?i(d,m,t,_):_(d,t)})()})();